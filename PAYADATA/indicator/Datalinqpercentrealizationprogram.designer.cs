#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PAYADATA.indicator
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="payazobnet")]
	public partial class DatalinqpercentrealizationprogramDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertmserviceprogram(mserviceprogram instance);
    partial void Updatemserviceprogram(mserviceprogram instance);
    partial void Deletemserviceprogram(mserviceprogram instance);
    partial void Insertmserviceprogramheader(mserviceprogramheader instance);
    partial void Updatemserviceprogramheader(mserviceprogramheader instance);
    partial void Deletemserviceprogramheader(mserviceprogramheader instance);
    partial void Insertmpercent_realization_program(mpercent_realization_program instance);
    partial void Updatempercent_realization_program(mpercent_realization_program instance);
    partial void Deletempercent_realization_program(mpercent_realization_program instance);
    #endregion
		
		public DatalinqpercentrealizationprogramDataContext() : 
				base(global::PAYADATA.Properties.Settings.Default.payazobnetConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatalinqpercentrealizationprogramDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatalinqpercentrealizationprogramDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatalinqpercentrealizationprogramDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatalinqpercentrealizationprogramDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<mserviceprogram> mserviceprograms
		{
			get
			{
				return this.GetTable<mserviceprogram>();
			}
		}
		
		public System.Data.Linq.Table<mserviceprogramheader> mserviceprogramheaders
		{
			get
			{
				return this.GetTable<mserviceprogramheader>();
			}
		}
		
		public System.Data.Linq.Table<mpercent_realization_program> mpercent_realization_programs
		{
			get
			{
				return this.GetTable<mpercent_realization_program>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mserviceprogram")]
	public partial class mserviceprogram : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private System.Nullable<int> _xidservice;
		
		private string _xdevicecod;
		
		private string _xdate;
		
		private string _xtimestart;
		
		private string _xtimeend;
		
		private bool _xMonthly;
		
		private System.Nullable<int> _xresult;
		
		private string _xexplain;
		
		private EntityRef<mserviceprogramheader> _mserviceprogramheader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxidserviceChanging(System.Nullable<int> value);
    partial void OnxidserviceChanged();
    partial void OnxdevicecodChanging(string value);
    partial void OnxdevicecodChanged();
    partial void OnxdateChanging(string value);
    partial void OnxdateChanged();
    partial void OnxtimestartChanging(string value);
    partial void OnxtimestartChanged();
    partial void OnxtimeendChanging(string value);
    partial void OnxtimeendChanged();
    partial void OnxMonthlyChanging(bool value);
    partial void OnxMonthlyChanged();
    partial void OnxresultChanging(System.Nullable<int> value);
    partial void OnxresultChanged();
    partial void OnxexplainChanging(string value);
    partial void OnxexplainChanged();
    #endregion
		
		public mserviceprogram()
		{
			this._mserviceprogramheader = default(EntityRef<mserviceprogramheader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xidservice", DbType="Int")]
		public System.Nullable<int> xidservice
		{
			get
			{
				return this._xidservice;
			}
			set
			{
				if ((this._xidservice != value))
				{
					if (this._mserviceprogramheader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnxidserviceChanging(value);
					this.SendPropertyChanging();
					this._xidservice = value;
					this.SendPropertyChanged("xidservice");
					this.OnxidserviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdevicecod", DbType="NChar(6)")]
		public string xdevicecod
		{
			get
			{
				return this._xdevicecod;
			}
			set
			{
				if ((this._xdevicecod != value))
				{
					this.OnxdevicecodChanging(value);
					this.SendPropertyChanging();
					this._xdevicecod = value;
					this.SendPropertyChanged("xdevicecod");
					this.OnxdevicecodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdate", DbType="Char(10)")]
		public string xdate
		{
			get
			{
				return this._xdate;
			}
			set
			{
				if ((this._xdate != value))
				{
					this.OnxdateChanging(value);
					this.SendPropertyChanging();
					this._xdate = value;
					this.SendPropertyChanged("xdate");
					this.OnxdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtimestart", DbType="NChar(5)")]
		public string xtimestart
		{
			get
			{
				return this._xtimestart;
			}
			set
			{
				if ((this._xtimestart != value))
				{
					this.OnxtimestartChanging(value);
					this.SendPropertyChanging();
					this._xtimestart = value;
					this.SendPropertyChanged("xtimestart");
					this.OnxtimestartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtimeend", DbType="NChar(5)")]
		public string xtimeend
		{
			get
			{
				return this._xtimeend;
			}
			set
			{
				if ((this._xtimeend != value))
				{
					this.OnxtimeendChanging(value);
					this.SendPropertyChanging();
					this._xtimeend = value;
					this.SendPropertyChanged("xtimeend");
					this.OnxtimeendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xMonthly", DbType="Bit NOT NULL")]
		public bool xMonthly
		{
			get
			{
				return this._xMonthly;
			}
			set
			{
				if ((this._xMonthly != value))
				{
					this.OnxMonthlyChanging(value);
					this.SendPropertyChanging();
					this._xMonthly = value;
					this.SendPropertyChanged("xMonthly");
					this.OnxMonthlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xresult", DbType="Int")]
		public System.Nullable<int> xresult
		{
			get
			{
				return this._xresult;
			}
			set
			{
				if ((this._xresult != value))
				{
					this.OnxresultChanging(value);
					this.SendPropertyChanging();
					this._xresult = value;
					this.SendPropertyChanged("xresult");
					this.OnxresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xexplain", DbType="NVarChar(MAX)")]
		public string xexplain
		{
			get
			{
				return this._xexplain;
			}
			set
			{
				if ((this._xexplain != value))
				{
					this.OnxexplainChanging(value);
					this.SendPropertyChanging();
					this._xexplain = value;
					this.SendPropertyChanged("xexplain");
					this.OnxexplainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mserviceprogramheader_mserviceprogram", Storage="_mserviceprogramheader", ThisKey="xidservice", OtherKey="xid", IsForeignKey=true)]
		public mserviceprogramheader mserviceprogramheader
		{
			get
			{
				return this._mserviceprogramheader.Entity;
			}
			set
			{
				mserviceprogramheader previousValue = this._mserviceprogramheader.Entity;
				if (((previousValue != value) 
							|| (this._mserviceprogramheader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mserviceprogramheader.Entity = null;
						previousValue.mserviceprograms.Remove(this);
					}
					this._mserviceprogramheader.Entity = value;
					if ((value != null))
					{
						value.mserviceprograms.Add(this);
						this._xidservice = value.xid;
					}
					else
					{
						this._xidservice = default(Nullable<int>);
					}
					this.SendPropertyChanged("mserviceprogramheader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mserviceprogramheader")]
	public partial class mserviceprogramheader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _xyear;
		
		private string _xmonth;
		
		private System.Nullable<bool> _xismonthly;
		
		private System.Nullable<bool> _xCertified_net_Manager;
		
		private System.Nullable<int> _xiduser_Confirms_net;
		
		private System.Nullable<bool> _xCertified_Product_Manager;
		
		private System.Nullable<int> _xiduser_confirms_product;
		
		private System.Nullable<bool> _xCertified_Planning_Manager;
		
		private System.Nullable<int> _xiduser_confirms_planing;
		
		private System.Nullable<bool> _xCertified_Manager;
		
		private System.Nullable<int> _xiduser_confirms_manager;
		
		private EntitySet<mserviceprogram> _mserviceprograms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxyearChanging(string value);
    partial void OnxyearChanged();
    partial void OnxmonthChanging(string value);
    partial void OnxmonthChanged();
    partial void OnxismonthlyChanging(System.Nullable<bool> value);
    partial void OnxismonthlyChanged();
    partial void OnxCertified_net_ManagerChanging(System.Nullable<bool> value);
    partial void OnxCertified_net_ManagerChanged();
    partial void Onxiduser_Confirms_netChanging(System.Nullable<int> value);
    partial void Onxiduser_Confirms_netChanged();
    partial void OnxCertified_Product_ManagerChanging(System.Nullable<bool> value);
    partial void OnxCertified_Product_ManagerChanged();
    partial void Onxiduser_confirms_productChanging(System.Nullable<int> value);
    partial void Onxiduser_confirms_productChanged();
    partial void OnxCertified_Planning_ManagerChanging(System.Nullable<bool> value);
    partial void OnxCertified_Planning_ManagerChanged();
    partial void Onxiduser_confirms_planingChanging(System.Nullable<int> value);
    partial void Onxiduser_confirms_planingChanged();
    partial void OnxCertified_ManagerChanging(System.Nullable<bool> value);
    partial void OnxCertified_ManagerChanged();
    partial void Onxiduser_confirms_managerChanging(System.Nullable<int> value);
    partial void Onxiduser_confirms_managerChanged();
    #endregion
		
		public mserviceprogramheader()
		{
			this._mserviceprograms = new EntitySet<mserviceprogram>(new Action<mserviceprogram>(this.attach_mserviceprograms), new Action<mserviceprogram>(this.detach_mserviceprograms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xyear", DbType="NChar(4)")]
		public string xyear
		{
			get
			{
				return this._xyear;
			}
			set
			{
				if ((this._xyear != value))
				{
					this.OnxyearChanging(value);
					this.SendPropertyChanging();
					this._xyear = value;
					this.SendPropertyChanged("xyear");
					this.OnxyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xmonth", DbType="NChar(2)")]
		public string xmonth
		{
			get
			{
				return this._xmonth;
			}
			set
			{
				if ((this._xmonth != value))
				{
					this.OnxmonthChanging(value);
					this.SendPropertyChanging();
					this._xmonth = value;
					this.SendPropertyChanged("xmonth");
					this.OnxmonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xismonthly", DbType="Bit")]
		public System.Nullable<bool> xismonthly
		{
			get
			{
				return this._xismonthly;
			}
			set
			{
				if ((this._xismonthly != value))
				{
					this.OnxismonthlyChanging(value);
					this.SendPropertyChanging();
					this._xismonthly = value;
					this.SendPropertyChanged("xismonthly");
					this.OnxismonthlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xCertified_net_Manager", DbType="Bit")]
		public System.Nullable<bool> xCertified_net_Manager
		{
			get
			{
				return this._xCertified_net_Manager;
			}
			set
			{
				if ((this._xCertified_net_Manager != value))
				{
					this.OnxCertified_net_ManagerChanging(value);
					this.SendPropertyChanging();
					this._xCertified_net_Manager = value;
					this.SendPropertyChanged("xCertified_net_Manager");
					this.OnxCertified_net_ManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xiduser_Confirms_net", DbType="Int")]
		public System.Nullable<int> xiduser_Confirms_net
		{
			get
			{
				return this._xiduser_Confirms_net;
			}
			set
			{
				if ((this._xiduser_Confirms_net != value))
				{
					this.Onxiduser_Confirms_netChanging(value);
					this.SendPropertyChanging();
					this._xiduser_Confirms_net = value;
					this.SendPropertyChanged("xiduser_Confirms_net");
					this.Onxiduser_Confirms_netChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xCertified_Product_Manager", DbType="Bit")]
		public System.Nullable<bool> xCertified_Product_Manager
		{
			get
			{
				return this._xCertified_Product_Manager;
			}
			set
			{
				if ((this._xCertified_Product_Manager != value))
				{
					this.OnxCertified_Product_ManagerChanging(value);
					this.SendPropertyChanging();
					this._xCertified_Product_Manager = value;
					this.SendPropertyChanged("xCertified_Product_Manager");
					this.OnxCertified_Product_ManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xiduser_confirms_product", DbType="Int")]
		public System.Nullable<int> xiduser_confirms_product
		{
			get
			{
				return this._xiduser_confirms_product;
			}
			set
			{
				if ((this._xiduser_confirms_product != value))
				{
					this.Onxiduser_confirms_productChanging(value);
					this.SendPropertyChanging();
					this._xiduser_confirms_product = value;
					this.SendPropertyChanged("xiduser_confirms_product");
					this.Onxiduser_confirms_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xCertified_Planning_Manager", DbType="Bit")]
		public System.Nullable<bool> xCertified_Planning_Manager
		{
			get
			{
				return this._xCertified_Planning_Manager;
			}
			set
			{
				if ((this._xCertified_Planning_Manager != value))
				{
					this.OnxCertified_Planning_ManagerChanging(value);
					this.SendPropertyChanging();
					this._xCertified_Planning_Manager = value;
					this.SendPropertyChanged("xCertified_Planning_Manager");
					this.OnxCertified_Planning_ManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xiduser_confirms_planing", DbType="Int")]
		public System.Nullable<int> xiduser_confirms_planing
		{
			get
			{
				return this._xiduser_confirms_planing;
			}
			set
			{
				if ((this._xiduser_confirms_planing != value))
				{
					this.Onxiduser_confirms_planingChanging(value);
					this.SendPropertyChanging();
					this._xiduser_confirms_planing = value;
					this.SendPropertyChanged("xiduser_confirms_planing");
					this.Onxiduser_confirms_planingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xCertified_Manager", DbType="Bit")]
		public System.Nullable<bool> xCertified_Manager
		{
			get
			{
				return this._xCertified_Manager;
			}
			set
			{
				if ((this._xCertified_Manager != value))
				{
					this.OnxCertified_ManagerChanging(value);
					this.SendPropertyChanging();
					this._xCertified_Manager = value;
					this.SendPropertyChanged("xCertified_Manager");
					this.OnxCertified_ManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xiduser_confirms_manager", DbType="Int")]
		public System.Nullable<int> xiduser_confirms_manager
		{
			get
			{
				return this._xiduser_confirms_manager;
			}
			set
			{
				if ((this._xiduser_confirms_manager != value))
				{
					this.Onxiduser_confirms_managerChanging(value);
					this.SendPropertyChanging();
					this._xiduser_confirms_manager = value;
					this.SendPropertyChanged("xiduser_confirms_manager");
					this.Onxiduser_confirms_managerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mserviceprogramheader_mserviceprogram", Storage="_mserviceprograms", ThisKey="xid", OtherKey="xidservice")]
		public EntitySet<mserviceprogram> mserviceprograms
		{
			get
			{
				return this._mserviceprograms;
			}
			set
			{
				this._mserviceprograms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mserviceprograms(mserviceprogram entity)
		{
			this.SendPropertyChanging();
			entity.mserviceprogramheader = this;
		}
		
		private void detach_mserviceprograms(mserviceprogram entity)
		{
			this.SendPropertyChanging();
			entity.mserviceprogramheader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mpercent_realization_program")]
	public partial class mpercent_realization_program : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _xdate;
		
		private System.Nullable<int> _xnumberofprogramservice;
		
		private System.Nullable<int> _xnumberofprogramservicedone;
		
		private System.Nullable<double> _xpercent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxdateChanging(string value);
    partial void OnxdateChanged();
    partial void OnxnumberofprogramserviceChanging(System.Nullable<int> value);
    partial void OnxnumberofprogramserviceChanged();
    partial void OnxnumberofprogramservicedoneChanging(System.Nullable<int> value);
    partial void OnxnumberofprogramservicedoneChanged();
    partial void OnxpercentChanging(System.Nullable<double> value);
    partial void OnxpercentChanged();
    #endregion
		
		public mpercent_realization_program()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdate", DbType="NChar(7)")]
		public string xdate
		{
			get
			{
				return this._xdate;
			}
			set
			{
				if ((this._xdate != value))
				{
					this.OnxdateChanging(value);
					this.SendPropertyChanging();
					this._xdate = value;
					this.SendPropertyChanged("xdate");
					this.OnxdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnumberofprogramservice", DbType="Int")]
		public System.Nullable<int> xnumberofprogramservice
		{
			get
			{
				return this._xnumberofprogramservice;
			}
			set
			{
				if ((this._xnumberofprogramservice != value))
				{
					this.OnxnumberofprogramserviceChanging(value);
					this.SendPropertyChanging();
					this._xnumberofprogramservice = value;
					this.SendPropertyChanged("xnumberofprogramservice");
					this.OnxnumberofprogramserviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnumberofprogramservicedone", DbType="Int")]
		public System.Nullable<int> xnumberofprogramservicedone
		{
			get
			{
				return this._xnumberofprogramservicedone;
			}
			set
			{
				if ((this._xnumberofprogramservicedone != value))
				{
					this.OnxnumberofprogramservicedoneChanging(value);
					this.SendPropertyChanging();
					this._xnumberofprogramservicedone = value;
					this.SendPropertyChanged("xnumberofprogramservicedone");
					this.OnxnumberofprogramservicedoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xpercent", DbType="Float")]
		public System.Nullable<double> xpercent
		{
			get
			{
				return this._xpercent;
			}
			set
			{
				if ((this._xpercent != value))
				{
					this.OnxpercentChanging(value);
					this.SendPropertyChanging();
					this._xpercent = value;
					this.SendPropertyChanged("xpercent");
					this.OnxpercentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
