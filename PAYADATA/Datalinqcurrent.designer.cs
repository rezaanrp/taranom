#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PAYADATA
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="payazobnet")]
	public partial class DatalinqcurrentDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertmcurrentreng(mcurrentreng instance);
    partial void Updatemcurrentreng(mcurrentreng instance);
    partial void Deletemcurrentreng(mcurrentreng instance);
    partial void Insertmcurren(mcurren instance);
    partial void Updatemcurren(mcurren instance);
    partial void Deletemcurren(mcurren instance);
    #endregion
		
		public DatalinqcurrentDataContext() : 
				base(global::PAYADATA.Properties.Settings.Default.payazobnetConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatalinqcurrentDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatalinqcurrentDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatalinqcurrentDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatalinqcurrentDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<mcurrenttype> mcurrenttypes
		{
			get
			{
				return this.GetTable<mcurrenttype>();
			}
		}
		
		public System.Data.Linq.Table<mcurrentreng> mcurrentrengs
		{
			get
			{
				return this.GetTable<mcurrentreng>();
			}
		}
		
		public System.Data.Linq.Table<mcurrentcommsg> mcurrentcommsgs
		{
			get
			{
				return this.GetTable<mcurrentcommsg>();
			}
		}
		
		public System.Data.Linq.Table<mcurren> mcurrens
		{
			get
			{
				return this.GetTable<mcurren>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mcurrenttype")]
	public partial class mcurrenttype
	{
		
		private int _xid;
		
		private string _xcurrentypename;
		
		public mcurrenttype()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this._xid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcurrentypename", DbType="NVarChar(50)")]
		public string xcurrentypename
		{
			get
			{
				return this._xcurrentypename;
			}
			set
			{
				if ((this._xcurrentypename != value))
				{
					this._xcurrentypename = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mcurrentreng")]
	public partial class mcurrentreng : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _xdevicecod;
		
		private System.Nullable<int> _xidcurrenttype;
		
		private float _xmincurrent;
		
		private float _xmidcurrent;
		
		private float _xmaxcurrent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxdevicecodChanging(string value);
    partial void OnxdevicecodChanged();
    partial void OnxidcurrenttypeChanging(System.Nullable<int> value);
    partial void OnxidcurrenttypeChanged();
    partial void OnxmincurrentChanging(float value);
    partial void OnxmincurrentChanged();
    partial void OnxmidcurrentChanging(float value);
    partial void OnxmidcurrentChanged();
    partial void OnxmaxcurrentChanging(float value);
    partial void OnxmaxcurrentChanged();
    #endregion
		
		public mcurrentreng()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdevicecod", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string xdevicecod
		{
			get
			{
				return this._xdevicecod;
			}
			set
			{
				if ((this._xdevicecod != value))
				{
					this.OnxdevicecodChanging(value);
					this.SendPropertyChanging();
					this._xdevicecod = value;
					this.SendPropertyChanged("xdevicecod");
					this.OnxdevicecodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xidcurrenttype", DbType="Int")]
		public System.Nullable<int> xidcurrenttype
		{
			get
			{
				return this._xidcurrenttype;
			}
			set
			{
				if ((this._xidcurrenttype != value))
				{
					this.OnxidcurrenttypeChanging(value);
					this.SendPropertyChanging();
					this._xidcurrenttype = value;
					this.SendPropertyChanged("xidcurrenttype");
					this.OnxidcurrenttypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xmincurrent", DbType="Real NOT NULL")]
		public float xmincurrent
		{
			get
			{
				return this._xmincurrent;
			}
			set
			{
				if ((this._xmincurrent != value))
				{
					this.OnxmincurrentChanging(value);
					this.SendPropertyChanging();
					this._xmincurrent = value;
					this.SendPropertyChanged("xmincurrent");
					this.OnxmincurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xmidcurrent", DbType="Real NOT NULL")]
		public float xmidcurrent
		{
			get
			{
				return this._xmidcurrent;
			}
			set
			{
				if ((this._xmidcurrent != value))
				{
					this.OnxmidcurrentChanging(value);
					this.SendPropertyChanging();
					this._xmidcurrent = value;
					this.SendPropertyChanged("xmidcurrent");
					this.OnxmidcurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xmaxcurrent", DbType="Real NOT NULL")]
		public float xmaxcurrent
		{
			get
			{
				return this._xmaxcurrent;
			}
			set
			{
				if ((this._xmaxcurrent != value))
				{
					this.OnxmaxcurrentChanging(value);
					this.SendPropertyChanging();
					this._xmaxcurrent = value;
					this.SendPropertyChanged("xmaxcurrent");
					this.OnxmaxcurrentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mcurrentcommsg")]
	public partial class mcurrentcommsg
	{
		
		private int _xid;
		
		private string _xname;
		
		private string _xcodtype;
		
		public mcurrentcommsg()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this._xid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname", DbType="NVarChar(50)")]
		public string xname
		{
			get
			{
				return this._xname;
			}
			set
			{
				if ((this._xname != value))
				{
					this._xname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcodtype", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string xcodtype
		{
			get
			{
				return this._xcodtype;
			}
			set
			{
				if ((this._xcodtype != value))
				{
					this._xcodtype = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mcurren")]
	public partial class mcurren : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private int _xidchecklist;
		
		private int _xidcurrentrenge;
		
		private bool _xcheckkist;
		
		private System.Nullable<float> _xcurrentR;
		
		private System.Nullable<float> _xcurrentS;
		
		private System.Nullable<float> _xcurrentT;
		
		private string _xnot;
		
		private string _xcurrentmsg;
		
		private string _xdate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxidchecklistChanging(int value);
    partial void OnxidchecklistChanged();
    partial void OnxidcurrentrengeChanging(int value);
    partial void OnxidcurrentrengeChanged();
    partial void OnxcheckkistChanging(bool value);
    partial void OnxcheckkistChanged();
    partial void OnxcurrentRChanging(System.Nullable<float> value);
    partial void OnxcurrentRChanged();
    partial void OnxcurrentSChanging(System.Nullable<float> value);
    partial void OnxcurrentSChanged();
    partial void OnxcurrentTChanging(System.Nullable<float> value);
    partial void OnxcurrentTChanged();
    partial void OnxnotChanging(string value);
    partial void OnxnotChanged();
    partial void OnxcurrentmsgChanging(string value);
    partial void OnxcurrentmsgChanged();
    partial void OnxdateChanging(string value);
    partial void OnxdateChanged();
    #endregion
		
		public mcurren()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xidchecklist", DbType="Int NOT NULL")]
		public int xidchecklist
		{
			get
			{
				return this._xidchecklist;
			}
			set
			{
				if ((this._xidchecklist != value))
				{
					this.OnxidchecklistChanging(value);
					this.SendPropertyChanging();
					this._xidchecklist = value;
					this.SendPropertyChanged("xidchecklist");
					this.OnxidchecklistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xidcurrentrenge", DbType="Int NOT NULL")]
		public int xidcurrentrenge
		{
			get
			{
				return this._xidcurrentrenge;
			}
			set
			{
				if ((this._xidcurrentrenge != value))
				{
					this.OnxidcurrentrengeChanging(value);
					this.SendPropertyChanging();
					this._xidcurrentrenge = value;
					this.SendPropertyChanged("xidcurrentrenge");
					this.OnxidcurrentrengeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcheckkist", DbType="Bit NOT NULL")]
		public bool xcheckkist
		{
			get
			{
				return this._xcheckkist;
			}
			set
			{
				if ((this._xcheckkist != value))
				{
					this.OnxcheckkistChanging(value);
					this.SendPropertyChanging();
					this._xcheckkist = value;
					this.SendPropertyChanged("xcheckkist");
					this.OnxcheckkistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcurrentR", DbType="Real")]
		public System.Nullable<float> xcurrentR
		{
			get
			{
				return this._xcurrentR;
			}
			set
			{
				if ((this._xcurrentR != value))
				{
					this.OnxcurrentRChanging(value);
					this.SendPropertyChanging();
					this._xcurrentR = value;
					this.SendPropertyChanged("xcurrentR");
					this.OnxcurrentRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcurrentS", DbType="Real")]
		public System.Nullable<float> xcurrentS
		{
			get
			{
				return this._xcurrentS;
			}
			set
			{
				if ((this._xcurrentS != value))
				{
					this.OnxcurrentSChanging(value);
					this.SendPropertyChanging();
					this._xcurrentS = value;
					this.SendPropertyChanged("xcurrentS");
					this.OnxcurrentSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcurrentT", DbType="Real")]
		public System.Nullable<float> xcurrentT
		{
			get
			{
				return this._xcurrentT;
			}
			set
			{
				if ((this._xcurrentT != value))
				{
					this.OnxcurrentTChanging(value);
					this.SendPropertyChanging();
					this._xcurrentT = value;
					this.SendPropertyChanged("xcurrentT");
					this.OnxcurrentTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnot", DbType="NVarChar(MAX)")]
		public string xnot
		{
			get
			{
				return this._xnot;
			}
			set
			{
				if ((this._xnot != value))
				{
					this.OnxnotChanging(value);
					this.SendPropertyChanging();
					this._xnot = value;
					this.SendPropertyChanged("xnot");
					this.OnxnotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcurrentmsg", DbType="NChar(3)")]
		public string xcurrentmsg
		{
			get
			{
				return this._xcurrentmsg;
			}
			set
			{
				if ((this._xcurrentmsg != value))
				{
					this.OnxcurrentmsgChanging(value);
					this.SendPropertyChanging();
					this._xcurrentmsg = value;
					this.SendPropertyChanged("xcurrentmsg");
					this.OnxcurrentmsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdate", DbType="NChar(10)")]
		public string xdate
		{
			get
			{
				return this._xdate;
			}
			set
			{
				if ((this._xdate != value))
				{
					this.OnxdateChanging(value);
					this.SendPropertyChanging();
					this._xdate = value;
					this.SendPropertyChanged("xdate");
					this.OnxdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
