#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PAYADATA.interuptcomp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="payazobnet")]
	public partial class data_interupt_compDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertobjecttable(objecttable instance);
    partial void Updateobjecttable(objecttable instance);
    partial void Deleteobjecttable(objecttable instance);
    partial void Insertmworkergroup(mworkergroup instance);
    partial void Updatemworkergroup(mworkergroup instance);
    partial void Deletemworkergroup(mworkergroup instance);
    partial void Insertmworker(mworker instance);
    partial void Updatemworker(mworker instance);
    partial void Deletemworker(mworker instance);
    partial void Insertmallobject(mallobject instance);
    partial void Updatemallobject(mallobject instance);
    partial void Deletemallobject(mallobject instance);
    partial void Insertdemuercause(demuercause instance);
    partial void Updatedemuercause(demuercause instance);
    partial void Deletedemuercause(demuercause instance);
    partial void Insertmserviceman_hour(mserviceman_hour instance);
    partial void Updatemserviceman_hour(mserviceman_hour instance);
    partial void Deletemserviceman_hour(mserviceman_hour instance);
    partial void Inserttablelogin(tablelogin instance);
    partial void Updatetablelogin(tablelogin instance);
    partial void Deletetablelogin(tablelogin instance);
    partial void Insertdevice(device instance);
    partial void Updatedevice(device instance);
    partial void Deletedevice(device instance);
    partial void Insertmdetailsdevice(mdetailsdevice instance);
    partial void Updatemdetailsdevice(mdetailsdevice instance);
    partial void Deletemdetailsdevice(mdetailsdevice instance);
    partial void Insertmselectdemuer(mselectdemuer instance);
    partial void Updatemselectdemuer(mselectdemuer instance);
    partial void Deletemselectdemuer(mselectdemuer instance);
    partial void Insertmobject_disposal(mobject_disposal instance);
    partial void Updatemobject_disposal(mobject_disposal instance);
    partial void Deletemobject_disposal(mobject_disposal instance);
    partial void Insertinterupt_comp(interupt_comp instance);
    partial void Updateinterupt_comp(interupt_comp instance);
    partial void Deleteinterupt_comp(interupt_comp instance);
    #endregion
		
		public data_interupt_compDataContext() : 
				base(global::PAYADATA.Properties.Settings.Default.payazobnetConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public data_interupt_compDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public data_interupt_compDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public data_interupt_compDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public data_interupt_compDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<objecttable> objecttables
		{
			get
			{
				return this.GetTable<objecttable>();
			}
		}
		
		public System.Data.Linq.Table<mworkergroup> mworkergroups
		{
			get
			{
				return this.GetTable<mworkergroup>();
			}
		}
		
		public System.Data.Linq.Table<mworker> mworkers
		{
			get
			{
				return this.GetTable<mworker>();
			}
		}
		
		public System.Data.Linq.Table<mallobject> mallobjects
		{
			get
			{
				return this.GetTable<mallobject>();
			}
		}
		
		public System.Data.Linq.Table<demuercause> demuercauses
		{
			get
			{
				return this.GetTable<demuercause>();
			}
		}
		
		public System.Data.Linq.Table<mserviceman_hour> mserviceman_hours
		{
			get
			{
				return this.GetTable<mserviceman_hour>();
			}
		}
		
		public System.Data.Linq.Table<tablelogin> tablelogins
		{
			get
			{
				return this.GetTable<tablelogin>();
			}
		}
		
		public System.Data.Linq.Table<device> devices
		{
			get
			{
				return this.GetTable<device>();
			}
		}
		
		public System.Data.Linq.Table<mdetailsdevice> mdetailsdevices
		{
			get
			{
				return this.GetTable<mdetailsdevice>();
			}
		}
		
		public System.Data.Linq.Table<mselectdemuer> mselectdemuers
		{
			get
			{
				return this.GetTable<mselectdemuer>();
			}
		}
		
		public System.Data.Linq.Table<mobject_disposal> mobject_disposals
		{
			get
			{
				return this.GetTable<mobject_disposal>();
			}
		}
		
		public System.Data.Linq.Table<interupt_comp> interupt_comps
		{
			get
			{
				return this.GetTable<interupt_comp>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Deletealldemuerfointerupt")]
		public int Deletealldemuerfointerupt([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_idparent", DbType="Int")] System.Nullable<int> original_idparent, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_idparent, type);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Insertinto_interuptplan")]
		public ISingleResult<Insertinto_interuptplanResult> Insertinto_interuptplan([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime2")] System.Nullable<System.DateTime> xdate_plan, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xidserviceprogram, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime2")] System.Nullable<System.DateTime> xdatestart_interupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string xtime_startinterupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime2")] System.Nullable<System.DateTime> xdate_endinterupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string xtime_endinterupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(6)")] string xdevice_cod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xname_operator_deliveryof, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xname_operator_transferee, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xexplain_havoc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xexplain_activity, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xtime_interupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> xdelay, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> xmountly)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xdate_plan, xidserviceprogram, xdatestart_interupt, xtime_startinterupt, xdate_endinterupt, xtime_endinterupt, xdevice_cod, xname_operator_deliveryof, xname_operator_transferee, xexplain_havoc, xexplain_activity, xtime_interupt, xdelay, xmountly);
			return ((ISingleResult<Insertinto_interuptplanResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Updateinteruptcomp")]
		public int Updateinteruptcomp(
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xidfirstoperator, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string xdate_start_interupt, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string xtime_start_interupt, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xelat_interupt, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string xtime_deliver_tonet, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string xdate_deliver_tonet, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string xdate_start_repair, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string xtime_start_repair, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string xdate_delivertopro, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string xtime_delivertopro, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string x_activity, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string xdate_end_repair, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string xtime_end_repair, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xidsecond_operator, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xtime_repairing, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xtime_interupt, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xtime_between_in_re, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_x_id", DbType="Int")] System.Nullable<int> original_x_id, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> mecanical)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xidfirstoperator, xdate_start_interupt, xtime_start_interupt, xelat_interupt, xtime_deliver_tonet, xdate_deliver_tonet, xdate_start_repair, xtime_start_repair, xdate_delivertopro, xtime_delivertopro, x_activity, xdate_end_repair, xtime_end_repair, xidsecond_operator, xtime_repairing, xtime_interupt, xtime_between_in_re, original_x_id, mecanical);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.objecttable")]
	public partial class objecttable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _xid;
		
		private string _xname;
		
		private string _xdetails;
		
		private string _xvahed;
		
		private System.Nullable<char> _xkind;
		
		private EntityRef<objecttable> _objecttable2;
		
		private EntityRef<objecttable> _objecttable1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(string value);
    partial void OnxidChanged();
    partial void OnxnameChanging(string value);
    partial void OnxnameChanged();
    partial void OnxdetailsChanging(string value);
    partial void OnxdetailsChanged();
    partial void OnxvahedChanging(string value);
    partial void OnxvahedChanged();
    partial void OnxkindChanging(System.Nullable<char> value);
    partial void OnxkindChanged();
    #endregion
		
		public objecttable()
		{
			this._objecttable2 = default(EntityRef<objecttable>);
			this._objecttable1 = default(EntityRef<objecttable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", DbType="NChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					if (this._objecttable1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname", DbType="NVarChar(MAX)")]
		public string xname
		{
			get
			{
				return this._xname;
			}
			set
			{
				if ((this._xname != value))
				{
					this.OnxnameChanging(value);
					this.SendPropertyChanging();
					this._xname = value;
					this.SendPropertyChanged("xname");
					this.OnxnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdetails", DbType="NVarChar(MAX)")]
		public string xdetails
		{
			get
			{
				return this._xdetails;
			}
			set
			{
				if ((this._xdetails != value))
				{
					this.OnxdetailsChanging(value);
					this.SendPropertyChanging();
					this._xdetails = value;
					this.SendPropertyChanged("xdetails");
					this.OnxdetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xvahed", DbType="NVarChar(20)")]
		public string xvahed
		{
			get
			{
				return this._xvahed;
			}
			set
			{
				if ((this._xvahed != value))
				{
					this.OnxvahedChanging(value);
					this.SendPropertyChanging();
					this._xvahed = value;
					this.SendPropertyChanged("xvahed");
					this.OnxvahedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xkind", DbType="NChar(1)")]
		public System.Nullable<char> xkind
		{
			get
			{
				return this._xkind;
			}
			set
			{
				if ((this._xkind != value))
				{
					this.OnxkindChanging(value);
					this.SendPropertyChanging();
					this._xkind = value;
					this.SendPropertyChanged("xkind");
					this.OnxkindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="objecttable_objecttable", Storage="_objecttable2", ThisKey="xid", OtherKey="xid", IsUnique=true, IsForeignKey=false)]
		public objecttable objecttable2
		{
			get
			{
				return this._objecttable2.Entity;
			}
			set
			{
				objecttable previousValue = this._objecttable2.Entity;
				if (((previousValue != value) 
							|| (this._objecttable2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._objecttable2.Entity = null;
						previousValue.objecttable1 = null;
					}
					this._objecttable2.Entity = value;
					if ((value != null))
					{
						value.objecttable1 = this;
					}
					this.SendPropertyChanged("objecttable2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="objecttable_objecttable", Storage="_objecttable1", ThisKey="xid", OtherKey="xid", IsForeignKey=true)]
		public objecttable objecttable1
		{
			get
			{
				return this._objecttable1.Entity;
			}
			set
			{
				objecttable previousValue = this._objecttable1.Entity;
				if (((previousValue != value) 
							|| (this._objecttable1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._objecttable1.Entity = null;
						previousValue.objecttable2 = null;
					}
					this._objecttable1.Entity = value;
					if ((value != null))
					{
						value.objecttable2 = this;
						this._xid = value.xid;
					}
					else
					{
						this._xid = default(string);
					}
					this.SendPropertyChanged("objecttable1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mworkergroup")]
	public partial class mworkergroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _xnamegroup;
		
		private int _xid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxnamegroupChanging(string value);
    partial void OnxnamegroupChanged();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    #endregion
		
		public mworkergroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnamegroup", DbType="NVarChar(50)")]
		public string xnamegroup
		{
			get
			{
				return this._xnamegroup;
			}
			set
			{
				if ((this._xnamegroup != value))
				{
					this.OnxnamegroupChanging(value);
					this.SendPropertyChanging();
					this._xnamegroup = value;
					this.SendPropertyChanged("xnamegroup");
					this.OnxnamegroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mworker")]
	public partial class mworker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _xname;
		
		private string _xwork;
		
		private System.Nullable<int> _xgroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxnameChanging(string value);
    partial void OnxnameChanged();
    partial void OnxworkChanging(string value);
    partial void OnxworkChanged();
    partial void OnxgroupChanging(System.Nullable<int> value);
    partial void OnxgroupChanged();
    #endregion
		
		public mworker()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname", DbType="NVarChar(50)")]
		public string xname
		{
			get
			{
				return this._xname;
			}
			set
			{
				if ((this._xname != value))
				{
					this.OnxnameChanging(value);
					this.SendPropertyChanging();
					this._xname = value;
					this.SendPropertyChanged("xname");
					this.OnxnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xwork", DbType="NVarChar(MAX)")]
		public string xwork
		{
			get
			{
				return this._xwork;
			}
			set
			{
				if ((this._xwork != value))
				{
					this.OnxworkChanging(value);
					this.SendPropertyChanging();
					this._xwork = value;
					this.SendPropertyChanged("xwork");
					this.OnxworkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xgroup", DbType="Int")]
		public System.Nullable<int> xgroup
		{
			get
			{
				return this._xgroup;
			}
			set
			{
				if ((this._xgroup != value))
				{
					this.OnxgroupChanging(value);
					this.SendPropertyChanging();
					this._xgroup = value;
					this.SendPropertyChanged("xgroup");
					this.OnxgroupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mallobject")]
	public partial class mallobject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _xcod;
		
		private System.Nullable<int> _count;
		
		private string _oloaviyat;
		
		private string _xid;
		
		private string _xcodparent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxcodChanging(string value);
    partial void OnxcodChanged();
    partial void OncountChanging(System.Nullable<int> value);
    partial void OncountChanged();
    partial void OnoloaviyatChanging(string value);
    partial void OnoloaviyatChanged();
    partial void OnxidChanging(string value);
    partial void OnxidChanged();
    partial void OnxcodparentChanging(string value);
    partial void OnxcodparentChanged();
    #endregion
		
		public mallobject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcod", DbType="NChar(28) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string xcod
		{
			get
			{
				return this._xcod;
			}
			set
			{
				if ((this._xcod != value))
				{
					this.OnxcodChanging(value);
					this.SendPropertyChanging();
					this._xcod = value;
					this.SendPropertyChanged("xcod");
					this.OnxcodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oloaviyat", DbType="NVarChar(50)")]
		public string oloaviyat
		{
			get
			{
				return this._oloaviyat;
			}
			set
			{
				if ((this._oloaviyat != value))
				{
					this.OnoloaviyatChanging(value);
					this.SendPropertyChanging();
					this._oloaviyat = value;
					this.SendPropertyChanged("oloaviyat");
					this.OnoloaviyatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", DbType="NChar(9)")]
		public string xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcodparent", DbType="NChar(18)")]
		public string xcodparent
		{
			get
			{
				return this._xcodparent;
			}
			set
			{
				if ((this._xcodparent != value))
				{
					this.OnxcodparentChanging(value);
					this.SendPropertyChanging();
					this._xcodparent = value;
					this.SendPropertyChanged("xcodparent");
					this.OnxcodparentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.demuercause")]
	public partial class demuercause : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    #endregion
		
		public demuercause()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mserviceman_hour")]
	public partial class mserviceman_hour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private int _xid_interupt;
		
		private string _xname_repairer;
		
		private System.Nullable<double> _xhours;
		
		private string _xtype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void Onxid_interuptChanging(int value);
    partial void Onxid_interuptChanged();
    partial void Onxname_repairerChanging(string value);
    partial void Onxname_repairerChanged();
    partial void OnxhoursChanging(System.Nullable<double> value);
    partial void OnxhoursChanged();
    partial void OnxtypeChanging(string value);
    partial void OnxtypeChanged();
    #endregion
		
		public mserviceman_hour()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid_interupt", DbType="Int NOT NULL")]
		public int xid_interupt
		{
			get
			{
				return this._xid_interupt;
			}
			set
			{
				if ((this._xid_interupt != value))
				{
					this.Onxid_interuptChanging(value);
					this.SendPropertyChanging();
					this._xid_interupt = value;
					this.SendPropertyChanged("xid_interupt");
					this.Onxid_interuptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname_repairer", DbType="NVarChar(50)")]
		public string xname_repairer
		{
			get
			{
				return this._xname_repairer;
			}
			set
			{
				if ((this._xname_repairer != value))
				{
					this.Onxname_repairerChanging(value);
					this.SendPropertyChanging();
					this._xname_repairer = value;
					this.SendPropertyChanged("xname_repairer");
					this.Onxname_repairerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xhours", DbType="Float")]
		public System.Nullable<double> xhours
		{
			get
			{
				return this._xhours;
			}
			set
			{
				if ((this._xhours != value))
				{
					this.OnxhoursChanging(value);
					this.SendPropertyChanging();
					this._xhours = value;
					this.SendPropertyChanged("xhours");
					this.OnxhoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtype", DbType="NChar(10)")]
		public string xtype
		{
			get
			{
				return this._xtype;
			}
			set
			{
				if ((this._xtype != value))
				{
					this.OnxtypeChanging(value);
					this.SendPropertyChanging();
					this._xtype = value;
					this.SendPropertyChanged("xtype");
					this.OnxtypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tablelogin")]
	public partial class tablelogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _name;
		
		private System.Nullable<int> _xgroupid;
		
		private string _username;
		
		private string _userpass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnxgroupidChanging(System.Nullable<int> value);
    partial void OnxgroupidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnuserpassChanging(string value);
    partial void OnuserpassChanged();
    #endregion
		
		public tablelogin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xgroupid", DbType="Int")]
		public System.Nullable<int> xgroupid
		{
			get
			{
				return this._xgroupid;
			}
			set
			{
				if ((this._xgroupid != value))
				{
					this.OnxgroupidChanging(value);
					this.SendPropertyChanging();
					this._xgroupid = value;
					this.SendPropertyChanged("xgroupid");
					this.OnxgroupidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userpass", DbType="NVarChar(50)")]
		public string userpass
		{
			get
			{
				return this._userpass;
			}
			set
			{
				if ((this._userpass != value))
				{
					this.OnuserpassChanging(value);
					this.SendPropertyChanging();
					this._userpass = value;
					this.SendPropertyChanged("userpass");
					this.OnuserpassChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.device")]
	public partial class device : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _xcod;
		
		private string _xiddevice;
		
		private string _xnumber;
		
		private string _xcodoflocation;
		
		private string _xmanufactur_serial_number;
		
		private string _xdateofmaking;
		
		private string _xdatestart;
		
		private System.Nullable<int> _xstatepurchase;
		
		private System.Nullable<int> _xautomation;
		
		private System.Nullable<int> _xperiod;
		
		private EntityRef<mdetailsdevice> _mdetailsdevice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxcodChanging(string value);
    partial void OnxcodChanged();
    partial void OnxiddeviceChanging(string value);
    partial void OnxiddeviceChanged();
    partial void OnxnumberChanging(string value);
    partial void OnxnumberChanged();
    partial void OnxcodoflocationChanging(string value);
    partial void OnxcodoflocationChanged();
    partial void Onxmanufactur_serial_numberChanging(string value);
    partial void Onxmanufactur_serial_numberChanged();
    partial void OnxdateofmakingChanging(string value);
    partial void OnxdateofmakingChanged();
    partial void OnxdatestartChanging(string value);
    partial void OnxdatestartChanged();
    partial void OnxstatepurchaseChanging(System.Nullable<int> value);
    partial void OnxstatepurchaseChanged();
    partial void OnxautomationChanging(System.Nullable<int> value);
    partial void OnxautomationChanged();
    partial void OnxperiodChanging(System.Nullable<int> value);
    partial void OnxperiodChanged();
    #endregion
		
		public device()
		{
			this._mdetailsdevice = default(EntityRef<mdetailsdevice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcod", DbType="NChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string xcod
		{
			get
			{
				return this._xcod;
			}
			set
			{
				if ((this._xcod != value))
				{
					this.OnxcodChanging(value);
					this.SendPropertyChanging();
					this._xcod = value;
					this.SendPropertyChanged("xcod");
					this.OnxcodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xiddevice", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string xiddevice
		{
			get
			{
				return this._xiddevice;
			}
			set
			{
				if ((this._xiddevice != value))
				{
					if (this._mdetailsdevice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnxiddeviceChanging(value);
					this.SendPropertyChanging();
					this._xiddevice = value;
					this.SendPropertyChanged("xiddevice");
					this.OnxiddeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnumber", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string xnumber
		{
			get
			{
				return this._xnumber;
			}
			set
			{
				if ((this._xnumber != value))
				{
					this.OnxnumberChanging(value);
					this.SendPropertyChanging();
					this._xnumber = value;
					this.SendPropertyChanged("xnumber");
					this.OnxnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcodoflocation", DbType="NChar(2)")]
		public string xcodoflocation
		{
			get
			{
				return this._xcodoflocation;
			}
			set
			{
				if ((this._xcodoflocation != value))
				{
					this.OnxcodoflocationChanging(value);
					this.SendPropertyChanging();
					this._xcodoflocation = value;
					this.SendPropertyChanged("xcodoflocation");
					this.OnxcodoflocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xmanufactur_serial_number", DbType="NVarChar(MAX)")]
		public string xmanufactur_serial_number
		{
			get
			{
				return this._xmanufactur_serial_number;
			}
			set
			{
				if ((this._xmanufactur_serial_number != value))
				{
					this.Onxmanufactur_serial_numberChanging(value);
					this.SendPropertyChanging();
					this._xmanufactur_serial_number = value;
					this.SendPropertyChanged("xmanufactur_serial_number");
					this.Onxmanufactur_serial_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdateofmaking", DbType="NChar(10)")]
		public string xdateofmaking
		{
			get
			{
				return this._xdateofmaking;
			}
			set
			{
				if ((this._xdateofmaking != value))
				{
					this.OnxdateofmakingChanging(value);
					this.SendPropertyChanging();
					this._xdateofmaking = value;
					this.SendPropertyChanged("xdateofmaking");
					this.OnxdateofmakingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdatestart", DbType="NChar(10)")]
		public string xdatestart
		{
			get
			{
				return this._xdatestart;
			}
			set
			{
				if ((this._xdatestart != value))
				{
					this.OnxdatestartChanging(value);
					this.SendPropertyChanging();
					this._xdatestart = value;
					this.SendPropertyChanged("xdatestart");
					this.OnxdatestartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xstatepurchase", DbType="Int")]
		public System.Nullable<int> xstatepurchase
		{
			get
			{
				return this._xstatepurchase;
			}
			set
			{
				if ((this._xstatepurchase != value))
				{
					this.OnxstatepurchaseChanging(value);
					this.SendPropertyChanging();
					this._xstatepurchase = value;
					this.SendPropertyChanged("xstatepurchase");
					this.OnxstatepurchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xautomation", DbType="Int")]
		public System.Nullable<int> xautomation
		{
			get
			{
				return this._xautomation;
			}
			set
			{
				if ((this._xautomation != value))
				{
					this.OnxautomationChanging(value);
					this.SendPropertyChanging();
					this._xautomation = value;
					this.SendPropertyChanged("xautomation");
					this.OnxautomationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xperiod", DbType="Int")]
		public System.Nullable<int> xperiod
		{
			get
			{
				return this._xperiod;
			}
			set
			{
				if ((this._xperiod != value))
				{
					this.OnxperiodChanging(value);
					this.SendPropertyChanging();
					this._xperiod = value;
					this.SendPropertyChanged("xperiod");
					this.OnxperiodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mdetailsdevice_device", Storage="_mdetailsdevice", ThisKey="xiddevice", OtherKey="xcoddevice", IsForeignKey=true)]
		public mdetailsdevice mdetailsdevice
		{
			get
			{
				return this._mdetailsdevice.Entity;
			}
			set
			{
				mdetailsdevice previousValue = this._mdetailsdevice.Entity;
				if (((previousValue != value) 
							|| (this._mdetailsdevice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mdetailsdevice.Entity = null;
						previousValue.devices.Remove(this);
					}
					this._mdetailsdevice.Entity = value;
					if ((value != null))
					{
						value.devices.Add(this);
						this._xiddevice = value.xcoddevice;
					}
					else
					{
						this._xiddevice = default(string);
					}
					this.SendPropertyChanged("mdetailsdevice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mdetailsdevice")]
	public partial class mdetailsdevice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _xnamedevice;
		
		private string _xEnglishname;
		
		private string _xcoddevice;
		
		private System.Nullable<int> _xcount;
		
		private System.Nullable<int> _xcountofoperator;
		
		private System.Nullable<float> _xweight;
		
		private System.Nullable<float> _xuseful_life;
		
		private System.Data.Linq.Binary _map;
		
		private System.Nullable<bool> _typemap;
		
		private EntitySet<device> _devices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxnamedeviceChanging(string value);
    partial void OnxnamedeviceChanged();
    partial void OnxEnglishnameChanging(string value);
    partial void OnxEnglishnameChanged();
    partial void OnxcoddeviceChanging(string value);
    partial void OnxcoddeviceChanged();
    partial void OnxcountChanging(System.Nullable<int> value);
    partial void OnxcountChanged();
    partial void OnxcountofoperatorChanging(System.Nullable<int> value);
    partial void OnxcountofoperatorChanged();
    partial void OnxweightChanging(System.Nullable<float> value);
    partial void OnxweightChanged();
    partial void Onxuseful_lifeChanging(System.Nullable<float> value);
    partial void Onxuseful_lifeChanged();
    partial void OnmapChanging(System.Data.Linq.Binary value);
    partial void OnmapChanged();
    partial void OntypemapChanging(System.Nullable<bool> value);
    partial void OntypemapChanged();
    #endregion
		
		public mdetailsdevice()
		{
			this._devices = new EntitySet<device>(new Action<device>(this.attach_devices), new Action<device>(this.detach_devices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnamedevice", DbType="NVarChar(MAX)")]
		public string xnamedevice
		{
			get
			{
				return this._xnamedevice;
			}
			set
			{
				if ((this._xnamedevice != value))
				{
					this.OnxnamedeviceChanging(value);
					this.SendPropertyChanging();
					this._xnamedevice = value;
					this.SendPropertyChanged("xnamedevice");
					this.OnxnamedeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xEnglishname", DbType="NVarChar(MAX)")]
		public string xEnglishname
		{
			get
			{
				return this._xEnglishname;
			}
			set
			{
				if ((this._xEnglishname != value))
				{
					this.OnxEnglishnameChanging(value);
					this.SendPropertyChanging();
					this._xEnglishname = value;
					this.SendPropertyChanged("xEnglishname");
					this.OnxEnglishnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcoddevice", DbType="NChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string xcoddevice
		{
			get
			{
				return this._xcoddevice;
			}
			set
			{
				if ((this._xcoddevice != value))
				{
					this.OnxcoddeviceChanging(value);
					this.SendPropertyChanging();
					this._xcoddevice = value;
					this.SendPropertyChanged("xcoddevice");
					this.OnxcoddeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcount", DbType="Int")]
		public System.Nullable<int> xcount
		{
			get
			{
				return this._xcount;
			}
			set
			{
				if ((this._xcount != value))
				{
					this.OnxcountChanging(value);
					this.SendPropertyChanging();
					this._xcount = value;
					this.SendPropertyChanged("xcount");
					this.OnxcountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcountofoperator", DbType="Int")]
		public System.Nullable<int> xcountofoperator
		{
			get
			{
				return this._xcountofoperator;
			}
			set
			{
				if ((this._xcountofoperator != value))
				{
					this.OnxcountofoperatorChanging(value);
					this.SendPropertyChanging();
					this._xcountofoperator = value;
					this.SendPropertyChanged("xcountofoperator");
					this.OnxcountofoperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xweight", DbType="Real")]
		public System.Nullable<float> xweight
		{
			get
			{
				return this._xweight;
			}
			set
			{
				if ((this._xweight != value))
				{
					this.OnxweightChanging(value);
					this.SendPropertyChanging();
					this._xweight = value;
					this.SendPropertyChanged("xweight");
					this.OnxweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xuseful_life", DbType="Real")]
		public System.Nullable<float> xuseful_life
		{
			get
			{
				return this._xuseful_life;
			}
			set
			{
				if ((this._xuseful_life != value))
				{
					this.Onxuseful_lifeChanging(value);
					this.SendPropertyChanging();
					this._xuseful_life = value;
					this.SendPropertyChanged("xuseful_life");
					this.Onxuseful_lifeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_map", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary map
		{
			get
			{
				return this._map;
			}
			set
			{
				if ((this._map != value))
				{
					this.OnmapChanging(value);
					this.SendPropertyChanging();
					this._map = value;
					this.SendPropertyChanged("map");
					this.OnmapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typemap", DbType="Bit")]
		public System.Nullable<bool> typemap
		{
			get
			{
				return this._typemap;
			}
			set
			{
				if ((this._typemap != value))
				{
					this.OntypemapChanging(value);
					this.SendPropertyChanging();
					this._typemap = value;
					this.SendPropertyChanged("typemap");
					this.OntypemapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mdetailsdevice_device", Storage="_devices", ThisKey="xcoddevice", OtherKey="xiddevice")]
		public EntitySet<device> devices
		{
			get
			{
				return this._devices;
			}
			set
			{
				this._devices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_devices(device entity)
		{
			this.SendPropertyChanging();
			entity.mdetailsdevice = this;
		}
		
		private void detach_devices(device entity)
		{
			this.SendPropertyChanging();
			entity.mdetailsdevice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mselectdemuer")]
	public partial class mselectdemuer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private System.Nullable<int> _xiddemuer;
		
		private System.Nullable<int> _idparent;
		
		private string _typeparent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxiddemuerChanging(System.Nullable<int> value);
    partial void OnxiddemuerChanged();
    partial void OnidparentChanging(System.Nullable<int> value);
    partial void OnidparentChanged();
    partial void OntypeparentChanging(string value);
    partial void OntypeparentChanged();
    #endregion
		
		public mselectdemuer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xiddemuer", DbType="Int")]
		public System.Nullable<int> xiddemuer
		{
			get
			{
				return this._xiddemuer;
			}
			set
			{
				if ((this._xiddemuer != value))
				{
					this.OnxiddemuerChanging(value);
					this.SendPropertyChanging();
					this._xiddemuer = value;
					this.SendPropertyChanged("xiddemuer");
					this.OnxiddemuerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idparent", DbType="Int")]
		public System.Nullable<int> idparent
		{
			get
			{
				return this._idparent;
			}
			set
			{
				if ((this._idparent != value))
				{
					this.OnidparentChanging(value);
					this.SendPropertyChanging();
					this._idparent = value;
					this.SendPropertyChanged("idparent");
					this.OnidparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeparent", DbType="NVarChar(50)")]
		public string typeparent
		{
			get
			{
				return this._typeparent;
			}
			set
			{
				if ((this._typeparent != value))
				{
					this.OntypeparentChanging(value);
					this.SendPropertyChanging();
					this._typeparent = value;
					this.SendPropertyChanged("typeparent");
					this.OntypeparentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mobject_disposal")]
	public partial class mobject_disposal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private int _xid_interupt;
		
		private string _x_cod_objects_disposal;
		
		private System.Nullable<int> _xcount;
		
		private string _xtype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void Onxid_interuptChanging(int value);
    partial void Onxid_interuptChanged();
    partial void Onx_cod_objects_disposalChanging(string value);
    partial void Onx_cod_objects_disposalChanged();
    partial void OnxcountChanging(System.Nullable<int> value);
    partial void OnxcountChanged();
    partial void OnxtypeChanging(string value);
    partial void OnxtypeChanged();
    #endregion
		
		public mobject_disposal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid_interupt", DbType="Int NOT NULL")]
		public int xid_interupt
		{
			get
			{
				return this._xid_interupt;
			}
			set
			{
				if ((this._xid_interupt != value))
				{
					this.Onxid_interuptChanging(value);
					this.SendPropertyChanging();
					this._xid_interupt = value;
					this.SendPropertyChanged("xid_interupt");
					this.Onxid_interuptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x_cod_objects_disposal", DbType="NVarChar(50)")]
		public string x_cod_objects_disposal
		{
			get
			{
				return this._x_cod_objects_disposal;
			}
			set
			{
				if ((this._x_cod_objects_disposal != value))
				{
					this.Onx_cod_objects_disposalChanging(value);
					this.SendPropertyChanging();
					this._x_cod_objects_disposal = value;
					this.SendPropertyChanged("x_cod_objects_disposal");
					this.Onx_cod_objects_disposalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcount", DbType="Int")]
		public System.Nullable<int> xcount
		{
			get
			{
				return this._xcount;
			}
			set
			{
				if ((this._xcount != value))
				{
					this.OnxcountChanging(value);
					this.SendPropertyChanging();
					this._xcount = value;
					this.SendPropertyChanged("xcount");
					this.OnxcountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtype", DbType="NChar(10)")]
		public string xtype
		{
			get
			{
				return this._xtype;
			}
			set
			{
				if ((this._xtype != value))
				{
					this.OnxtypeChanging(value);
					this.SendPropertyChanging();
					this._xtype = value;
					this.SendPropertyChanged("xtype");
					this.OnxtypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.interupt_comp")]
	public partial class interupt_comp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _x_id;
		
		private System.Nullable<int> _xiduserrequest;
		
		private string _xdevice_cod;
		
		private System.Nullable<int> _xidfirstoperator;
		
		private string _xtime_request;
		
		private string _xdate_request;
		
		private string _xdate_start_interupt;
		
		private string _xtime_start_interupt;
		
		private string _xelat_interupt;
		
		private string _xtime_deliver_tonet;
		
		private string _xdate_deliver_tonet;
		
		private string _xdate_start_repair;
		
		private string _xtime_start_repair;
		
		private string _xdate_delivertopro;
		
		private string _xtime_delivertopro;
		
		private string _x_activity;
		
		private string _xdate_end_repair;
		
		private string _xtime_end_repair;
		
		private System.Nullable<int> _xidsecond_operator;
		
		private System.Nullable<int> _xtime_repairing;
		
		private System.Nullable<int> _xtime_interupt;
		
		private System.Nullable<int> _xtime_between_in_re;
		
		private System.Nullable<bool> _xmecanical;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onx_idChanging(int value);
    partial void Onx_idChanged();
    partial void OnxiduserrequestChanging(System.Nullable<int> value);
    partial void OnxiduserrequestChanged();
    partial void Onxdevice_codChanging(string value);
    partial void Onxdevice_codChanged();
    partial void OnxidfirstoperatorChanging(System.Nullable<int> value);
    partial void OnxidfirstoperatorChanged();
    partial void Onxtime_requestChanging(string value);
    partial void Onxtime_requestChanged();
    partial void Onxdate_requestChanging(string value);
    partial void Onxdate_requestChanged();
    partial void Onxdate_start_interuptChanging(string value);
    partial void Onxdate_start_interuptChanged();
    partial void Onxtime_start_interuptChanging(string value);
    partial void Onxtime_start_interuptChanged();
    partial void Onxelat_interuptChanging(string value);
    partial void Onxelat_interuptChanged();
    partial void Onxtime_deliver_tonetChanging(string value);
    partial void Onxtime_deliver_tonetChanged();
    partial void Onxdate_deliver_tonetChanging(string value);
    partial void Onxdate_deliver_tonetChanged();
    partial void Onxdate_start_repairChanging(string value);
    partial void Onxdate_start_repairChanged();
    partial void Onxtime_start_repairChanging(string value);
    partial void Onxtime_start_repairChanged();
    partial void Onxdate_delivertoproChanging(string value);
    partial void Onxdate_delivertoproChanged();
    partial void Onxtime_delivertoproChanging(string value);
    partial void Onxtime_delivertoproChanged();
    partial void Onx_activityChanging(string value);
    partial void Onx_activityChanged();
    partial void Onxdate_end_repairChanging(string value);
    partial void Onxdate_end_repairChanged();
    partial void Onxtime_end_repairChanging(string value);
    partial void Onxtime_end_repairChanged();
    partial void Onxidsecond_operatorChanging(System.Nullable<int> value);
    partial void Onxidsecond_operatorChanged();
    partial void Onxtime_repairingChanging(System.Nullable<int> value);
    partial void Onxtime_repairingChanged();
    partial void Onxtime_interuptChanging(System.Nullable<int> value);
    partial void Onxtime_interuptChanged();
    partial void Onxtime_between_in_reChanging(System.Nullable<int> value);
    partial void Onxtime_between_in_reChanged();
    partial void OnxmecanicalChanging(System.Nullable<bool> value);
    partial void OnxmecanicalChanged();
    #endregion
		
		public interupt_comp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int x_id
		{
			get
			{
				return this._x_id;
			}
			set
			{
				if ((this._x_id != value))
				{
					this.Onx_idChanging(value);
					this.SendPropertyChanging();
					this._x_id = value;
					this.SendPropertyChanged("x_id");
					this.Onx_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xiduserrequest", DbType="Int")]
		public System.Nullable<int> xiduserrequest
		{
			get
			{
				return this._xiduserrequest;
			}
			set
			{
				if ((this._xiduserrequest != value))
				{
					this.OnxiduserrequestChanging(value);
					this.SendPropertyChanging();
					this._xiduserrequest = value;
					this.SendPropertyChanged("xiduserrequest");
					this.OnxiduserrequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdevice_cod", DbType="NChar(9)")]
		public string xdevice_cod
		{
			get
			{
				return this._xdevice_cod;
			}
			set
			{
				if ((this._xdevice_cod != value))
				{
					this.Onxdevice_codChanging(value);
					this.SendPropertyChanging();
					this._xdevice_cod = value;
					this.SendPropertyChanged("xdevice_cod");
					this.Onxdevice_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xidfirstoperator", DbType="Int")]
		public System.Nullable<int> xidfirstoperator
		{
			get
			{
				return this._xidfirstoperator;
			}
			set
			{
				if ((this._xidfirstoperator != value))
				{
					this.OnxidfirstoperatorChanging(value);
					this.SendPropertyChanging();
					this._xidfirstoperator = value;
					this.SendPropertyChanged("xidfirstoperator");
					this.OnxidfirstoperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtime_request", DbType="NVarChar(8)")]
		public string xtime_request
		{
			get
			{
				return this._xtime_request;
			}
			set
			{
				if ((this._xtime_request != value))
				{
					this.Onxtime_requestChanging(value);
					this.SendPropertyChanging();
					this._xtime_request = value;
					this.SendPropertyChanged("xtime_request");
					this.Onxtime_requestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdate_request", DbType="NChar(10)")]
		public string xdate_request
		{
			get
			{
				return this._xdate_request;
			}
			set
			{
				if ((this._xdate_request != value))
				{
					this.Onxdate_requestChanging(value);
					this.SendPropertyChanging();
					this._xdate_request = value;
					this.SendPropertyChanged("xdate_request");
					this.Onxdate_requestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdate_start_interupt", DbType="NChar(10)")]
		public string xdate_start_interupt
		{
			get
			{
				return this._xdate_start_interupt;
			}
			set
			{
				if ((this._xdate_start_interupt != value))
				{
					this.Onxdate_start_interuptChanging(value);
					this.SendPropertyChanging();
					this._xdate_start_interupt = value;
					this.SendPropertyChanged("xdate_start_interupt");
					this.Onxdate_start_interuptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtime_start_interupt", DbType="NChar(5)")]
		public string xtime_start_interupt
		{
			get
			{
				return this._xtime_start_interupt;
			}
			set
			{
				if ((this._xtime_start_interupt != value))
				{
					this.Onxtime_start_interuptChanging(value);
					this.SendPropertyChanging();
					this._xtime_start_interupt = value;
					this.SendPropertyChanged("xtime_start_interupt");
					this.Onxtime_start_interuptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xelat_interupt", DbType="NVarChar(MAX)")]
		public string xelat_interupt
		{
			get
			{
				return this._xelat_interupt;
			}
			set
			{
				if ((this._xelat_interupt != value))
				{
					this.Onxelat_interuptChanging(value);
					this.SendPropertyChanging();
					this._xelat_interupt = value;
					this.SendPropertyChanged("xelat_interupt");
					this.Onxelat_interuptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtime_deliver_tonet", DbType="NChar(5)")]
		public string xtime_deliver_tonet
		{
			get
			{
				return this._xtime_deliver_tonet;
			}
			set
			{
				if ((this._xtime_deliver_tonet != value))
				{
					this.Onxtime_deliver_tonetChanging(value);
					this.SendPropertyChanging();
					this._xtime_deliver_tonet = value;
					this.SendPropertyChanged("xtime_deliver_tonet");
					this.Onxtime_deliver_tonetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdate_deliver_tonet", DbType="NChar(10)")]
		public string xdate_deliver_tonet
		{
			get
			{
				return this._xdate_deliver_tonet;
			}
			set
			{
				if ((this._xdate_deliver_tonet != value))
				{
					this.Onxdate_deliver_tonetChanging(value);
					this.SendPropertyChanging();
					this._xdate_deliver_tonet = value;
					this.SendPropertyChanged("xdate_deliver_tonet");
					this.Onxdate_deliver_tonetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdate_start_repair", DbType="NChar(10)")]
		public string xdate_start_repair
		{
			get
			{
				return this._xdate_start_repair;
			}
			set
			{
				if ((this._xdate_start_repair != value))
				{
					this.Onxdate_start_repairChanging(value);
					this.SendPropertyChanging();
					this._xdate_start_repair = value;
					this.SendPropertyChanged("xdate_start_repair");
					this.Onxdate_start_repairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtime_start_repair", DbType="NChar(5)")]
		public string xtime_start_repair
		{
			get
			{
				return this._xtime_start_repair;
			}
			set
			{
				if ((this._xtime_start_repair != value))
				{
					this.Onxtime_start_repairChanging(value);
					this.SendPropertyChanging();
					this._xtime_start_repair = value;
					this.SendPropertyChanged("xtime_start_repair");
					this.Onxtime_start_repairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdate_delivertopro", DbType="NChar(10)")]
		public string xdate_delivertopro
		{
			get
			{
				return this._xdate_delivertopro;
			}
			set
			{
				if ((this._xdate_delivertopro != value))
				{
					this.Onxdate_delivertoproChanging(value);
					this.SendPropertyChanging();
					this._xdate_delivertopro = value;
					this.SendPropertyChanged("xdate_delivertopro");
					this.Onxdate_delivertoproChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtime_delivertopro", DbType="NChar(5)")]
		public string xtime_delivertopro
		{
			get
			{
				return this._xtime_delivertopro;
			}
			set
			{
				if ((this._xtime_delivertopro != value))
				{
					this.Onxtime_delivertoproChanging(value);
					this.SendPropertyChanging();
					this._xtime_delivertopro = value;
					this.SendPropertyChanged("xtime_delivertopro");
					this.Onxtime_delivertoproChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x_activity", DbType="NVarChar(MAX)")]
		public string x_activity
		{
			get
			{
				return this._x_activity;
			}
			set
			{
				if ((this._x_activity != value))
				{
					this.Onx_activityChanging(value);
					this.SendPropertyChanging();
					this._x_activity = value;
					this.SendPropertyChanged("x_activity");
					this.Onx_activityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdate_end_repair", DbType="NChar(10)")]
		public string xdate_end_repair
		{
			get
			{
				return this._xdate_end_repair;
			}
			set
			{
				if ((this._xdate_end_repair != value))
				{
					this.Onxdate_end_repairChanging(value);
					this.SendPropertyChanging();
					this._xdate_end_repair = value;
					this.SendPropertyChanged("xdate_end_repair");
					this.Onxdate_end_repairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtime_end_repair", DbType="NChar(5)")]
		public string xtime_end_repair
		{
			get
			{
				return this._xtime_end_repair;
			}
			set
			{
				if ((this._xtime_end_repair != value))
				{
					this.Onxtime_end_repairChanging(value);
					this.SendPropertyChanging();
					this._xtime_end_repair = value;
					this.SendPropertyChanged("xtime_end_repair");
					this.Onxtime_end_repairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xidsecond_operator", DbType="Int")]
		public System.Nullable<int> xidsecond_operator
		{
			get
			{
				return this._xidsecond_operator;
			}
			set
			{
				if ((this._xidsecond_operator != value))
				{
					this.Onxidsecond_operatorChanging(value);
					this.SendPropertyChanging();
					this._xidsecond_operator = value;
					this.SendPropertyChanged("xidsecond_operator");
					this.Onxidsecond_operatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtime_repairing", DbType="Int")]
		public System.Nullable<int> xtime_repairing
		{
			get
			{
				return this._xtime_repairing;
			}
			set
			{
				if ((this._xtime_repairing != value))
				{
					this.Onxtime_repairingChanging(value);
					this.SendPropertyChanging();
					this._xtime_repairing = value;
					this.SendPropertyChanged("xtime_repairing");
					this.Onxtime_repairingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtime_interupt", DbType="Int")]
		public System.Nullable<int> xtime_interupt
		{
			get
			{
				return this._xtime_interupt;
			}
			set
			{
				if ((this._xtime_interupt != value))
				{
					this.Onxtime_interuptChanging(value);
					this.SendPropertyChanging();
					this._xtime_interupt = value;
					this.SendPropertyChanged("xtime_interupt");
					this.Onxtime_interuptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtime_between_in_re", DbType="Int")]
		public System.Nullable<int> xtime_between_in_re
		{
			get
			{
				return this._xtime_between_in_re;
			}
			set
			{
				if ((this._xtime_between_in_re != value))
				{
					this.Onxtime_between_in_reChanging(value);
					this.SendPropertyChanging();
					this._xtime_between_in_re = value;
					this.SendPropertyChanged("xtime_between_in_re");
					this.Onxtime_between_in_reChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xmecanical", DbType="Bit")]
		public System.Nullable<bool> xmecanical
		{
			get
			{
				return this._xmecanical;
			}
			set
			{
				if ((this._xmecanical != value))
				{
					this.OnxmecanicalChanging(value);
					this.SendPropertyChanging();
					this._xmecanical = value;
					this.SendPropertyChanged("xmecanical");
					this.OnxmecanicalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Insertinto_interuptplanResult
	{
		
		private int _xid;
		
		public Insertinto_interuptplanResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", DbType="Int NOT NULL")]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this._xid = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
