#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PAYADATA.coding
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="payazobnet")]
	public partial class Data_linq_coding_objectDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertdevice(device instance);
    partial void Updatedevice(device instance);
    partial void Deletedevice(device instance);
    partial void Insertmallobject(mallobject instance);
    partial void Updatemallobject(mallobject instance);
    partial void Deletemallobject(mallobject instance);
    partial void Insertmdetailsdevice(mdetailsdevice instance);
    partial void Updatemdetailsdevice(mdetailsdevice instance);
    partial void Deletemdetailsdevice(mdetailsdevice instance);
    partial void Insertmdevice_state(mdevice_state instance);
    partial void Updatemdevice_state(mdevice_state instance);
    partial void Deletemdevice_state(mdevice_state instance);
    partial void Insertmlevelautomationdevice(mlevelautomationdevice instance);
    partial void Updatemlevelautomationdevice(mlevelautomationdevice instance);
    partial void Deletemlevelautomationdevice(mlevelautomationdevice instance);
    partial void InsertmPeriod(mPeriod instance);
    partial void UpdatemPeriod(mPeriod instance);
    partial void DeletemPeriod(mPeriod instance);
    partial void Insertobject_set2(object_set2 instance);
    partial void Updateobject_set2(object_set2 instance);
    partial void Deleteobject_set2(object_set2 instance);
    partial void Insertobjecttable(objecttable instance);
    partial void Updateobjecttable(objecttable instance);
    partial void Deleteobjecttable(objecttable instance);
    partial void Insertmdeviceset1(mdeviceset1 instance);
    partial void Updatemdeviceset1(mdeviceset1 instance);
    partial void Deletemdeviceset1(mdeviceset1 instance);
    partial void Insertmdeviceset2(mdeviceset2 instance);
    partial void Updatemdeviceset2(mdeviceset2 instance);
    partial void Deletemdeviceset2(mdeviceset2 instance);
    partial void Insertmdeviceset3(mdeviceset3 instance);
    partial void Updatemdeviceset3(mdeviceset3 instance);
    partial void Deletemdeviceset3(mdeviceset3 instance);
    partial void Insertmobjectcod(mobjectcod instance);
    partial void Updatemobjectcod(mobjectcod instance);
    partial void Deletemobjectcod(mobjectcod instance);
    #endregion
		
		public Data_linq_coding_objectDataContext() : 
				base(global::PAYADATA.Properties.Settings.Default.payazobnetConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Data_linq_coding_objectDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Data_linq_coding_objectDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Data_linq_coding_objectDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Data_linq_coding_objectDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<device> devices
		{
			get
			{
				return this.GetTable<device>();
			}
		}
		
		public System.Data.Linq.Table<mallobject> mallobjects
		{
			get
			{
				return this.GetTable<mallobject>();
			}
		}
		
		public System.Data.Linq.Table<mdetailsdevice> mdetailsdevices
		{
			get
			{
				return this.GetTable<mdetailsdevice>();
			}
		}
		
		public System.Data.Linq.Table<mdevice_state> mdevice_states
		{
			get
			{
				return this.GetTable<mdevice_state>();
			}
		}
		
		public System.Data.Linq.Table<mlevelautomationdevice> mlevelautomationdevices
		{
			get
			{
				return this.GetTable<mlevelautomationdevice>();
			}
		}
		
		public System.Data.Linq.Table<mPeriod> mPeriods
		{
			get
			{
				return this.GetTable<mPeriod>();
			}
		}
		
		public System.Data.Linq.Table<object_set2> object_set2s
		{
			get
			{
				return this.GetTable<object_set2>();
			}
		}
		
		public System.Data.Linq.Table<objecttable> objecttables
		{
			get
			{
				return this.GetTable<objecttable>();
			}
		}
		
		public System.Data.Linq.Table<Viewallobject> Viewallobjects
		{
			get
			{
				return this.GetTable<Viewallobject>();
			}
		}
		
		public System.Data.Linq.Table<mdeviceset1> mdeviceset1s
		{
			get
			{
				return this.GetTable<mdeviceset1>();
			}
		}
		
		public System.Data.Linq.Table<mdeviceset2> mdeviceset2s
		{
			get
			{
				return this.GetTable<mdeviceset2>();
			}
		}
		
		public System.Data.Linq.Table<mdeviceset3> mdeviceset3s
		{
			get
			{
				return this.GetTable<mdeviceset3>();
			}
		}
		
		public System.Data.Linq.Table<mobjectcod> mobjectcods
		{
			get
			{
				return this.GetTable<mobjectcod>();
			}
		}
		
		public System.Data.Linq.Table<mlocation> mlocations
		{
			get
			{
				return this.GetTable<mlocation>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Deletefromdeviceset2")]
		public int Deletefromdeviceset2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(9)")] string xdevice_cod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xdevice_cod);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Deletefromobject")]
		public int Deletefromobject([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(9)")] string xid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Deletefromobjectset2table")]
		public int Deletefromobjectset2table([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(25)")] string xcod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xcod);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Selectallobject")]
		public ISingleResult<SelectallobjectResult> Selectallobject([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(28)")] string cod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cod);
			return ((ISingleResult<SelectallobjectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Updatemallobject")]
		public int Updatemallobject([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string oloaviyat, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(28)")] string xcod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), count, oloaviyat, xcod);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Updateobject_set2_count")]
		public ISingleResult<Updateobject_set2_countResult> Updateobject_set2_count([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xcount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(25)")] string xcod)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xcount, xcod);
			return ((ISingleResult<Updateobject_set2_countResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.device")]
	public partial class device : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _xcod;
		
		private string _xiddevice;
		
		private string _xnumber;
		
		private string _xcodoflocation;
		
		private string _xmanufactur_serial_number;
		
		private string _xdateofmaking;
		
		private string _xdatestart;
		
		private System.Nullable<int> _xstatepurchase;
		
		private System.Nullable<int> _xautomation;
		
		private System.Nullable<int> _xperiod;
		
		private EntitySet<mdeviceset1> _mdeviceset1s;
		
		private EntityRef<mdetailsdevice> _mdetailsdevice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxcodChanging(string value);
    partial void OnxcodChanged();
    partial void OnxiddeviceChanging(string value);
    partial void OnxiddeviceChanged();
    partial void OnxnumberChanging(string value);
    partial void OnxnumberChanged();
    partial void OnxcodoflocationChanging(string value);
    partial void OnxcodoflocationChanged();
    partial void Onxmanufactur_serial_numberChanging(string value);
    partial void Onxmanufactur_serial_numberChanged();
    partial void OnxdateofmakingChanging(string value);
    partial void OnxdateofmakingChanged();
    partial void OnxdatestartChanging(string value);
    partial void OnxdatestartChanged();
    partial void OnxstatepurchaseChanging(System.Nullable<int> value);
    partial void OnxstatepurchaseChanged();
    partial void OnxautomationChanging(System.Nullable<int> value);
    partial void OnxautomationChanged();
    partial void OnxperiodChanging(System.Nullable<int> value);
    partial void OnxperiodChanged();
    #endregion
		
		public device()
		{
			this._mdeviceset1s = new EntitySet<mdeviceset1>(new Action<mdeviceset1>(this.attach_mdeviceset1s), new Action<mdeviceset1>(this.detach_mdeviceset1s));
			this._mdetailsdevice = default(EntityRef<mdetailsdevice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcod", DbType="NChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string xcod
		{
			get
			{
				return this._xcod;
			}
			set
			{
				if ((this._xcod != value))
				{
					this.OnxcodChanging(value);
					this.SendPropertyChanging();
					this._xcod = value;
					this.SendPropertyChanged("xcod");
					this.OnxcodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xiddevice", DbType="NChar(9) NOT NULL", CanBeNull=false)]
		public string xiddevice
		{
			get
			{
				return this._xiddevice;
			}
			set
			{
				if ((this._xiddevice != value))
				{
					if (this._mdetailsdevice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnxiddeviceChanging(value);
					this.SendPropertyChanging();
					this._xiddevice = value;
					this.SendPropertyChanged("xiddevice");
					this.OnxiddeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnumber", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string xnumber
		{
			get
			{
				return this._xnumber;
			}
			set
			{
				if ((this._xnumber != value))
				{
					this.OnxnumberChanging(value);
					this.SendPropertyChanging();
					this._xnumber = value;
					this.SendPropertyChanged("xnumber");
					this.OnxnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcodoflocation", DbType="NChar(2)")]
		public string xcodoflocation
		{
			get
			{
				return this._xcodoflocation;
			}
			set
			{
				if ((this._xcodoflocation != value))
				{
					this.OnxcodoflocationChanging(value);
					this.SendPropertyChanging();
					this._xcodoflocation = value;
					this.SendPropertyChanged("xcodoflocation");
					this.OnxcodoflocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xmanufactur_serial_number", DbType="NVarChar(MAX)")]
		public string xmanufactur_serial_number
		{
			get
			{
				return this._xmanufactur_serial_number;
			}
			set
			{
				if ((this._xmanufactur_serial_number != value))
				{
					this.Onxmanufactur_serial_numberChanging(value);
					this.SendPropertyChanging();
					this._xmanufactur_serial_number = value;
					this.SendPropertyChanged("xmanufactur_serial_number");
					this.Onxmanufactur_serial_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdateofmaking", DbType="NChar(10)")]
		public string xdateofmaking
		{
			get
			{
				return this._xdateofmaking;
			}
			set
			{
				if ((this._xdateofmaking != value))
				{
					this.OnxdateofmakingChanging(value);
					this.SendPropertyChanging();
					this._xdateofmaking = value;
					this.SendPropertyChanged("xdateofmaking");
					this.OnxdateofmakingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdatestart", DbType="NChar(10)")]
		public string xdatestart
		{
			get
			{
				return this._xdatestart;
			}
			set
			{
				if ((this._xdatestart != value))
				{
					this.OnxdatestartChanging(value);
					this.SendPropertyChanging();
					this._xdatestart = value;
					this.SendPropertyChanged("xdatestart");
					this.OnxdatestartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xstatepurchase", DbType="Int")]
		public System.Nullable<int> xstatepurchase
		{
			get
			{
				return this._xstatepurchase;
			}
			set
			{
				if ((this._xstatepurchase != value))
				{
					this.OnxstatepurchaseChanging(value);
					this.SendPropertyChanging();
					this._xstatepurchase = value;
					this.SendPropertyChanged("xstatepurchase");
					this.OnxstatepurchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xautomation", DbType="Int")]
		public System.Nullable<int> xautomation
		{
			get
			{
				return this._xautomation;
			}
			set
			{
				if ((this._xautomation != value))
				{
					this.OnxautomationChanging(value);
					this.SendPropertyChanging();
					this._xautomation = value;
					this.SendPropertyChanged("xautomation");
					this.OnxautomationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xperiod", DbType="Int")]
		public System.Nullable<int> xperiod
		{
			get
			{
				return this._xperiod;
			}
			set
			{
				if ((this._xperiod != value))
				{
					this.OnxperiodChanging(value);
					this.SendPropertyChanging();
					this._xperiod = value;
					this.SendPropertyChanged("xperiod");
					this.OnxperiodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="device_mdeviceset1", Storage="_mdeviceset1s", ThisKey="xcod", OtherKey="xiddevice")]
		public EntitySet<mdeviceset1> mdeviceset1s
		{
			get
			{
				return this._mdeviceset1s;
			}
			set
			{
				this._mdeviceset1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mdetailsdevice_device", Storage="_mdetailsdevice", ThisKey="xiddevice", OtherKey="xcoddevice", IsForeignKey=true)]
		public mdetailsdevice mdetailsdevice
		{
			get
			{
				return this._mdetailsdevice.Entity;
			}
			set
			{
				mdetailsdevice previousValue = this._mdetailsdevice.Entity;
				if (((previousValue != value) 
							|| (this._mdetailsdevice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mdetailsdevice.Entity = null;
						previousValue.devices.Remove(this);
					}
					this._mdetailsdevice.Entity = value;
					if ((value != null))
					{
						value.devices.Add(this);
						this._xiddevice = value.xcoddevice;
					}
					else
					{
						this._xiddevice = default(string);
					}
					this.SendPropertyChanged("mdetailsdevice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mdeviceset1s(mdeviceset1 entity)
		{
			this.SendPropertyChanging();
			entity.device = this;
		}
		
		private void detach_mdeviceset1s(mdeviceset1 entity)
		{
			this.SendPropertyChanging();
			entity.device = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mallobject")]
	public partial class mallobject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _xcod;
		
		private System.Nullable<int> _count;
		
		private string _oloaviyat;
		
		private string _xid;
		
		private string _xcodparent;
		
		private int _xrowid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxcodChanging(string value);
    partial void OnxcodChanged();
    partial void OncountChanging(System.Nullable<int> value);
    partial void OncountChanged();
    partial void OnoloaviyatChanging(string value);
    partial void OnoloaviyatChanged();
    partial void OnxidChanging(string value);
    partial void OnxidChanged();
    partial void OnxcodparentChanging(string value);
    partial void OnxcodparentChanged();
    partial void OnxrowidChanging(int value);
    partial void OnxrowidChanged();
    #endregion
		
		public mallobject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcod", DbType="NChar(28) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string xcod
		{
			get
			{
				return this._xcod;
			}
			set
			{
				if ((this._xcod != value))
				{
					this.OnxcodChanging(value);
					this.SendPropertyChanging();
					this._xcod = value;
					this.SendPropertyChanged("xcod");
					this.OnxcodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oloaviyat", DbType="NVarChar(50)")]
		public string oloaviyat
		{
			get
			{
				return this._oloaviyat;
			}
			set
			{
				if ((this._oloaviyat != value))
				{
					this.OnoloaviyatChanging(value);
					this.SendPropertyChanging();
					this._oloaviyat = value;
					this.SendPropertyChanged("oloaviyat");
					this.OnoloaviyatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", DbType="NChar(9)")]
		public string xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcodparent", DbType="NChar(15)")]
		public string xcodparent
		{
			get
			{
				return this._xcodparent;
			}
			set
			{
				if ((this._xcodparent != value))
				{
					this.OnxcodparentChanging(value);
					this.SendPropertyChanging();
					this._xcodparent = value;
					this.SendPropertyChanged("xcodparent");
					this.OnxcodparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xrowid", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int xrowid
		{
			get
			{
				return this._xrowid;
			}
			set
			{
				if ((this._xrowid != value))
				{
					this.OnxrowidChanging(value);
					this.SendPropertyChanging();
					this._xrowid = value;
					this.SendPropertyChanged("xrowid");
					this.OnxrowidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mdetailsdevice")]
	public partial class mdetailsdevice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _xnamedevice;
		
		private string _xEnglishname;
		
		private string _xcoddevice;
		
		private System.Nullable<int> _xcount;
		
		private System.Nullable<int> _xcountofoperator;
		
		private System.Nullable<float> _xweight;
		
		private System.Nullable<float> _xuseful_life;
		
		private System.Data.Linq.Binary _map;
		
		private System.Nullable<bool> _typemap;
		
		private EntitySet<device> _devices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxnamedeviceChanging(string value);
    partial void OnxnamedeviceChanged();
    partial void OnxEnglishnameChanging(string value);
    partial void OnxEnglishnameChanged();
    partial void OnxcoddeviceChanging(string value);
    partial void OnxcoddeviceChanged();
    partial void OnxcountChanging(System.Nullable<int> value);
    partial void OnxcountChanged();
    partial void OnxcountofoperatorChanging(System.Nullable<int> value);
    partial void OnxcountofoperatorChanged();
    partial void OnxweightChanging(System.Nullable<float> value);
    partial void OnxweightChanged();
    partial void Onxuseful_lifeChanging(System.Nullable<float> value);
    partial void Onxuseful_lifeChanged();
    partial void OnmapChanging(System.Data.Linq.Binary value);
    partial void OnmapChanged();
    partial void OntypemapChanging(System.Nullable<bool> value);
    partial void OntypemapChanged();
    #endregion
		
		public mdetailsdevice()
		{
			this._devices = new EntitySet<device>(new Action<device>(this.attach_devices), new Action<device>(this.detach_devices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnamedevice", DbType="NVarChar(MAX)")]
		public string xnamedevice
		{
			get
			{
				return this._xnamedevice;
			}
			set
			{
				if ((this._xnamedevice != value))
				{
					this.OnxnamedeviceChanging(value);
					this.SendPropertyChanging();
					this._xnamedevice = value;
					this.SendPropertyChanged("xnamedevice");
					this.OnxnamedeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xEnglishname", DbType="NVarChar(MAX)")]
		public string xEnglishname
		{
			get
			{
				return this._xEnglishname;
			}
			set
			{
				if ((this._xEnglishname != value))
				{
					this.OnxEnglishnameChanging(value);
					this.SendPropertyChanging();
					this._xEnglishname = value;
					this.SendPropertyChanged("xEnglishname");
					this.OnxEnglishnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcoddevice", DbType="NChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string xcoddevice
		{
			get
			{
				return this._xcoddevice;
			}
			set
			{
				if ((this._xcoddevice != value))
				{
					this.OnxcoddeviceChanging(value);
					this.SendPropertyChanging();
					this._xcoddevice = value;
					this.SendPropertyChanged("xcoddevice");
					this.OnxcoddeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcount", DbType="Int")]
		public System.Nullable<int> xcount
		{
			get
			{
				return this._xcount;
			}
			set
			{
				if ((this._xcount != value))
				{
					this.OnxcountChanging(value);
					this.SendPropertyChanging();
					this._xcount = value;
					this.SendPropertyChanged("xcount");
					this.OnxcountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcountofoperator", DbType="Int")]
		public System.Nullable<int> xcountofoperator
		{
			get
			{
				return this._xcountofoperator;
			}
			set
			{
				if ((this._xcountofoperator != value))
				{
					this.OnxcountofoperatorChanging(value);
					this.SendPropertyChanging();
					this._xcountofoperator = value;
					this.SendPropertyChanged("xcountofoperator");
					this.OnxcountofoperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xweight", DbType="Real")]
		public System.Nullable<float> xweight
		{
			get
			{
				return this._xweight;
			}
			set
			{
				if ((this._xweight != value))
				{
					this.OnxweightChanging(value);
					this.SendPropertyChanging();
					this._xweight = value;
					this.SendPropertyChanged("xweight");
					this.OnxweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xuseful_life", DbType="Real")]
		public System.Nullable<float> xuseful_life
		{
			get
			{
				return this._xuseful_life;
			}
			set
			{
				if ((this._xuseful_life != value))
				{
					this.Onxuseful_lifeChanging(value);
					this.SendPropertyChanging();
					this._xuseful_life = value;
					this.SendPropertyChanged("xuseful_life");
					this.Onxuseful_lifeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_map", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary map
		{
			get
			{
				return this._map;
			}
			set
			{
				if ((this._map != value))
				{
					this.OnmapChanging(value);
					this.SendPropertyChanging();
					this._map = value;
					this.SendPropertyChanged("map");
					this.OnmapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typemap", DbType="Bit")]
		public System.Nullable<bool> typemap
		{
			get
			{
				return this._typemap;
			}
			set
			{
				if ((this._typemap != value))
				{
					this.OntypemapChanging(value);
					this.SendPropertyChanging();
					this._typemap = value;
					this.SendPropertyChanged("typemap");
					this.OntypemapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mdetailsdevice_device", Storage="_devices", ThisKey="xcoddevice", OtherKey="xiddevice")]
		public EntitySet<device> devices
		{
			get
			{
				return this._devices;
			}
			set
			{
				this._devices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_devices(device entity)
		{
			this.SendPropertyChanging();
			entity.mdetailsdevice = this;
		}
		
		private void detach_devices(device entity)
		{
			this.SendPropertyChanging();
			entity.mdetailsdevice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mdevice_state")]
	public partial class mdevice_state : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _xstate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxstateChanging(string value);
    partial void OnxstateChanged();
    #endregion
		
		public mdevice_state()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xstate", DbType="NVarChar(50)")]
		public string xstate
		{
			get
			{
				return this._xstate;
			}
			set
			{
				if ((this._xstate != value))
				{
					this.OnxstateChanging(value);
					this.SendPropertyChanging();
					this._xstate = value;
					this.SendPropertyChanged("xstate");
					this.OnxstateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mlevelautomationdevice")]
	public partial class mlevelautomationdevice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _xlevelautomation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxlevelautomationChanging(string value);
    partial void OnxlevelautomationChanged();
    #endregion
		
		public mlevelautomationdevice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xlevelautomation", DbType="NVarChar(50)")]
		public string xlevelautomation
		{
			get
			{
				return this._xlevelautomation;
			}
			set
			{
				if ((this._xlevelautomation != value))
				{
					this.OnxlevelautomationChanging(value);
					this.SendPropertyChanging();
					this._xlevelautomation = value;
					this.SendPropertyChanged("xlevelautomation");
					this.OnxlevelautomationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mPeriod")]
	public partial class mPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _xname;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxnameChanging(string value);
    partial void OnxnameChanged();
    #endregion
		
		public mPeriod()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname", DbType="NVarChar(50)")]
		public string xname
		{
			get
			{
				return this._xname;
			}
			set
			{
				if ((this._xname != value))
				{
					this.OnxnameChanging(value);
					this.SendPropertyChanging();
					this._xname = value;
					this.SendPropertyChanged("xname");
					this.OnxnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.object_set2")]
	public partial class object_set2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _xid_parent;
		
		private string _xid;
		
		private System.Nullable<int> _xcount;
		
		private string _xcod;
		
		private string _is_key;
		
		private EntityRef<objecttable> _objecttable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onxid_parentChanging(string value);
    partial void Onxid_parentChanged();
    partial void OnxidChanging(string value);
    partial void OnxidChanged();
    partial void OnxcountChanging(System.Nullable<int> value);
    partial void OnxcountChanged();
    partial void OnxcodChanging(string value);
    partial void OnxcodChanged();
    partial void Onis_keyChanging(string value);
    partial void Onis_keyChanged();
    #endregion
		
		public object_set2()
		{
			this._objecttable = default(EntityRef<objecttable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid_parent", DbType="NChar(15) NOT NULL", CanBeNull=false)]
		public string xid_parent
		{
			get
			{
				return this._xid_parent;
			}
			set
			{
				if ((this._xid_parent != value))
				{
					this.Onxid_parentChanging(value);
					this.SendPropertyChanging();
					this._xid_parent = value;
					this.SendPropertyChanged("xid_parent");
					this.Onxid_parentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", DbType="NChar(9) NOT NULL", CanBeNull=false)]
		public string xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					if (this._objecttable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcount", DbType="Int")]
		public System.Nullable<int> xcount
		{
			get
			{
				return this._xcount;
			}
			set
			{
				if ((this._xcount != value))
				{
					this.OnxcountChanging(value);
					this.SendPropertyChanging();
					this._xcount = value;
					this.SendPropertyChanged("xcount");
					this.OnxcountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcod", DbType="NChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string xcod
		{
			get
			{
				return this._xcod;
			}
			set
			{
				if ((this._xcod != value))
				{
					this.OnxcodChanging(value);
					this.SendPropertyChanging();
					this._xcod = value;
					this.SendPropertyChanged("xcod");
					this.OnxcodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_key", DbType="NVarChar(50)")]
		public string is_key
		{
			get
			{
				return this._is_key;
			}
			set
			{
				if ((this._is_key != value))
				{
					this.Onis_keyChanging(value);
					this.SendPropertyChanging();
					this._is_key = value;
					this.SendPropertyChanged("is_key");
					this.Onis_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="objecttable_object_set2", Storage="_objecttable", ThisKey="xid", OtherKey="xid", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public objecttable objecttable
		{
			get
			{
				return this._objecttable.Entity;
			}
			set
			{
				objecttable previousValue = this._objecttable.Entity;
				if (((previousValue != value) 
							|| (this._objecttable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._objecttable.Entity = null;
						previousValue.object_set2s.Remove(this);
					}
					this._objecttable.Entity = value;
					if ((value != null))
					{
						value.object_set2s.Add(this);
						this._xid = value.xid;
					}
					else
					{
						this._xid = default(string);
					}
					this.SendPropertyChanged("objecttable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.objecttable")]
	public partial class objecttable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _xid;
		
		private string _xname;
		
		private string _xdetails;
		
		private System.Nullable<bool> _xisBuilding;
		
		private EntitySet<object_set2> _object_set2s;
		
		private EntityRef<objecttable> _objecttable2;
		
		private EntityRef<objecttable> _objecttable1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(string value);
    partial void OnxidChanged();
    partial void OnxnameChanging(string value);
    partial void OnxnameChanged();
    partial void OnxdetailsChanging(string value);
    partial void OnxdetailsChanged();
    partial void OnxisBuildingChanging(System.Nullable<bool> value);
    partial void OnxisBuildingChanged();
    #endregion
		
		public objecttable()
		{
			this._object_set2s = new EntitySet<object_set2>(new Action<object_set2>(this.attach_object_set2s), new Action<object_set2>(this.detach_object_set2s));
			this._objecttable2 = default(EntityRef<objecttable>);
			this._objecttable1 = default(EntityRef<objecttable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", DbType="NChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					if (this._objecttable1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname", DbType="NVarChar(MAX)")]
		public string xname
		{
			get
			{
				return this._xname;
			}
			set
			{
				if ((this._xname != value))
				{
					this.OnxnameChanging(value);
					this.SendPropertyChanging();
					this._xname = value;
					this.SendPropertyChanged("xname");
					this.OnxnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdetails", DbType="NVarChar(MAX)")]
		public string xdetails
		{
			get
			{
				return this._xdetails;
			}
			set
			{
				if ((this._xdetails != value))
				{
					this.OnxdetailsChanging(value);
					this.SendPropertyChanging();
					this._xdetails = value;
					this.SendPropertyChanged("xdetails");
					this.OnxdetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xisBuilding", DbType="Bit")]
		public System.Nullable<bool> xisBuilding
		{
			get
			{
				return this._xisBuilding;
			}
			set
			{
				if ((this._xisBuilding != value))
				{
					this.OnxisBuildingChanging(value);
					this.SendPropertyChanging();
					this._xisBuilding = value;
					this.SendPropertyChanged("xisBuilding");
					this.OnxisBuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="objecttable_object_set2", Storage="_object_set2s", ThisKey="xid", OtherKey="xid")]
		public EntitySet<object_set2> object_set2s
		{
			get
			{
				return this._object_set2s;
			}
			set
			{
				this._object_set2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="objecttable_objecttable", Storage="_objecttable2", ThisKey="xid", OtherKey="xid", IsUnique=true, IsForeignKey=false)]
		public objecttable objecttable2
		{
			get
			{
				return this._objecttable2.Entity;
			}
			set
			{
				objecttable previousValue = this._objecttable2.Entity;
				if (((previousValue != value) 
							|| (this._objecttable2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._objecttable2.Entity = null;
						previousValue.objecttable1 = null;
					}
					this._objecttable2.Entity = value;
					if ((value != null))
					{
						value.objecttable1 = this;
					}
					this.SendPropertyChanged("objecttable2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="objecttable_objecttable", Storage="_objecttable1", ThisKey="xid", OtherKey="xid", IsForeignKey=true)]
		public objecttable objecttable1
		{
			get
			{
				return this._objecttable1.Entity;
			}
			set
			{
				objecttable previousValue = this._objecttable1.Entity;
				if (((previousValue != value) 
							|| (this._objecttable1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._objecttable1.Entity = null;
						previousValue.objecttable2 = null;
					}
					this._objecttable1.Entity = value;
					if ((value != null))
					{
						value.objecttable2 = this;
						this._xid = value.xid;
					}
					else
					{
						this._xid = default(string);
					}
					this.SendPropertyChanged("objecttable1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_object_set2s(object_set2 entity)
		{
			this.SendPropertyChanging();
			entity.objecttable = this;
		}
		
		private void detach_object_set2s(object_set2 entity)
		{
			this.SendPropertyChanging();
			entity.objecttable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Viewallobject")]
	public partial class Viewallobject
	{
		
		private int _xrowid;
		
		private string _xcod;
		
		private string _xname;
		
		private string _xdetails;
		
		private System.Nullable<int> _count;
		
		private string _xnamedevice;
		
		private string _xnumber;
		
		private string _xnameset1;
		
		private string _xnameset2;
		
		private string _xnameset3;
		
		private string _oloaviyat;
		
		private System.Nullable<bool> _xisBuilding;
		
		public Viewallobject()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xrowid", DbType="Int NOT NULL")]
		public int xrowid
		{
			get
			{
				return this._xrowid;
			}
			set
			{
				if ((this._xrowid != value))
				{
					this._xrowid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcod", DbType="NChar(28) NOT NULL", CanBeNull=false)]
		public string xcod
		{
			get
			{
				return this._xcod;
			}
			set
			{
				if ((this._xcod != value))
				{
					this._xcod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname", DbType="NVarChar(MAX)")]
		public string xname
		{
			get
			{
				return this._xname;
			}
			set
			{
				if ((this._xname != value))
				{
					this._xname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdetails", DbType="NVarChar(MAX)")]
		public string xdetails
		{
			get
			{
				return this._xdetails;
			}
			set
			{
				if ((this._xdetails != value))
				{
					this._xdetails = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnamedevice", DbType="NVarChar(MAX)")]
		public string xnamedevice
		{
			get
			{
				return this._xnamedevice;
			}
			set
			{
				if ((this._xnamedevice != value))
				{
					this._xnamedevice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnumber", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string xnumber
		{
			get
			{
				return this._xnumber;
			}
			set
			{
				if ((this._xnumber != value))
				{
					this._xnumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnameset1", DbType="NVarChar(50)")]
		public string xnameset1
		{
			get
			{
				return this._xnameset1;
			}
			set
			{
				if ((this._xnameset1 != value))
				{
					this._xnameset1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnameset2", DbType="NVarChar(50)")]
		public string xnameset2
		{
			get
			{
				return this._xnameset2;
			}
			set
			{
				if ((this._xnameset2 != value))
				{
					this._xnameset2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnameset3", DbType="NVarChar(50)")]
		public string xnameset3
		{
			get
			{
				return this._xnameset3;
			}
			set
			{
				if ((this._xnameset3 != value))
				{
					this._xnameset3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oloaviyat", DbType="NVarChar(50)")]
		public string oloaviyat
		{
			get
			{
				return this._oloaviyat;
			}
			set
			{
				if ((this._oloaviyat != value))
				{
					this._oloaviyat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xisBuilding", DbType="Bit")]
		public System.Nullable<bool> xisBuilding
		{
			get
			{
				return this._xisBuilding;
			}
			set
			{
				if ((this._xisBuilding != value))
				{
					this._xisBuilding = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mdeviceset1")]
	public partial class mdeviceset1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _xcod;
		
		private string _xiddevice;
		
		private string _xid;
		
		private string _xnameset1;
		
		private string _xdetails;
		
		private System.Nullable<bool> _xIsmecanical;
		
		private System.Nullable<bool> _xIsglobal;
		
		private EntitySet<mdeviceset2> _mdeviceset2s;
		
		private EntityRef<device> _device;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxcodChanging(string value);
    partial void OnxcodChanged();
    partial void OnxiddeviceChanging(string value);
    partial void OnxiddeviceChanged();
    partial void OnxidChanging(string value);
    partial void OnxidChanged();
    partial void Onxnameset1Changing(string value);
    partial void Onxnameset1Changed();
    partial void OnxdetailsChanging(string value);
    partial void OnxdetailsChanged();
    partial void OnxIsmecanicalChanging(System.Nullable<bool> value);
    partial void OnxIsmecanicalChanged();
    partial void OnxIsglobalChanging(System.Nullable<bool> value);
    partial void OnxIsglobalChanged();
    #endregion
		
		public mdeviceset1()
		{
			this._mdeviceset2s = new EntitySet<mdeviceset2>(new Action<mdeviceset2>(this.attach_mdeviceset2s), new Action<mdeviceset2>(this.detach_mdeviceset2s));
			this._device = default(EntityRef<device>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcod", DbType="NChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string xcod
		{
			get
			{
				return this._xcod;
			}
			set
			{
				if ((this._xcod != value))
				{
					this.OnxcodChanging(value);
					this.SendPropertyChanging();
					this._xcod = value;
					this.SendPropertyChanged("xcod");
					this.OnxcodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xiddevice", DbType="NChar(9) NOT NULL", CanBeNull=false)]
		public string xiddevice
		{
			get
			{
				return this._xiddevice;
			}
			set
			{
				if ((this._xiddevice != value))
				{
					if (this._device.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnxiddeviceChanging(value);
					this.SendPropertyChanging();
					this._xiddevice = value;
					this.SendPropertyChanged("xiddevice");
					this.OnxiddeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnameset1", DbType="NVarChar(50)")]
		public string xnameset1
		{
			get
			{
				return this._xnameset1;
			}
			set
			{
				if ((this._xnameset1 != value))
				{
					this.Onxnameset1Changing(value);
					this.SendPropertyChanging();
					this._xnameset1 = value;
					this.SendPropertyChanged("xnameset1");
					this.Onxnameset1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdetails", DbType="NVarChar(MAX)")]
		public string xdetails
		{
			get
			{
				return this._xdetails;
			}
			set
			{
				if ((this._xdetails != value))
				{
					this.OnxdetailsChanging(value);
					this.SendPropertyChanging();
					this._xdetails = value;
					this.SendPropertyChanged("xdetails");
					this.OnxdetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xIsmecanical", DbType="Bit")]
		public System.Nullable<bool> xIsmecanical
		{
			get
			{
				return this._xIsmecanical;
			}
			set
			{
				if ((this._xIsmecanical != value))
				{
					this.OnxIsmecanicalChanging(value);
					this.SendPropertyChanging();
					this._xIsmecanical = value;
					this.SendPropertyChanged("xIsmecanical");
					this.OnxIsmecanicalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xIsglobal", DbType="Bit")]
		public System.Nullable<bool> xIsglobal
		{
			get
			{
				return this._xIsglobal;
			}
			set
			{
				if ((this._xIsglobal != value))
				{
					this.OnxIsglobalChanging(value);
					this.SendPropertyChanging();
					this._xIsglobal = value;
					this.SendPropertyChanged("xIsglobal");
					this.OnxIsglobalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mdeviceset1_mdeviceset2", Storage="_mdeviceset2s", ThisKey="xcod", OtherKey="xparentid")]
		public EntitySet<mdeviceset2> mdeviceset2s
		{
			get
			{
				return this._mdeviceset2s;
			}
			set
			{
				this._mdeviceset2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="device_mdeviceset1", Storage="_device", ThisKey="xiddevice", OtherKey="xcod", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public device device
		{
			get
			{
				return this._device.Entity;
			}
			set
			{
				device previousValue = this._device.Entity;
				if (((previousValue != value) 
							|| (this._device.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._device.Entity = null;
						previousValue.mdeviceset1s.Remove(this);
					}
					this._device.Entity = value;
					if ((value != null))
					{
						value.mdeviceset1s.Add(this);
						this._xiddevice = value.xcod;
					}
					else
					{
						this._xiddevice = default(string);
					}
					this.SendPropertyChanged("device");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mdeviceset2s(mdeviceset2 entity)
		{
			this.SendPropertyChanging();
			entity.mdeviceset1 = this;
		}
		
		private void detach_mdeviceset2s(mdeviceset2 entity)
		{
			this.SendPropertyChanging();
			entity.mdeviceset1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mdeviceset2")]
	public partial class mdeviceset2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _xparentid;
		
		private string _xnameset2;
		
		private string _xid;
		
		private string _xdetails;
		
		private string _xcodfinalset2;
		
		private System.Nullable<bool> _xIsmecanical;
		
		private System.Nullable<bool> _xisglobal;
		
		private EntitySet<mdeviceset3> _mdeviceset3s;
		
		private EntityRef<mdeviceset1> _mdeviceset1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxparentidChanging(string value);
    partial void OnxparentidChanged();
    partial void Onxnameset2Changing(string value);
    partial void Onxnameset2Changed();
    partial void OnxidChanging(string value);
    partial void OnxidChanged();
    partial void OnxdetailsChanging(string value);
    partial void OnxdetailsChanged();
    partial void Onxcodfinalset2Changing(string value);
    partial void Onxcodfinalset2Changed();
    partial void OnxIsmecanicalChanging(System.Nullable<bool> value);
    partial void OnxIsmecanicalChanged();
    partial void OnxisglobalChanging(System.Nullable<bool> value);
    partial void OnxisglobalChanged();
    #endregion
		
		public mdeviceset2()
		{
			this._mdeviceset3s = new EntitySet<mdeviceset3>(new Action<mdeviceset3>(this.attach_mdeviceset3s), new Action<mdeviceset3>(this.detach_mdeviceset3s));
			this._mdeviceset1 = default(EntityRef<mdeviceset1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xparentid", DbType="NChar(9)")]
		public string xparentid
		{
			get
			{
				return this._xparentid;
			}
			set
			{
				if ((this._xparentid != value))
				{
					if (this._mdeviceset1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnxparentidChanging(value);
					this.SendPropertyChanging();
					this._xparentid = value;
					this.SendPropertyChanged("xparentid");
					this.OnxparentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnameset2", DbType="NVarChar(50)")]
		public string xnameset2
		{
			get
			{
				return this._xnameset2;
			}
			set
			{
				if ((this._xnameset2 != value))
				{
					this.Onxnameset2Changing(value);
					this.SendPropertyChanging();
					this._xnameset2 = value;
					this.SendPropertyChanged("xnameset2");
					this.Onxnameset2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", DbType="NChar(2)")]
		public string xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdetails", DbType="NVarChar(MAX)")]
		public string xdetails
		{
			get
			{
				return this._xdetails;
			}
			set
			{
				if ((this._xdetails != value))
				{
					this.OnxdetailsChanging(value);
					this.SendPropertyChanging();
					this._xdetails = value;
					this.SendPropertyChanged("xdetails");
					this.OnxdetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcodfinalset2", DbType="NChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string xcodfinalset2
		{
			get
			{
				return this._xcodfinalset2;
			}
			set
			{
				if ((this._xcodfinalset2 != value))
				{
					this.Onxcodfinalset2Changing(value);
					this.SendPropertyChanging();
					this._xcodfinalset2 = value;
					this.SendPropertyChanged("xcodfinalset2");
					this.Onxcodfinalset2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xIsmecanical", DbType="Bit")]
		public System.Nullable<bool> xIsmecanical
		{
			get
			{
				return this._xIsmecanical;
			}
			set
			{
				if ((this._xIsmecanical != value))
				{
					this.OnxIsmecanicalChanging(value);
					this.SendPropertyChanging();
					this._xIsmecanical = value;
					this.SendPropertyChanged("xIsmecanical");
					this.OnxIsmecanicalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xisglobal", DbType="Bit")]
		public System.Nullable<bool> xisglobal
		{
			get
			{
				return this._xisglobal;
			}
			set
			{
				if ((this._xisglobal != value))
				{
					this.OnxisglobalChanging(value);
					this.SendPropertyChanging();
					this._xisglobal = value;
					this.SendPropertyChanged("xisglobal");
					this.OnxisglobalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mdeviceset2_mdeviceset3", Storage="_mdeviceset3s", ThisKey="xcodfinalset2", OtherKey="xparentid")]
		public EntitySet<mdeviceset3> mdeviceset3s
		{
			get
			{
				return this._mdeviceset3s;
			}
			set
			{
				this._mdeviceset3s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mdeviceset1_mdeviceset2", Storage="_mdeviceset1", ThisKey="xparentid", OtherKey="xcod", IsForeignKey=true, DeleteRule="CASCADE")]
		public mdeviceset1 mdeviceset1
		{
			get
			{
				return this._mdeviceset1.Entity;
			}
			set
			{
				mdeviceset1 previousValue = this._mdeviceset1.Entity;
				if (((previousValue != value) 
							|| (this._mdeviceset1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mdeviceset1.Entity = null;
						previousValue.mdeviceset2s.Remove(this);
					}
					this._mdeviceset1.Entity = value;
					if ((value != null))
					{
						value.mdeviceset2s.Add(this);
						this._xparentid = value.xcod;
					}
					else
					{
						this._xparentid = default(string);
					}
					this.SendPropertyChanged("mdeviceset1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mdeviceset3s(mdeviceset3 entity)
		{
			this.SendPropertyChanging();
			entity.mdeviceset2 = this;
		}
		
		private void detach_mdeviceset3s(mdeviceset3 entity)
		{
			this.SendPropertyChanging();
			entity.mdeviceset2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mdeviceset3")]
	public partial class mdeviceset3 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _xparentid;
		
		private string _xnameset3;
		
		private string _xid;
		
		private string _xcodfinalset3;
		
		private System.Nullable<bool> _xismecanical;
		
		private string _xdetails;
		
		private EntityRef<mdeviceset2> _mdeviceset2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxparentidChanging(string value);
    partial void OnxparentidChanged();
    partial void Onxnameset3Changing(string value);
    partial void Onxnameset3Changed();
    partial void OnxidChanging(string value);
    partial void OnxidChanged();
    partial void Onxcodfinalset3Changing(string value);
    partial void Onxcodfinalset3Changed();
    partial void OnxismecanicalChanging(System.Nullable<bool> value);
    partial void OnxismecanicalChanged();
    partial void OnxdetailsChanging(string value);
    partial void OnxdetailsChanged();
    #endregion
		
		public mdeviceset3()
		{
			this._mdeviceset2 = default(EntityRef<mdeviceset2>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xparentid", DbType="NChar(12)")]
		public string xparentid
		{
			get
			{
				return this._xparentid;
			}
			set
			{
				if ((this._xparentid != value))
				{
					if (this._mdeviceset2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnxparentidChanging(value);
					this.SendPropertyChanging();
					this._xparentid = value;
					this.SendPropertyChanged("xparentid");
					this.OnxparentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnameset3", DbType="NVarChar(50)")]
		public string xnameset3
		{
			get
			{
				return this._xnameset3;
			}
			set
			{
				if ((this._xnameset3 != value))
				{
					this.Onxnameset3Changing(value);
					this.SendPropertyChanging();
					this._xnameset3 = value;
					this.SendPropertyChanged("xnameset3");
					this.Onxnameset3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", DbType="NChar(2)")]
		public string xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcodfinalset3", DbType="NChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string xcodfinalset3
		{
			get
			{
				return this._xcodfinalset3;
			}
			set
			{
				if ((this._xcodfinalset3 != value))
				{
					this.Onxcodfinalset3Changing(value);
					this.SendPropertyChanging();
					this._xcodfinalset3 = value;
					this.SendPropertyChanged("xcodfinalset3");
					this.Onxcodfinalset3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xismecanical", DbType="Bit")]
		public System.Nullable<bool> xismecanical
		{
			get
			{
				return this._xismecanical;
			}
			set
			{
				if ((this._xismecanical != value))
				{
					this.OnxismecanicalChanging(value);
					this.SendPropertyChanging();
					this._xismecanical = value;
					this.SendPropertyChanged("xismecanical");
					this.OnxismecanicalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdetails", DbType="NVarChar(MAX)")]
		public string xdetails
		{
			get
			{
				return this._xdetails;
			}
			set
			{
				if ((this._xdetails != value))
				{
					this.OnxdetailsChanging(value);
					this.SendPropertyChanging();
					this._xdetails = value;
					this.SendPropertyChanged("xdetails");
					this.OnxdetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mdeviceset2_mdeviceset3", Storage="_mdeviceset2", ThisKey="xparentid", OtherKey="xcodfinalset2", IsForeignKey=true, DeleteRule="CASCADE")]
		public mdeviceset2 mdeviceset2
		{
			get
			{
				return this._mdeviceset2.Entity;
			}
			set
			{
				mdeviceset2 previousValue = this._mdeviceset2.Entity;
				if (((previousValue != value) 
							|| (this._mdeviceset2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mdeviceset2.Entity = null;
						previousValue.mdeviceset3s.Remove(this);
					}
					this._mdeviceset2.Entity = value;
					if ((value != null))
					{
						value.mdeviceset3s.Add(this);
						this._xparentid = value.xcodfinalset2;
					}
					else
					{
						this._xparentid = default(string);
					}
					this.SendPropertyChanged("mdeviceset2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mobjectcod")]
	public partial class mobjectcod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _xname;
		
		private string _xcod;
		
		private System.Nullable<char> _knid;
		
		private string _xcodfinal;
		
		private string _xvahed;
		
		private string _xname_English;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxnameChanging(string value);
    partial void OnxnameChanged();
    partial void OnxcodChanging(string value);
    partial void OnxcodChanged();
    partial void OnknidChanging(System.Nullable<char> value);
    partial void OnknidChanged();
    partial void OnxcodfinalChanging(string value);
    partial void OnxcodfinalChanged();
    partial void OnxvahedChanging(string value);
    partial void OnxvahedChanged();
    partial void Onxname_EnglishChanging(string value);
    partial void Onxname_EnglishChanged();
    #endregion
		
		public mobjectcod()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname", DbType="NVarChar(MAX)")]
		public string xname
		{
			get
			{
				return this._xname;
			}
			set
			{
				if ((this._xname != value))
				{
					this.OnxnameChanging(value);
					this.SendPropertyChanging();
					this._xname = value;
					this.SendPropertyChanged("xname");
					this.OnxnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcod", DbType="NChar(3)")]
		public string xcod
		{
			get
			{
				return this._xcod;
			}
			set
			{
				if ((this._xcod != value))
				{
					this.OnxcodChanging(value);
					this.SendPropertyChanging();
					this._xcod = value;
					this.SendPropertyChanged("xcod");
					this.OnxcodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_knid", DbType="NChar(1)")]
		public System.Nullable<char> knid
		{
			get
			{
				return this._knid;
			}
			set
			{
				if ((this._knid != value))
				{
					this.OnknidChanging(value);
					this.SendPropertyChanging();
					this._knid = value;
					this.SendPropertyChanged("knid");
					this.OnknidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcodfinal", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string xcodfinal
		{
			get
			{
				return this._xcodfinal;
			}
			set
			{
				if ((this._xcodfinal != value))
				{
					this.OnxcodfinalChanging(value);
					this.SendPropertyChanging();
					this._xcodfinal = value;
					this.SendPropertyChanged("xcodfinal");
					this.OnxcodfinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xvahed", DbType="NVarChar(50)")]
		public string xvahed
		{
			get
			{
				return this._xvahed;
			}
			set
			{
				if ((this._xvahed != value))
				{
					this.OnxvahedChanging(value);
					this.SendPropertyChanging();
					this._xvahed = value;
					this.SendPropertyChanged("xvahed");
					this.OnxvahedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname_English", DbType="NChar(50)")]
		public string xname_English
		{
			get
			{
				return this._xname_English;
			}
			set
			{
				if ((this._xname_English != value))
				{
					this.Onxname_EnglishChanging(value);
					this.SendPropertyChanging();
					this._xname_English = value;
					this.SendPropertyChanged("xname_English");
					this.Onxname_EnglishChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mlocation")]
	public partial class mlocation
	{
		
		private int _xid;
		
		private string _xnameoflocation;
		
		private string _xcodoflocation;
		
		public mlocation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this._xid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnameoflocation", DbType="NVarChar(50)")]
		public string xnameoflocation
		{
			get
			{
				return this._xnameoflocation;
			}
			set
			{
				if ((this._xnameoflocation != value))
				{
					this._xnameoflocation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcodoflocation", DbType="NChar(2)")]
		public string xcodoflocation
		{
			get
			{
				return this._xcodoflocation;
			}
			set
			{
				if ((this._xcodoflocation != value))
				{
					this._xcodoflocation = value;
				}
			}
		}
	}
	
	public partial class SelectallobjectResult
	{
		
		private string _xcod;
		
		private string _xname;
		
		private string _xdetails;
		
		private System.Nullable<int> _count;
		
		private string _xnamedevice;
		
		private string _xnumber;
		
		private string _xnameset1;
		
		private string _xnameset2;
		
		private string _xnameset3;
		
		private string _oloaviyat;
		
		public SelectallobjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcod", DbType="NChar(28) NOT NULL", CanBeNull=false)]
		public string xcod
		{
			get
			{
				return this._xcod;
			}
			set
			{
				if ((this._xcod != value))
				{
					this._xcod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname", DbType="NVarChar(MAX)")]
		public string xname
		{
			get
			{
				return this._xname;
			}
			set
			{
				if ((this._xname != value))
				{
					this._xname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdetails", DbType="NVarChar(MAX)")]
		public string xdetails
		{
			get
			{
				return this._xdetails;
			}
			set
			{
				if ((this._xdetails != value))
				{
					this._xdetails = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnamedevice", DbType="NVarChar(50)")]
		public string xnamedevice
		{
			get
			{
				return this._xnamedevice;
			}
			set
			{
				if ((this._xnamedevice != value))
				{
					this._xnamedevice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnumber", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string xnumber
		{
			get
			{
				return this._xnumber;
			}
			set
			{
				if ((this._xnumber != value))
				{
					this._xnumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnameset1", DbType="NVarChar(50)")]
		public string xnameset1
		{
			get
			{
				return this._xnameset1;
			}
			set
			{
				if ((this._xnameset1 != value))
				{
					this._xnameset1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnameset2", DbType="NVarChar(50)")]
		public string xnameset2
		{
			get
			{
				return this._xnameset2;
			}
			set
			{
				if ((this._xnameset2 != value))
				{
					this._xnameset2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xnameset3", DbType="NVarChar(50)")]
		public string xnameset3
		{
			get
			{
				return this._xnameset3;
			}
			set
			{
				if ((this._xnameset3 != value))
				{
					this._xnameset3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oloaviyat", DbType="NVarChar(50)")]
		public string oloaviyat
		{
			get
			{
				return this._oloaviyat;
			}
			set
			{
				if ((this._oloaviyat != value))
				{
					this._oloaviyat = value;
				}
			}
		}
	}
	
	public partial class Updateobject_set2_countResult
	{
		
		private string _xid_parent;
		
		private string _xid;
		
		private System.Nullable<int> _xcount;
		
		private string _xcod;
		
		public Updateobject_set2_countResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid_parent", DbType="NChar(15) NOT NULL", CanBeNull=false)]
		public string xid_parent
		{
			get
			{
				return this._xid_parent;
			}
			set
			{
				if ((this._xid_parent != value))
				{
					this._xid_parent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", DbType="NChar(9) NOT NULL", CanBeNull=false)]
		public string xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this._xid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcount", DbType="Int")]
		public System.Nullable<int> xcount
		{
			get
			{
				return this._xcount;
			}
			set
			{
				if ((this._xcount != value))
				{
					this._xcount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcod", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string xcod
		{
			get
			{
				return this._xcod;
			}
			set
			{
				if ((this._xcod != value))
				{
					this._xcod = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
