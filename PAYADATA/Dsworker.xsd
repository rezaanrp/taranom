<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Dsworker" targetNamespace="http://tempuri.org/Dsworker.xsd" xmlns:mstns="http://tempuri.org/Dsworker.xsd" xmlns="http://tempuri.org/Dsworker.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="payazobnetConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="payazobnetConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.PAYADATA.Properties.Settings.GlobalReference.Default.payazobnetConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="workergroupTableAdapter" GeneratorDataComponentClassName="workergroupTableAdapter" Name="workergroup" UserDataComponentName="workergroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="payazobnetConnectionString (Settings)" DbObjectName="payazobnet.dbo.workergroup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[workergroup] WHERE (([xid] = @Original_xid) AND ((@IsNull_xname = 1 AND [xname] IS NULL) OR ([xname] = @Original_xname)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_xid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_xname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_xname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="xname" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[workergroup] ([xid], [xname]) VALUES (@xid, @xname);
SELECT xid, xname FROM workergroup WHERE (xid = @xid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@xid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@xname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="xname" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT xid, xname FROM dbo.workergroup</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[workergroup] SET [xid] = @xid, [xname] = @xname WHERE (([xid] = @Original_xid) AND ((@IsNull_xname = 1 AND [xname] IS NULL) OR ([xname] = @Original_xname)));
SELECT xid, xname FROM workergroup WHERE (xid = @xid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@xid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@xname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="xname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_xid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_xname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_xname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="xname" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="xid" DataSetColumn="xid" />
              <Mapping SourceColumn="xname" DataSetColumn="xname" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="mworkerTableAdapter" GeneratorDataComponentClassName="mworkerTableAdapter" Name="mworker" UserDataComponentName="mworkerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="payazobnetConnectionString (Settings)" DbObjectName="payazobnet.dbo.mworker" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[mworker] WHERE (([xid] = @Original_xid) AND ((@IsNull_xname = 1 AND [xname] IS NULL) OR ([xname] = @Original_xname)) AND ((@IsNull_xgroup = 1 AND [xgroup] IS NULL) OR ([xgroup] = @Original_xgroup)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_xid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_xname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_xname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="xname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_xgroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xgroup" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_xgroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xgroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[mworker] ([xname], [xwork], [xgroup]) VALUES (@xname, @xwork, @xgroup);
SELECT xid, xname, xwork, xgroup FROM mworker WHERE (xid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@xname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="xname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@xwork" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="xwork" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@xgroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xgroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT xid, xname, xwork, xgroup FROM dbo.mworker</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[mworker] SET [xname] = @xname, [xwork] = @xwork, [xgroup] = @xgroup WHERE (([xid] = @Original_xid) AND ((@IsNull_xname = 1 AND [xname] IS NULL) OR ([xname] = @Original_xname)) AND ((@IsNull_xgroup = 1 AND [xgroup] IS NULL) OR ([xgroup] = @Original_xgroup)));
SELECT xid, xname, xwork, xgroup FROM mworker WHERE (xid = @xid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@xname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="xname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@xwork" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="xwork" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@xgroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xgroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_xid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_xname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_xname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="xname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_xgroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xgroup" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_xgroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="xgroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="xid" ColumnName="xid" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@xid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="xid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="xid" DataSetColumn="xid" />
              <Mapping SourceColumn="xname" DataSetColumn="xname" />
              <Mapping SourceColumn="xwork" DataSetColumn="xwork" />
              <Mapping SourceColumn="xgroup" DataSetColumn="xgroup" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Dsworker" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="Dsworker" msprop:Generator_UserDSName="Dsworker">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="workergroup" msprop:Generator_TableClassName="workergroupDataTable" msprop:Generator_TableVarName="tableworkergroup" msprop:Generator_TablePropName="workergroup" msprop:Generator_RowDeletingName="workergroupRowDeleting" msprop:Generator_UserTableName="workergroup" msprop:Generator_RowChangingName="workergroupRowChanging" msprop:Generator_RowEvHandlerName="workergroupRowChangeEventHandler" msprop:Generator_RowDeletedName="workergroupRowDeleted" msprop:Generator_RowEvArgName="workergroupRowChangeEvent" msprop:Generator_RowChangedName="workergroupRowChanged" msprop:Generator_RowClassName="workergroupRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="xid" msprop:Generator_ColumnVarNameInTable="columnxid" msprop:Generator_ColumnPropNameInRow="xid" msprop:Generator_ColumnPropNameInTable="xidColumn" msprop:Generator_UserColumnName="xid" type="xs:int" />
              <xs:element name="xname" msprop:Generator_ColumnVarNameInTable="columnxname" msprop:Generator_ColumnPropNameInRow="xname" msprop:Generator_ColumnPropNameInTable="xnameColumn" msprop:Generator_UserColumnName="xname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="mworker" msprop:Generator_TableClassName="mworkerDataTable" msprop:Generator_TableVarName="tablemworker" msprop:Generator_TablePropName="mworker" msprop:Generator_RowDeletingName="mworkerRowDeleting" msprop:Generator_UserTableName="mworker" msprop:Generator_RowChangingName="mworkerRowChanging" msprop:Generator_RowEvHandlerName="mworkerRowChangeEventHandler" msprop:Generator_RowDeletedName="mworkerRowDeleted" msprop:Generator_RowEvArgName="mworkerRowChangeEvent" msprop:Generator_RowChangedName="mworkerRowChanged" msprop:Generator_RowClassName="mworkerRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="xid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnxid" msprop:Generator_ColumnPropNameInRow="xid" msprop:Generator_ColumnPropNameInTable="xidColumn" msprop:Generator_UserColumnName="xid" type="xs:int" />
              <xs:element name="xname" msprop:Generator_ColumnVarNameInTable="columnxname" msprop:Generator_ColumnPropNameInRow="xname" msprop:Generator_ColumnPropNameInTable="xnameColumn" msprop:Generator_UserColumnName="xname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="xwork" msprop:Generator_ColumnVarNameInTable="columnxwork" msprop:Generator_ColumnPropNameInRow="xwork" msprop:Generator_ColumnPropNameInTable="xworkColumn" msprop:Generator_UserColumnName="xwork" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="xgroup" msprop:Generator_ColumnVarNameInTable="columnxgroup" msprop:Generator_ColumnPropNameInRow="xgroup" msprop:Generator_ColumnPropNameInTable="xgroupColumn" msprop:Generator_UserColumnName="xgroup" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:workergroup" />
      <xs:field xpath="mstns:xid" />
    </xs:unique>
    <xs:unique name="mworker_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:mworker" />
      <xs:field xpath="mstns:xid" />
    </xs:unique>
  </xs:element>
</xs:schema>