#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PAYADATA.interuptplan
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="payazobnet")]
	public partial class lqinterupt_planDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertmserviceman_hour(mserviceman_hour instance);
    partial void Updatemserviceman_hour(mserviceman_hour instance);
    partial void Deletemserviceman_hour(mserviceman_hour instance);
    partial void Insertmservic_device(mservic_device instance);
    partial void Updatemservic_device(mservic_device instance);
    partial void Deletemservic_device(mservic_device instance);
    partial void Insertmservicefor_interupt_plan(mservicefor_interupt_plan instance);
    partial void Updatemservicefor_interupt_plan(mservicefor_interupt_plan instance);
    partial void Deletemservicefor_interupt_plan(mservicefor_interupt_plan instance);
    partial void Insertmselectdemuer(mselectdemuer instance);
    partial void Updatemselectdemuer(mselectdemuer instance);
    partial void Deletemselectdemuer(mselectdemuer instance);
    partial void Insertminterupt_plan(minterupt_plan instance);
    partial void Updateminterupt_plan(minterupt_plan instance);
    partial void Deleteminterupt_plan(minterupt_plan instance);
    partial void Insertmobject_disposal(mobject_disposal instance);
    partial void Updatemobject_disposal(mobject_disposal instance);
    partial void Deletemobject_disposal(mobject_disposal instance);
    #endregion
		
		public lqinterupt_planDataContext() : 
				base(global::PAYADATA.Properties.Settings.Default.payazobnetConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public lqinterupt_planDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public lqinterupt_planDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public lqinterupt_planDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public lqinterupt_planDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<mserviceman_hour> mserviceman_hours
		{
			get
			{
				return this.GetTable<mserviceman_hour>();
			}
		}
		
		public System.Data.Linq.Table<mservic_device> mservic_devices
		{
			get
			{
				return this.GetTable<mservic_device>();
			}
		}
		
		public System.Data.Linq.Table<mservicefor_interupt_plan> mservicefor_interupt_plans
		{
			get
			{
				return this.GetTable<mservicefor_interupt_plan>();
			}
		}
		
		public System.Data.Linq.Table<mselectdemuer> mselectdemuers
		{
			get
			{
				return this.GetTable<mselectdemuer>();
			}
		}
		
		public System.Data.Linq.Table<minterupt_plan> minterupt_plans
		{
			get
			{
				return this.GetTable<minterupt_plan>();
			}
		}
		
		public System.Data.Linq.Table<mobject_disposal> mobject_disposals
		{
			get
			{
				return this.GetTable<mobject_disposal>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Delete_from_interupt_plan")]
		public int Delete_from_interupt_plan([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Updateserviceforinterupt")]
		public ISingleResult<UpdateserviceforinteruptResult> Updateserviceforinterupt([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> do_, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string explain, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), do_, explain, xid);
			return ((ISingleResult<UpdateserviceforinteruptResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Deletealldemuerfointerupt")]
		public int Deletealldemuerfointerupt([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_idparent", DbType="Int")] System.Nullable<int> original_idparent, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_idparent, type);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Selectservice_for_interupt_plan")]
		public ISingleResult<Selectservice_for_interupt_planResult> Selectservice_for_interupt_plan([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idinterupt)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idinterupt);
			return ((ISingleResult<Selectservice_for_interupt_planResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Insertinto_interuptplan")]
		public ISingleResult<Insertinto_interuptplanResult> Insertinto_interuptplan([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string xdate_plan, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xidserviceprogram, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string xdatestart_interupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string xtime_startinterupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string xdate_endinterupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string xtime_endinterupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(6)")] string xdevice_cod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xname_operator_deliveryof, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xname_operator_transferee, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xexplain_havoc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xexplain_activity, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xtime_interupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> xdelay, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> xmountly)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xdate_plan, xidserviceprogram, xdatestart_interupt, xtime_startinterupt, xdate_endinterupt, xtime_endinterupt, xdevice_cod, xname_operator_deliveryof, xname_operator_transferee, xexplain_havoc, xexplain_activity, xtime_interupt, xdelay, xmountly);
			return ((ISingleResult<Insertinto_interuptplanResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Update_interuptplan")]
		public int Update_interuptplan([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string xdate_plan, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string xdatestart_interupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string xtime_startinterupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string xdate_endinterupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string xtime_endinterupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(6)")] string xdevice_cod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xname_operator_deliveryof, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xname_operator_transferee, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xexplain_havoc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xexplain_activity, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xtime_interupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> xdelay, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> xmountly)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xdate_plan, xdatestart_interupt, xtime_startinterupt, xdate_endinterupt, xtime_endinterupt, xdevice_cod, xname_operator_deliveryof, xname_operator_transferee, xexplain_havoc, xexplain_activity, xtime_interupt, xdelay, xid, xmountly);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Update_interupt_plan")]
		public int Update_interupt_plan([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string xdate_plan, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string xdatestart_interupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string xtime_startinterupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string xdate_endinterupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(5)")] string xtime_endinterupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(6)")] string xdevice_cod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xname_operator_deliveryof, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xname_operator_transferee, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xexplain_havoc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string xexplain_activity, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xtime_interupt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> xdelay, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> xmountly)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xdate_plan, xdatestart_interupt, xtime_startinterupt, xdate_endinterupt, xtime_endinterupt, xdevice_cod, xname_operator_deliveryof, xname_operator_transferee, xexplain_havoc, xexplain_activity, xtime_interupt, xdelay, xid, xmountly);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mserviceman_hour")]
	public partial class mserviceman_hour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private int _xid_interupt;
		
		private string _xname_repairer;
		
		private System.Nullable<float> _xhours;
		
		private string _xtype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void Onxid_interuptChanging(int value);
    partial void Onxid_interuptChanged();
    partial void Onxname_repairerChanging(string value);
    partial void Onxname_repairerChanged();
    partial void OnxhoursChanging(System.Nullable<float> value);
    partial void OnxhoursChanged();
    partial void OnxtypeChanging(string value);
    partial void OnxtypeChanged();
    #endregion
		
		public mserviceman_hour()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid_interupt", DbType="Int NOT NULL")]
		public int xid_interupt
		{
			get
			{
				return this._xid_interupt;
			}
			set
			{
				if ((this._xid_interupt != value))
				{
					this.Onxid_interuptChanging(value);
					this.SendPropertyChanging();
					this._xid_interupt = value;
					this.SendPropertyChanged("xid_interupt");
					this.Onxid_interuptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname_repairer", DbType="NVarChar(50)")]
		public string xname_repairer
		{
			get
			{
				return this._xname_repairer;
			}
			set
			{
				if ((this._xname_repairer != value))
				{
					this.Onxname_repairerChanging(value);
					this.SendPropertyChanging();
					this._xname_repairer = value;
					this.SendPropertyChanged("xname_repairer");
					this.Onxname_repairerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xhours", DbType="Real")]
		public System.Nullable<float> xhours
		{
			get
			{
				return this._xhours;
			}
			set
			{
				if ((this._xhours != value))
				{
					this.OnxhoursChanging(value);
					this.SendPropertyChanging();
					this._xhours = value;
					this.SendPropertyChanged("xhours");
					this.OnxhoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtype", DbType="NChar(10)")]
		public string xtype
		{
			get
			{
				return this._xtype;
			}
			set
			{
				if ((this._xtype != value))
				{
					this.OnxtypeChanging(value);
					this.SendPropertyChanging();
					this._xtype = value;
					this.SendPropertyChanged("xtype");
					this.OnxtypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mservic_device")]
	public partial class mservic_device : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _xitemno;
		
		private string _xdevicecod;
		
		private string _xname;
		
		private System.Nullable<bool> _xmount;
		
		private EntitySet<mservicefor_interupt_plan> _mservicefor_interupt_plans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxitemnoChanging(string value);
    partial void OnxitemnoChanged();
    partial void OnxdevicecodChanging(string value);
    partial void OnxdevicecodChanged();
    partial void OnxnameChanging(string value);
    partial void OnxnameChanged();
    partial void OnxmountChanging(System.Nullable<bool> value);
    partial void OnxmountChanged();
    #endregion
		
		public mservic_device()
		{
			this._mservicefor_interupt_plans = new EntitySet<mservicefor_interupt_plan>(new Action<mservicefor_interupt_plan>(this.attach_mservicefor_interupt_plans), new Action<mservicefor_interupt_plan>(this.detach_mservicefor_interupt_plans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xitemno", DbType="NChar(10)")]
		public string xitemno
		{
			get
			{
				return this._xitemno;
			}
			set
			{
				if ((this._xitemno != value))
				{
					this.OnxitemnoChanging(value);
					this.SendPropertyChanging();
					this._xitemno = value;
					this.SendPropertyChanged("xitemno");
					this.OnxitemnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdevicecod", DbType="NChar(9)")]
		public string xdevicecod
		{
			get
			{
				return this._xdevicecod;
			}
			set
			{
				if ((this._xdevicecod != value))
				{
					this.OnxdevicecodChanging(value);
					this.SendPropertyChanging();
					this._xdevicecod = value;
					this.SendPropertyChanged("xdevicecod");
					this.OnxdevicecodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname", DbType="NVarChar(MAX)")]
		public string xname
		{
			get
			{
				return this._xname;
			}
			set
			{
				if ((this._xname != value))
				{
					this.OnxnameChanging(value);
					this.SendPropertyChanging();
					this._xname = value;
					this.SendPropertyChanged("xname");
					this.OnxnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xmount", DbType="Bit")]
		public System.Nullable<bool> xmount
		{
			get
			{
				return this._xmount;
			}
			set
			{
				if ((this._xmount != value))
				{
					this.OnxmountChanging(value);
					this.SendPropertyChanging();
					this._xmount = value;
					this.SendPropertyChanged("xmount");
					this.OnxmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mservic_device_mservicefor_interupt_plan", Storage="_mservicefor_interupt_plans", ThisKey="xid", OtherKey="xidservice")]
		public EntitySet<mservicefor_interupt_plan> mservicefor_interupt_plans
		{
			get
			{
				return this._mservicefor_interupt_plans;
			}
			set
			{
				this._mservicefor_interupt_plans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mservicefor_interupt_plans(mservicefor_interupt_plan entity)
		{
			this.SendPropertyChanging();
			entity.mservic_device = this;
		}
		
		private void detach_mservicefor_interupt_plans(mservicefor_interupt_plan entity)
		{
			this.SendPropertyChanging();
			entity.mservic_device = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mservicefor_interupt_plan")]
	public partial class mservicefor_interupt_plan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private System.Nullable<int> _xidservice;
		
		private System.Nullable<int> _xidinterupt;
		
		private System.Nullable<bool> _do_;
		
		private string _explain;
		
		private EntityRef<mservic_device> _mservic_device;
		
		private EntityRef<minterupt_plan> _minterupt_plan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxidserviceChanging(System.Nullable<int> value);
    partial void OnxidserviceChanged();
    partial void OnxidinteruptChanging(System.Nullable<int> value);
    partial void OnxidinteruptChanged();
    partial void Ondo_Changing(System.Nullable<bool> value);
    partial void Ondo_Changed();
    partial void OnexplainChanging(string value);
    partial void OnexplainChanged();
    #endregion
		
		public mservicefor_interupt_plan()
		{
			this._mservic_device = default(EntityRef<mservic_device>);
			this._minterupt_plan = default(EntityRef<minterupt_plan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xidservice", DbType="Int")]
		public System.Nullable<int> xidservice
		{
			get
			{
				return this._xidservice;
			}
			set
			{
				if ((this._xidservice != value))
				{
					if (this._mservic_device.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnxidserviceChanging(value);
					this.SendPropertyChanging();
					this._xidservice = value;
					this.SendPropertyChanged("xidservice");
					this.OnxidserviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xidinterupt", DbType="Int")]
		public System.Nullable<int> xidinterupt
		{
			get
			{
				return this._xidinterupt;
			}
			set
			{
				if ((this._xidinterupt != value))
				{
					if (this._minterupt_plan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnxidinteruptChanging(value);
					this.SendPropertyChanging();
					this._xidinterupt = value;
					this.SendPropertyChanged("xidinterupt");
					this.OnxidinteruptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_do_", DbType="Bit")]
		public System.Nullable<bool> do_
		{
			get
			{
				return this._do_;
			}
			set
			{
				if ((this._do_ != value))
				{
					this.Ondo_Changing(value);
					this.SendPropertyChanging();
					this._do_ = value;
					this.SendPropertyChanged("do_");
					this.Ondo_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_explain", DbType="NVarChar(MAX)")]
		public string explain
		{
			get
			{
				return this._explain;
			}
			set
			{
				if ((this._explain != value))
				{
					this.OnexplainChanging(value);
					this.SendPropertyChanging();
					this._explain = value;
					this.SendPropertyChanged("explain");
					this.OnexplainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mservic_device_mservicefor_interupt_plan", Storage="_mservic_device", ThisKey="xidservice", OtherKey="xid", IsForeignKey=true, DeleteRule="CASCADE")]
		public mservic_device mservic_device
		{
			get
			{
				return this._mservic_device.Entity;
			}
			set
			{
				mservic_device previousValue = this._mservic_device.Entity;
				if (((previousValue != value) 
							|| (this._mservic_device.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mservic_device.Entity = null;
						previousValue.mservicefor_interupt_plans.Remove(this);
					}
					this._mservic_device.Entity = value;
					if ((value != null))
					{
						value.mservicefor_interupt_plans.Add(this);
						this._xidservice = value.xid;
					}
					else
					{
						this._xidservice = default(Nullable<int>);
					}
					this.SendPropertyChanged("mservic_device");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="minterupt_plan_mservicefor_interupt_plan", Storage="_minterupt_plan", ThisKey="xidinterupt", OtherKey="xid", IsForeignKey=true, DeleteRule="CASCADE")]
		public minterupt_plan minterupt_plan
		{
			get
			{
				return this._minterupt_plan.Entity;
			}
			set
			{
				minterupt_plan previousValue = this._minterupt_plan.Entity;
				if (((previousValue != value) 
							|| (this._minterupt_plan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._minterupt_plan.Entity = null;
						previousValue.mservicefor_interupt_plans.Remove(this);
					}
					this._minterupt_plan.Entity = value;
					if ((value != null))
					{
						value.mservicefor_interupt_plans.Add(this);
						this._xidinterupt = value.xid;
					}
					else
					{
						this._xidinterupt = default(Nullable<int>);
					}
					this.SendPropertyChanged("minterupt_plan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mselectdemuer")]
	public partial class mselectdemuer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private System.Nullable<int> _xiddemuer;
		
		private System.Nullable<int> _idparent;
		
		private string _typeparent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxiddemuerChanging(System.Nullable<int> value);
    partial void OnxiddemuerChanged();
    partial void OnidparentChanging(System.Nullable<int> value);
    partial void OnidparentChanged();
    partial void OntypeparentChanging(string value);
    partial void OntypeparentChanged();
    #endregion
		
		public mselectdemuer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xiddemuer", DbType="Int")]
		public System.Nullable<int> xiddemuer
		{
			get
			{
				return this._xiddemuer;
			}
			set
			{
				if ((this._xiddemuer != value))
				{
					this.OnxiddemuerChanging(value);
					this.SendPropertyChanging();
					this._xiddemuer = value;
					this.SendPropertyChanged("xiddemuer");
					this.OnxiddemuerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idparent", DbType="Int")]
		public System.Nullable<int> idparent
		{
			get
			{
				return this._idparent;
			}
			set
			{
				if ((this._idparent != value))
				{
					this.OnidparentChanging(value);
					this.SendPropertyChanging();
					this._idparent = value;
					this.SendPropertyChanged("idparent");
					this.OnidparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeparent", DbType="NVarChar(50)")]
		public string typeparent
		{
			get
			{
				return this._typeparent;
			}
			set
			{
				if ((this._typeparent != value))
				{
					this.OntypeparentChanging(value);
					this.SendPropertyChanging();
					this._typeparent = value;
					this.SendPropertyChanged("typeparent");
					this.OntypeparentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.minterupt_plan")]
	public partial class minterupt_plan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private System.Nullable<int> _xidserviceprogram;
		
		private string _xdate_plan;
		
		private string _xdatestart_interupt;
		
		private string _xtime_startinterupt;
		
		private string _xdate_endinterupt;
		
		private string _xtime_endinterupt;
		
		private string _xdevice_cod;
		
		private string _xname_operator_deliveryof;
		
		private string _xname_operator_transferee;
		
		private string _xexplain_havoc;
		
		private string _xexplain_activity;
		
		private System.Nullable<int> _xtime_interupt;
		
		private System.Nullable<bool> _xdelay;
		
		private System.Nullable<bool> _xmountly;
		
		private EntitySet<mservicefor_interupt_plan> _mservicefor_interupt_plans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxidserviceprogramChanging(System.Nullable<int> value);
    partial void OnxidserviceprogramChanged();
    partial void Onxdate_planChanging(string value);
    partial void Onxdate_planChanged();
    partial void Onxdatestart_interuptChanging(string value);
    partial void Onxdatestart_interuptChanged();
    partial void Onxtime_startinteruptChanging(string value);
    partial void Onxtime_startinteruptChanged();
    partial void Onxdate_endinteruptChanging(string value);
    partial void Onxdate_endinteruptChanged();
    partial void Onxtime_endinteruptChanging(string value);
    partial void Onxtime_endinteruptChanged();
    partial void Onxdevice_codChanging(string value);
    partial void Onxdevice_codChanged();
    partial void Onxname_operator_deliveryofChanging(string value);
    partial void Onxname_operator_deliveryofChanged();
    partial void Onxname_operator_transfereeChanging(string value);
    partial void Onxname_operator_transfereeChanged();
    partial void Onxexplain_havocChanging(string value);
    partial void Onxexplain_havocChanged();
    partial void Onxexplain_activityChanging(string value);
    partial void Onxexplain_activityChanged();
    partial void Onxtime_interuptChanging(System.Nullable<int> value);
    partial void Onxtime_interuptChanged();
    partial void OnxdelayChanging(System.Nullable<bool> value);
    partial void OnxdelayChanged();
    partial void OnxmountlyChanging(System.Nullable<bool> value);
    partial void OnxmountlyChanged();
    #endregion
		
		public minterupt_plan()
		{
			this._mservicefor_interupt_plans = new EntitySet<mservicefor_interupt_plan>(new Action<mservicefor_interupt_plan>(this.attach_mservicefor_interupt_plans), new Action<mservicefor_interupt_plan>(this.detach_mservicefor_interupt_plans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xidserviceprogram", DbType="Int")]
		public System.Nullable<int> xidserviceprogram
		{
			get
			{
				return this._xidserviceprogram;
			}
			set
			{
				if ((this._xidserviceprogram != value))
				{
					this.OnxidserviceprogramChanging(value);
					this.SendPropertyChanging();
					this._xidserviceprogram = value;
					this.SendPropertyChanged("xidserviceprogram");
					this.OnxidserviceprogramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdate_plan", DbType="NChar(10)")]
		public string xdate_plan
		{
			get
			{
				return this._xdate_plan;
			}
			set
			{
				if ((this._xdate_plan != value))
				{
					this.Onxdate_planChanging(value);
					this.SendPropertyChanging();
					this._xdate_plan = value;
					this.SendPropertyChanged("xdate_plan");
					this.Onxdate_planChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdatestart_interupt", DbType="NChar(10)")]
		public string xdatestart_interupt
		{
			get
			{
				return this._xdatestart_interupt;
			}
			set
			{
				if ((this._xdatestart_interupt != value))
				{
					this.Onxdatestart_interuptChanging(value);
					this.SendPropertyChanging();
					this._xdatestart_interupt = value;
					this.SendPropertyChanged("xdatestart_interupt");
					this.Onxdatestart_interuptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtime_startinterupt", DbType="NChar(5)")]
		public string xtime_startinterupt
		{
			get
			{
				return this._xtime_startinterupt;
			}
			set
			{
				if ((this._xtime_startinterupt != value))
				{
					this.Onxtime_startinteruptChanging(value);
					this.SendPropertyChanging();
					this._xtime_startinterupt = value;
					this.SendPropertyChanged("xtime_startinterupt");
					this.Onxtime_startinteruptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdate_endinterupt", DbType="NChar(10)")]
		public string xdate_endinterupt
		{
			get
			{
				return this._xdate_endinterupt;
			}
			set
			{
				if ((this._xdate_endinterupt != value))
				{
					this.Onxdate_endinteruptChanging(value);
					this.SendPropertyChanging();
					this._xdate_endinterupt = value;
					this.SendPropertyChanged("xdate_endinterupt");
					this.Onxdate_endinteruptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtime_endinterupt", DbType="NChar(5)")]
		public string xtime_endinterupt
		{
			get
			{
				return this._xtime_endinterupt;
			}
			set
			{
				if ((this._xtime_endinterupt != value))
				{
					this.Onxtime_endinteruptChanging(value);
					this.SendPropertyChanging();
					this._xtime_endinterupt = value;
					this.SendPropertyChanged("xtime_endinterupt");
					this.Onxtime_endinteruptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdevice_cod", DbType="NChar(6)")]
		public string xdevice_cod
		{
			get
			{
				return this._xdevice_cod;
			}
			set
			{
				if ((this._xdevice_cod != value))
				{
					this.Onxdevice_codChanging(value);
					this.SendPropertyChanging();
					this._xdevice_cod = value;
					this.SendPropertyChanged("xdevice_cod");
					this.Onxdevice_codChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname_operator_deliveryof", DbType="NVarChar(MAX)")]
		public string xname_operator_deliveryof
		{
			get
			{
				return this._xname_operator_deliveryof;
			}
			set
			{
				if ((this._xname_operator_deliveryof != value))
				{
					this.Onxname_operator_deliveryofChanging(value);
					this.SendPropertyChanging();
					this._xname_operator_deliveryof = value;
					this.SendPropertyChanged("xname_operator_deliveryof");
					this.Onxname_operator_deliveryofChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname_operator_transferee", DbType="NVarChar(MAX)")]
		public string xname_operator_transferee
		{
			get
			{
				return this._xname_operator_transferee;
			}
			set
			{
				if ((this._xname_operator_transferee != value))
				{
					this.Onxname_operator_transfereeChanging(value);
					this.SendPropertyChanging();
					this._xname_operator_transferee = value;
					this.SendPropertyChanged("xname_operator_transferee");
					this.Onxname_operator_transfereeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xexplain_havoc", DbType="NVarChar(MAX)")]
		public string xexplain_havoc
		{
			get
			{
				return this._xexplain_havoc;
			}
			set
			{
				if ((this._xexplain_havoc != value))
				{
					this.Onxexplain_havocChanging(value);
					this.SendPropertyChanging();
					this._xexplain_havoc = value;
					this.SendPropertyChanged("xexplain_havoc");
					this.Onxexplain_havocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xexplain_activity", DbType="NVarChar(MAX)")]
		public string xexplain_activity
		{
			get
			{
				return this._xexplain_activity;
			}
			set
			{
				if ((this._xexplain_activity != value))
				{
					this.Onxexplain_activityChanging(value);
					this.SendPropertyChanging();
					this._xexplain_activity = value;
					this.SendPropertyChanged("xexplain_activity");
					this.Onxexplain_activityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtime_interupt", DbType="Int")]
		public System.Nullable<int> xtime_interupt
		{
			get
			{
				return this._xtime_interupt;
			}
			set
			{
				if ((this._xtime_interupt != value))
				{
					this.Onxtime_interuptChanging(value);
					this.SendPropertyChanging();
					this._xtime_interupt = value;
					this.SendPropertyChanged("xtime_interupt");
					this.Onxtime_interuptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xdelay", DbType="Bit")]
		public System.Nullable<bool> xdelay
		{
			get
			{
				return this._xdelay;
			}
			set
			{
				if ((this._xdelay != value))
				{
					this.OnxdelayChanging(value);
					this.SendPropertyChanging();
					this._xdelay = value;
					this.SendPropertyChanged("xdelay");
					this.OnxdelayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xmountly", DbType="Bit")]
		public System.Nullable<bool> xmountly
		{
			get
			{
				return this._xmountly;
			}
			set
			{
				if ((this._xmountly != value))
				{
					this.OnxmountlyChanging(value);
					this.SendPropertyChanging();
					this._xmountly = value;
					this.SendPropertyChanged("xmountly");
					this.OnxmountlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="minterupt_plan_mservicefor_interupt_plan", Storage="_mservicefor_interupt_plans", ThisKey="xid", OtherKey="xidinterupt")]
		public EntitySet<mservicefor_interupt_plan> mservicefor_interupt_plans
		{
			get
			{
				return this._mservicefor_interupt_plans;
			}
			set
			{
				this._mservicefor_interupt_plans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mservicefor_interupt_plans(mservicefor_interupt_plan entity)
		{
			this.SendPropertyChanging();
			entity.minterupt_plan = this;
		}
		
		private void detach_mservicefor_interupt_plans(mservicefor_interupt_plan entity)
		{
			this.SendPropertyChanging();
			entity.minterupt_plan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mobject_disposal")]
	public partial class mobject_disposal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private int _xid_interupt;
		
		private string _x_cod_objects_disposal;
		
		private System.Nullable<int> _xcount;
		
		private string _xtype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void Onxid_interuptChanging(int value);
    partial void Onxid_interuptChanged();
    partial void Onx_cod_objects_disposalChanging(string value);
    partial void Onx_cod_objects_disposalChanged();
    partial void OnxcountChanging(System.Nullable<int> value);
    partial void OnxcountChanged();
    partial void OnxtypeChanging(string value);
    partial void OnxtypeChanged();
    #endregion
		
		public mobject_disposal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid_interupt", DbType="Int NOT NULL")]
		public int xid_interupt
		{
			get
			{
				return this._xid_interupt;
			}
			set
			{
				if ((this._xid_interupt != value))
				{
					this.Onxid_interuptChanging(value);
					this.SendPropertyChanging();
					this._xid_interupt = value;
					this.SendPropertyChanged("xid_interupt");
					this.Onxid_interuptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x_cod_objects_disposal", DbType="NVarChar(50)")]
		public string x_cod_objects_disposal
		{
			get
			{
				return this._x_cod_objects_disposal;
			}
			set
			{
				if ((this._x_cod_objects_disposal != value))
				{
					this.Onx_cod_objects_disposalChanging(value);
					this.SendPropertyChanging();
					this._x_cod_objects_disposal = value;
					this.SendPropertyChanged("x_cod_objects_disposal");
					this.Onx_cod_objects_disposalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xcount", DbType="Int")]
		public System.Nullable<int> xcount
		{
			get
			{
				return this._xcount;
			}
			set
			{
				if ((this._xcount != value))
				{
					this.OnxcountChanging(value);
					this.SendPropertyChanging();
					this._xcount = value;
					this.SendPropertyChanged("xcount");
					this.OnxcountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xtype", DbType="NChar(10)")]
		public string xtype
		{
			get
			{
				return this._xtype;
			}
			set
			{
				if ((this._xtype != value))
				{
					this.OnxtypeChanging(value);
					this.SendPropertyChanging();
					this._xtype = value;
					this.SendPropertyChanged("xtype");
					this.OnxtypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class UpdateserviceforinteruptResult
	{
		
		private int _xid;
		
		private System.Nullable<int> _xidservice;
		
		private System.Nullable<int> _xidinterupt;
		
		private System.Nullable<bool> _do_;
		
		private string _explain;
		
		public UpdateserviceforinteruptResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", DbType="Int NOT NULL")]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this._xid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xidservice", DbType="Int")]
		public System.Nullable<int> xidservice
		{
			get
			{
				return this._xidservice;
			}
			set
			{
				if ((this._xidservice != value))
				{
					this._xidservice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xidinterupt", DbType="Int")]
		public System.Nullable<int> xidinterupt
		{
			get
			{
				return this._xidinterupt;
			}
			set
			{
				if ((this._xidinterupt != value))
				{
					this._xidinterupt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_do_", DbType="Bit")]
		public System.Nullable<bool> do_
		{
			get
			{
				return this._do_;
			}
			set
			{
				if ((this._do_ != value))
				{
					this._do_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_explain", DbType="NVarChar(MAX)")]
		public string explain
		{
			get
			{
				return this._explain;
			}
			set
			{
				if ((this._explain != value))
				{
					this._explain = value;
				}
			}
		}
	}
	
	public partial class Selectservice_for_interupt_planResult
	{
		
		private int _xid;
		
		private System.Nullable<int> _xidinterupt;
		
		private string _xitemno;
		
		private string _xname;
		
		private System.Nullable<bool> _do_;
		
		private string _explain;
		
		public Selectservice_for_interupt_planResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", DbType="Int NOT NULL")]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this._xid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xidinterupt", DbType="Int")]
		public System.Nullable<int> xidinterupt
		{
			get
			{
				return this._xidinterupt;
			}
			set
			{
				if ((this._xidinterupt != value))
				{
					this._xidinterupt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xitemno", DbType="NChar(10)")]
		public string xitemno
		{
			get
			{
				return this._xitemno;
			}
			set
			{
				if ((this._xitemno != value))
				{
					this._xitemno = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname", DbType="NVarChar(MAX)")]
		public string xname
		{
			get
			{
				return this._xname;
			}
			set
			{
				if ((this._xname != value))
				{
					this._xname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_do_", DbType="Bit")]
		public System.Nullable<bool> do_
		{
			get
			{
				return this._do_;
			}
			set
			{
				if ((this._do_ != value))
				{
					this._do_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_explain", DbType="NVarChar(MAX)")]
		public string explain
		{
			get
			{
				return this._explain;
			}
			set
			{
				if ((this._explain != value))
				{
					this._explain = value;
				}
			}
		}
	}
	
	public partial class Insertinto_interuptplanResult
	{
		
		private int _xid;
		
		public Insertinto_interuptplanResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", DbType="Int NOT NULL")]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this._xid = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
