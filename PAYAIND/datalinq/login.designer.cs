#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.233
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PAYAIND.datalinq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="payazobnet")]
	public partial class loginDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertmallowaccestouser(mallowaccestouser instance);
    partial void Updatemallowaccestouser(mallowaccestouser instance);
    partial void Deletemallowaccestouser(mallowaccestouser instance);
    partial void Insertallowobject(allowobject instance);
    partial void Updateallowobject(allowobject instance);
    partial void Deleteallowobject(allowobject instance);
    partial void Inserttablelogin(tablelogin instance);
    partial void Updatetablelogin(tablelogin instance);
    partial void Deletetablelogin(tablelogin instance);
    partial void Insertmservice(mservice instance);
    partial void Updatemservice(mservice instance);
    partial void Deletemservice(mservice instance);
    #endregion
		
		public loginDataContext() : 
				base(global::PAYAIND.Properties.Settings.Default.payazobnetConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public loginDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public loginDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public loginDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public loginDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<mallowaccestouser> mallowaccestousers
		{
			get
			{
				return this.GetTable<mallowaccestouser>();
			}
		}
		
		public System.Data.Linq.Table<allowobject> allowobjects
		{
			get
			{
				return this.GetTable<allowobject>();
			}
		}
		
		public System.Data.Linq.Table<tablelogin> tablelogins
		{
			get
			{
				return this.GetTable<tablelogin>();
			}
		}
		
		public System.Data.Linq.Table<mservice> mservices
		{
			get
			{
				return this.GetTable<mservice>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Updateuserpasslogin")]
		public ISingleResult<UpdateuserpassloginResult> Updateuserpasslogin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string userpass, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> xid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, userpass, xid);
			return ((ISingleResult<UpdateuserpassloginResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mallowaccestouser")]
	public partial class mallowaccestouser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private System.Nullable<int> _xobjectid;
		
		private System.Nullable<int> _xgroupid;
		
		private System.Nullable<int> _xuserid;
		
		private System.Nullable<bool> _xallowaccesread;
		
		private System.Nullable<bool> _xallowaccesupdate;
		
		private EntityRef<allowobject> _allowobject;
		
		private EntityRef<tablelogin> _tablelogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxobjectidChanging(System.Nullable<int> value);
    partial void OnxobjectidChanged();
    partial void OnxgroupidChanging(System.Nullable<int> value);
    partial void OnxgroupidChanged();
    partial void OnxuseridChanging(System.Nullable<int> value);
    partial void OnxuseridChanged();
    partial void OnxallowaccesreadChanging(System.Nullable<bool> value);
    partial void OnxallowaccesreadChanged();
    partial void OnxallowaccesupdateChanging(System.Nullable<bool> value);
    partial void OnxallowaccesupdateChanged();
    #endregion
		
		public mallowaccestouser()
		{
			this._allowobject = default(EntityRef<allowobject>);
			this._tablelogin = default(EntityRef<tablelogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xobjectid", DbType="Int")]
		public System.Nullable<int> xobjectid
		{
			get
			{
				return this._xobjectid;
			}
			set
			{
				if ((this._xobjectid != value))
				{
					if (this._allowobject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnxobjectidChanging(value);
					this.SendPropertyChanging();
					this._xobjectid = value;
					this.SendPropertyChanged("xobjectid");
					this.OnxobjectidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xgroupid", DbType="Int")]
		public System.Nullable<int> xgroupid
		{
			get
			{
				return this._xgroupid;
			}
			set
			{
				if ((this._xgroupid != value))
				{
					this.OnxgroupidChanging(value);
					this.SendPropertyChanging();
					this._xgroupid = value;
					this.SendPropertyChanged("xgroupid");
					this.OnxgroupidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xuserid", DbType="Int")]
		public System.Nullable<int> xuserid
		{
			get
			{
				return this._xuserid;
			}
			set
			{
				if ((this._xuserid != value))
				{
					if (this._tablelogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnxuseridChanging(value);
					this.SendPropertyChanging();
					this._xuserid = value;
					this.SendPropertyChanged("xuserid");
					this.OnxuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xallowaccesread", DbType="Bit")]
		public System.Nullable<bool> xallowaccesread
		{
			get
			{
				return this._xallowaccesread;
			}
			set
			{
				if ((this._xallowaccesread != value))
				{
					this.OnxallowaccesreadChanging(value);
					this.SendPropertyChanging();
					this._xallowaccesread = value;
					this.SendPropertyChanged("xallowaccesread");
					this.OnxallowaccesreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xallowaccesupdate", DbType="Bit")]
		public System.Nullable<bool> xallowaccesupdate
		{
			get
			{
				return this._xallowaccesupdate;
			}
			set
			{
				if ((this._xallowaccesupdate != value))
				{
					this.OnxallowaccesupdateChanging(value);
					this.SendPropertyChanging();
					this._xallowaccesupdate = value;
					this.SendPropertyChanged("xallowaccesupdate");
					this.OnxallowaccesupdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="allowobject_mallowaccestouser", Storage="_allowobject", ThisKey="xobjectid", OtherKey="xid", IsForeignKey=true, DeleteRule="CASCADE")]
		public allowobject allowobject
		{
			get
			{
				return this._allowobject.Entity;
			}
			set
			{
				allowobject previousValue = this._allowobject.Entity;
				if (((previousValue != value) 
							|| (this._allowobject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._allowobject.Entity = null;
						previousValue.mallowaccestousers.Remove(this);
					}
					this._allowobject.Entity = value;
					if ((value != null))
					{
						value.mallowaccestousers.Add(this);
						this._xobjectid = value.xid;
					}
					else
					{
						this._xobjectid = default(Nullable<int>);
					}
					this.SendPropertyChanged("allowobject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tablelogin_mallowaccestouser", Storage="_tablelogin", ThisKey="xuserid", OtherKey="xid", IsForeignKey=true, DeleteRule="CASCADE")]
		public tablelogin tablelogin
		{
			get
			{
				return this._tablelogin.Entity;
			}
			set
			{
				tablelogin previousValue = this._tablelogin.Entity;
				if (((previousValue != value) 
							|| (this._tablelogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tablelogin.Entity = null;
						previousValue.mallowaccestousers.Remove(this);
					}
					this._tablelogin.Entity = value;
					if ((value != null))
					{
						value.mallowaccestousers.Add(this);
						this._xuserid = value.xid;
					}
					else
					{
						this._xuserid = default(Nullable<int>);
					}
					this.SendPropertyChanged("tablelogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.allowobject")]
	public partial class allowobject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _xname;
		
		private string _xpersianname;
		
		private EntitySet<mallowaccestouser> _mallowaccestousers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnxnameChanging(string value);
    partial void OnxnameChanged();
    partial void OnxpersiannameChanging(string value);
    partial void OnxpersiannameChanged();
    #endregion
		
		public allowobject()
		{
			this._mallowaccestousers = new EntitySet<mallowaccestouser>(new Action<mallowaccestouser>(this.attach_mallowaccestousers), new Action<mallowaccestouser>(this.detach_mallowaccestousers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xname", DbType="NVarChar(50)")]
		public string xname
		{
			get
			{
				return this._xname;
			}
			set
			{
				if ((this._xname != value))
				{
					this.OnxnameChanging(value);
					this.SendPropertyChanging();
					this._xname = value;
					this.SendPropertyChanged("xname");
					this.OnxnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xpersianname", DbType="NVarChar(50)")]
		public string xpersianname
		{
			get
			{
				return this._xpersianname;
			}
			set
			{
				if ((this._xpersianname != value))
				{
					this.OnxpersiannameChanging(value);
					this.SendPropertyChanging();
					this._xpersianname = value;
					this.SendPropertyChanged("xpersianname");
					this.OnxpersiannameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="allowobject_mallowaccestouser", Storage="_mallowaccestousers", ThisKey="xid", OtherKey="xobjectid")]
		public EntitySet<mallowaccestouser> mallowaccestousers
		{
			get
			{
				return this._mallowaccestousers;
			}
			set
			{
				this._mallowaccestousers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mallowaccestousers(mallowaccestouser entity)
		{
			this.SendPropertyChanging();
			entity.allowobject = this;
		}
		
		private void detach_mallowaccestousers(mallowaccestouser entity)
		{
			this.SendPropertyChanging();
			entity.allowobject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tablelogin")]
	public partial class tablelogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _name;
		
		private System.Nullable<int> _xgroupid;
		
		private string _username;
		
		private string _userpass;
		
		private EntitySet<mallowaccestouser> _mallowaccestousers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnxgroupidChanging(System.Nullable<int> value);
    partial void OnxgroupidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnuserpassChanging(string value);
    partial void OnuserpassChanged();
    #endregion
		
		public tablelogin()
		{
			this._mallowaccestousers = new EntitySet<mallowaccestouser>(new Action<mallowaccestouser>(this.attach_mallowaccestousers), new Action<mallowaccestouser>(this.detach_mallowaccestousers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xgroupid", DbType="Int")]
		public System.Nullable<int> xgroupid
		{
			get
			{
				return this._xgroupid;
			}
			set
			{
				if ((this._xgroupid != value))
				{
					this.OnxgroupidChanging(value);
					this.SendPropertyChanging();
					this._xgroupid = value;
					this.SendPropertyChanged("xgroupid");
					this.OnxgroupidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userpass", DbType="NVarChar(50)")]
		public string userpass
		{
			get
			{
				return this._userpass;
			}
			set
			{
				if ((this._userpass != value))
				{
					this.OnuserpassChanging(value);
					this.SendPropertyChanging();
					this._userpass = value;
					this.SendPropertyChanged("userpass");
					this.OnuserpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tablelogin_mallowaccestouser", Storage="_mallowaccestousers", ThisKey="xid", OtherKey="xuserid")]
		public EntitySet<mallowaccestouser> mallowaccestousers
		{
			get
			{
				return this._mallowaccestousers;
			}
			set
			{
				this._mallowaccestousers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mallowaccestousers(mallowaccestouser entity)
		{
			this.SendPropertyChanging();
			entity.tablelogin = this;
		}
		
		private void detach_mallowaccestousers(mallowaccestouser entity)
		{
			this.SendPropertyChanging();
			entity.tablelogin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mservice")]
	public partial class mservice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xid;
		
		private string _date;
		
		private string _time;
		
		private System.Nullable<bool> _xwo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxidChanging(int value);
    partial void OnxidChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    partial void OnxwoChanging(System.Nullable<bool> value);
    partial void OnxwoChanged();
    #endregion
		
		public mservice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this.OnxidChanging(value);
					this.SendPropertyChanging();
					this._xid = value;
					this.SendPropertyChanged("xid");
					this.OnxidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="NChar(10)")]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="NChar(10)")]
		public string time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xwo", DbType="Bit")]
		public System.Nullable<bool> xwo
		{
			get
			{
				return this._xwo;
			}
			set
			{
				if ((this._xwo != value))
				{
					this.OnxwoChanging(value);
					this.SendPropertyChanging();
					this._xwo = value;
					this.SendPropertyChanged("xwo");
					this.OnxwoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class UpdateuserpassloginResult
	{
		
		private int _xid;
		
		private string _name;
		
		private string _group;
		
		private string _username;
		
		private string _userpass;
		
		public UpdateuserpassloginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xid", DbType="Int NOT NULL")]
		public int xid
		{
			get
			{
				return this._xid;
			}
			set
			{
				if ((this._xid != value))
				{
					this._xid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[group]", Storage="_group", DbType="NVarChar(50)")]
		public string group
		{
			get
			{
				return this._group;
			}
			set
			{
				if ((this._group != value))
				{
					this._group = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userpass", DbType="NVarChar(50)")]
		public string userpass
		{
			get
			{
				return this._userpass;
			}
			set
			{
				if ((this._userpass != value))
				{
					this._userpass = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
