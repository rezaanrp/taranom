//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DAL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet_Sand")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet_Sand : global::System.Data.DataSet {
        
        private mControlChartDataTable tablemControlChart;
        
        private mSandControlChartDataTable tablemSandControlChart;
        
        private SelectSandReportByDateDataTable tableSelectSandReportByDate;
        
        private mSandSieveValueDataTable tablemSandSieveValue;
        
        private mSandWeeklyTestDataTable tablemSandWeeklyTest;
        
        private SelectSandDailyReportDataTable tableSelectSandDailyReport;
        
        private SelectSandMaterialUsageSumAVGByDateDataTable tableSelectSandMaterialUsageSumAVGByDate;
        
        private SelectSandMaterialAndDailyDataTable tableSelectSandMaterialAndDaily;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet_Sand() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet_Sand(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["mControlChart"] != null)) {
                    base.Tables.Add(new mControlChartDataTable(ds.Tables["mControlChart"]));
                }
                if ((ds.Tables["mSandControlChart"] != null)) {
                    base.Tables.Add(new mSandControlChartDataTable(ds.Tables["mSandControlChart"]));
                }
                if ((ds.Tables["SelectSandReportByDate"] != null)) {
                    base.Tables.Add(new SelectSandReportByDateDataTable(ds.Tables["SelectSandReportByDate"]));
                }
                if ((ds.Tables["mSandSieveValue"] != null)) {
                    base.Tables.Add(new mSandSieveValueDataTable(ds.Tables["mSandSieveValue"]));
                }
                if ((ds.Tables["mSandWeeklyTest"] != null)) {
                    base.Tables.Add(new mSandWeeklyTestDataTable(ds.Tables["mSandWeeklyTest"]));
                }
                if ((ds.Tables["SelectSandDailyReport"] != null)) {
                    base.Tables.Add(new SelectSandDailyReportDataTable(ds.Tables["SelectSandDailyReport"]));
                }
                if ((ds.Tables["SelectSandMaterialUsageSumAVGByDate"] != null)) {
                    base.Tables.Add(new SelectSandMaterialUsageSumAVGByDateDataTable(ds.Tables["SelectSandMaterialUsageSumAVGByDate"]));
                }
                if ((ds.Tables["SelectSandMaterialAndDaily"] != null)) {
                    base.Tables.Add(new SelectSandMaterialAndDailyDataTable(ds.Tables["SelectSandMaterialAndDaily"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public mControlChartDataTable mControlChart {
            get {
                return this.tablemControlChart;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public mSandControlChartDataTable mSandControlChart {
            get {
                return this.tablemSandControlChart;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectSandReportByDateDataTable SelectSandReportByDate {
            get {
                return this.tableSelectSandReportByDate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public mSandSieveValueDataTable mSandSieveValue {
            get {
                return this.tablemSandSieveValue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public mSandWeeklyTestDataTable mSandWeeklyTest {
            get {
                return this.tablemSandWeeklyTest;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectSandDailyReportDataTable SelectSandDailyReport {
            get {
                return this.tableSelectSandDailyReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectSandMaterialUsageSumAVGByDateDataTable SelectSandMaterialUsageSumAVGByDate {
            get {
                return this.tableSelectSandMaterialUsageSumAVGByDate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectSandMaterialAndDailyDataTable SelectSandMaterialAndDaily {
            get {
                return this.tableSelectSandMaterialAndDaily;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet_Sand cln = ((DataSet_Sand)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["mControlChart"] != null)) {
                    base.Tables.Add(new mControlChartDataTable(ds.Tables["mControlChart"]));
                }
                if ((ds.Tables["mSandControlChart"] != null)) {
                    base.Tables.Add(new mSandControlChartDataTable(ds.Tables["mSandControlChart"]));
                }
                if ((ds.Tables["SelectSandReportByDate"] != null)) {
                    base.Tables.Add(new SelectSandReportByDateDataTable(ds.Tables["SelectSandReportByDate"]));
                }
                if ((ds.Tables["mSandSieveValue"] != null)) {
                    base.Tables.Add(new mSandSieveValueDataTable(ds.Tables["mSandSieveValue"]));
                }
                if ((ds.Tables["mSandWeeklyTest"] != null)) {
                    base.Tables.Add(new mSandWeeklyTestDataTable(ds.Tables["mSandWeeklyTest"]));
                }
                if ((ds.Tables["SelectSandDailyReport"] != null)) {
                    base.Tables.Add(new SelectSandDailyReportDataTable(ds.Tables["SelectSandDailyReport"]));
                }
                if ((ds.Tables["SelectSandMaterialUsageSumAVGByDate"] != null)) {
                    base.Tables.Add(new SelectSandMaterialUsageSumAVGByDateDataTable(ds.Tables["SelectSandMaterialUsageSumAVGByDate"]));
                }
                if ((ds.Tables["SelectSandMaterialAndDaily"] != null)) {
                    base.Tables.Add(new SelectSandMaterialAndDailyDataTable(ds.Tables["SelectSandMaterialAndDaily"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablemControlChart = ((mControlChartDataTable)(base.Tables["mControlChart"]));
            if ((initTable == true)) {
                if ((this.tablemControlChart != null)) {
                    this.tablemControlChart.InitVars();
                }
            }
            this.tablemSandControlChart = ((mSandControlChartDataTable)(base.Tables["mSandControlChart"]));
            if ((initTable == true)) {
                if ((this.tablemSandControlChart != null)) {
                    this.tablemSandControlChart.InitVars();
                }
            }
            this.tableSelectSandReportByDate = ((SelectSandReportByDateDataTable)(base.Tables["SelectSandReportByDate"]));
            if ((initTable == true)) {
                if ((this.tableSelectSandReportByDate != null)) {
                    this.tableSelectSandReportByDate.InitVars();
                }
            }
            this.tablemSandSieveValue = ((mSandSieveValueDataTable)(base.Tables["mSandSieveValue"]));
            if ((initTable == true)) {
                if ((this.tablemSandSieveValue != null)) {
                    this.tablemSandSieveValue.InitVars();
                }
            }
            this.tablemSandWeeklyTest = ((mSandWeeklyTestDataTable)(base.Tables["mSandWeeklyTest"]));
            if ((initTable == true)) {
                if ((this.tablemSandWeeklyTest != null)) {
                    this.tablemSandWeeklyTest.InitVars();
                }
            }
            this.tableSelectSandDailyReport = ((SelectSandDailyReportDataTable)(base.Tables["SelectSandDailyReport"]));
            if ((initTable == true)) {
                if ((this.tableSelectSandDailyReport != null)) {
                    this.tableSelectSandDailyReport.InitVars();
                }
            }
            this.tableSelectSandMaterialUsageSumAVGByDate = ((SelectSandMaterialUsageSumAVGByDateDataTable)(base.Tables["SelectSandMaterialUsageSumAVGByDate"]));
            if ((initTable == true)) {
                if ((this.tableSelectSandMaterialUsageSumAVGByDate != null)) {
                    this.tableSelectSandMaterialUsageSumAVGByDate.InitVars();
                }
            }
            this.tableSelectSandMaterialAndDaily = ((SelectSandMaterialAndDailyDataTable)(base.Tables["SelectSandMaterialAndDaily"]));
            if ((initTable == true)) {
                if ((this.tableSelectSandMaterialAndDaily != null)) {
                    this.tableSelectSandMaterialAndDaily.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet_Sand";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet_Sand.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablemControlChart = new mControlChartDataTable();
            base.Tables.Add(this.tablemControlChart);
            this.tablemSandControlChart = new mSandControlChartDataTable();
            base.Tables.Add(this.tablemSandControlChart);
            this.tableSelectSandReportByDate = new SelectSandReportByDateDataTable();
            base.Tables.Add(this.tableSelectSandReportByDate);
            this.tablemSandSieveValue = new mSandSieveValueDataTable();
            base.Tables.Add(this.tablemSandSieveValue);
            this.tablemSandWeeklyTest = new mSandWeeklyTestDataTable();
            base.Tables.Add(this.tablemSandWeeklyTest);
            this.tableSelectSandDailyReport = new SelectSandDailyReportDataTable();
            base.Tables.Add(this.tableSelectSandDailyReport);
            this.tableSelectSandMaterialUsageSumAVGByDate = new SelectSandMaterialUsageSumAVGByDateDataTable();
            base.Tables.Add(this.tableSelectSandMaterialUsageSumAVGByDate);
            this.tableSelectSandMaterialAndDaily = new SelectSandMaterialAndDailyDataTable();
            base.Tables.Add(this.tableSelectSandMaterialAndDaily);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemControlChart() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemSandControlChart() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSelectSandReportByDate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemSandSieveValue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemSandWeeklyTest() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSelectSandDailyReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSelectSandMaterialUsageSumAVGByDate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSelectSandMaterialAndDaily() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet_Sand ds = new DataSet_Sand();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void mControlChartRowChangeEventHandler(object sender, mControlChartRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void mSandControlChartRowChangeEventHandler(object sender, mSandControlChartRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SelectSandReportByDateRowChangeEventHandler(object sender, SelectSandReportByDateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void mSandSieveValueRowChangeEventHandler(object sender, mSandSieveValueRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void mSandWeeklyTestRowChangeEventHandler(object sender, mSandWeeklyTestRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SelectSandDailyReportRowChangeEventHandler(object sender, SelectSandDailyReportRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SelectSandMaterialUsageSumAVGByDateRowChangeEventHandler(object sender, SelectSandMaterialUsageSumAVGByDateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SelectSandMaterialAndDailyRowChangeEventHandler(object sender, SelectSandMaterialAndDailyRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class mControlChartDataTable : global::System.Data.TypedTableBase<mControlChartRow> {
            
            private global::System.Data.DataColumn columnx_;
            
            private global::System.Data.DataColumn columnxParameterName;
            
            private global::System.Data.DataColumn columnxAverage;
            
            private global::System.Data.DataColumn columnxHigh;
            
            private global::System.Data.DataColumn columnxLow;
            
            private global::System.Data.DataColumn columnxParamNameUn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mControlChartDataTable() {
                this.TableName = "mControlChart";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal mControlChartDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected mControlChartDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn x_Column {
                get {
                    return this.columnx_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xParameterNameColumn {
                get {
                    return this.columnxParameterName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAverageColumn {
                get {
                    return this.columnxAverage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xHighColumn {
                get {
                    return this.columnxHigh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xLowColumn {
                get {
                    return this.columnxLow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xParamNameUnColumn {
                get {
                    return this.columnxParamNameUn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mControlChartRow this[int index] {
                get {
                    return ((mControlChartRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mControlChartRowChangeEventHandler mControlChartRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mControlChartRowChangeEventHandler mControlChartRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mControlChartRowChangeEventHandler mControlChartRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mControlChartRowChangeEventHandler mControlChartRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmControlChartRow(mControlChartRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mControlChartRow AddmControlChartRow(string xParameterName, decimal xAverage, decimal xHigh, decimal xLow, string xParamNameUn) {
                mControlChartRow rowmControlChartRow = ((mControlChartRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        xParameterName,
                        xAverage,
                        xHigh,
                        xLow,
                        xParamNameUn};
                rowmControlChartRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmControlChartRow);
                return rowmControlChartRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mControlChartRow FindByx_(int x_) {
                return ((mControlChartRow)(this.Rows.Find(new object[] {
                            x_})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                mControlChartDataTable cln = ((mControlChartDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new mControlChartDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnx_ = base.Columns["x_"];
                this.columnxParameterName = base.Columns["xParameterName"];
                this.columnxAverage = base.Columns["xAverage"];
                this.columnxHigh = base.Columns["xHigh"];
                this.columnxLow = base.Columns["xLow"];
                this.columnxParamNameUn = base.Columns["xParamNameUn"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnx_ = new global::System.Data.DataColumn("x_", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnx_);
                this.columnxParameterName = new global::System.Data.DataColumn("xParameterName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxParameterName);
                this.columnxAverage = new global::System.Data.DataColumn("xAverage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAverage);
                this.columnxHigh = new global::System.Data.DataColumn("xHigh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxHigh);
                this.columnxLow = new global::System.Data.DataColumn("xLow", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxLow);
                this.columnxParamNameUn = new global::System.Data.DataColumn("xParamNameUn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxParamNameUn);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnx_}, true));
                this.columnx_.AutoIncrement = true;
                this.columnx_.AutoIncrementSeed = -1;
                this.columnx_.AutoIncrementStep = -1;
                this.columnx_.AllowDBNull = false;
                this.columnx_.ReadOnly = true;
                this.columnx_.Unique = true;
                this.columnxParameterName.MaxLength = 50;
                this.columnxParamNameUn.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mControlChartRow NewmControlChartRow() {
                return ((mControlChartRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new mControlChartRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(mControlChartRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.mControlChartRowChanged != null)) {
                    this.mControlChartRowChanged(this, new mControlChartRowChangeEvent(((mControlChartRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.mControlChartRowChanging != null)) {
                    this.mControlChartRowChanging(this, new mControlChartRowChangeEvent(((mControlChartRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.mControlChartRowDeleted != null)) {
                    this.mControlChartRowDeleted(this, new mControlChartRowChangeEvent(((mControlChartRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.mControlChartRowDeleting != null)) {
                    this.mControlChartRowDeleting(this, new mControlChartRowChangeEvent(((mControlChartRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemControlChartRow(mControlChartRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Sand ds = new DataSet_Sand();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "mControlChartDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class mSandControlChartDataTable : global::System.Data.TypedTableBase<mSandControlChartRow> {
            
            private global::System.Data.DataColumn columnx_;
            
            private global::System.Data.DataColumn columnxParameterName;
            
            private global::System.Data.DataColumn columnxAverage;
            
            private global::System.Data.DataColumn columnxHigh;
            
            private global::System.Data.DataColumn columnxLow;
            
            private global::System.Data.DataColumn columnxParamNameUn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandControlChartDataTable() {
                this.TableName = "mSandControlChart";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal mSandControlChartDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected mSandControlChartDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn x_Column {
                get {
                    return this.columnx_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xParameterNameColumn {
                get {
                    return this.columnxParameterName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAverageColumn {
                get {
                    return this.columnxAverage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xHighColumn {
                get {
                    return this.columnxHigh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xLowColumn {
                get {
                    return this.columnxLow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xParamNameUnColumn {
                get {
                    return this.columnxParamNameUn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandControlChartRow this[int index] {
                get {
                    return ((mSandControlChartRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mSandControlChartRowChangeEventHandler mSandControlChartRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mSandControlChartRowChangeEventHandler mSandControlChartRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mSandControlChartRowChangeEventHandler mSandControlChartRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mSandControlChartRowChangeEventHandler mSandControlChartRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmSandControlChartRow(mSandControlChartRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandControlChartRow AddmSandControlChartRow(string xParameterName, decimal xAverage, decimal xHigh, decimal xLow, string xParamNameUn) {
                mSandControlChartRow rowmSandControlChartRow = ((mSandControlChartRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        xParameterName,
                        xAverage,
                        xHigh,
                        xLow,
                        xParamNameUn};
                rowmSandControlChartRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmSandControlChartRow);
                return rowmSandControlChartRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandControlChartRow FindByx_(int x_) {
                return ((mSandControlChartRow)(this.Rows.Find(new object[] {
                            x_})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                mSandControlChartDataTable cln = ((mSandControlChartDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new mSandControlChartDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnx_ = base.Columns["x_"];
                this.columnxParameterName = base.Columns["xParameterName"];
                this.columnxAverage = base.Columns["xAverage"];
                this.columnxHigh = base.Columns["xHigh"];
                this.columnxLow = base.Columns["xLow"];
                this.columnxParamNameUn = base.Columns["xParamNameUn"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnx_ = new global::System.Data.DataColumn("x_", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnx_);
                this.columnxParameterName = new global::System.Data.DataColumn("xParameterName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxParameterName);
                this.columnxAverage = new global::System.Data.DataColumn("xAverage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAverage);
                this.columnxHigh = new global::System.Data.DataColumn("xHigh", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxHigh);
                this.columnxLow = new global::System.Data.DataColumn("xLow", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxLow);
                this.columnxParamNameUn = new global::System.Data.DataColumn("xParamNameUn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxParamNameUn);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnx_}, true));
                this.columnx_.AutoIncrement = true;
                this.columnx_.AutoIncrementSeed = -1;
                this.columnx_.AutoIncrementStep = -1;
                this.columnx_.AllowDBNull = false;
                this.columnx_.ReadOnly = true;
                this.columnx_.Unique = true;
                this.columnxParameterName.MaxLength = 50;
                this.columnxParamNameUn.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandControlChartRow NewmSandControlChartRow() {
                return ((mSandControlChartRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new mSandControlChartRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(mSandControlChartRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.mSandControlChartRowChanged != null)) {
                    this.mSandControlChartRowChanged(this, new mSandControlChartRowChangeEvent(((mSandControlChartRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.mSandControlChartRowChanging != null)) {
                    this.mSandControlChartRowChanging(this, new mSandControlChartRowChangeEvent(((mSandControlChartRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.mSandControlChartRowDeleted != null)) {
                    this.mSandControlChartRowDeleted(this, new mSandControlChartRowChangeEvent(((mSandControlChartRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.mSandControlChartRowDeleting != null)) {
                    this.mSandControlChartRowDeleting(this, new mSandControlChartRowChangeEvent(((mSandControlChartRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemSandControlChartRow(mSandControlChartRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Sand ds = new DataSet_Sand();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "mSandControlChartDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectSandReportByDateDataTable : global::System.Data.TypedTableBase<SelectSandReportByDateRow> {
            
            private global::System.Data.DataColumn columnxDate;
            
            private global::System.Data.DataColumn columnxMoisturePercent;
            
            private global::System.Data.DataColumn columnxPermeability;
            
            private global::System.Data.DataColumn columnxCompresiveStrength;
            
            private global::System.Data.DataColumn columnxCompactibility;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandReportByDateDataTable() {
                this.TableName = "SelectSandReportByDate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectSandReportByDateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SelectSandReportByDateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDateColumn {
                get {
                    return this.columnxDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xMoisturePercentColumn {
                get {
                    return this.columnxMoisturePercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xPermeabilityColumn {
                get {
                    return this.columnxPermeability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xCompresiveStrengthColumn {
                get {
                    return this.columnxCompresiveStrength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xCompactibilityColumn {
                get {
                    return this.columnxCompactibility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandReportByDateRow this[int index] {
                get {
                    return ((SelectSandReportByDateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandReportByDateRowChangeEventHandler SelectSandReportByDateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandReportByDateRowChangeEventHandler SelectSandReportByDateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandReportByDateRowChangeEventHandler SelectSandReportByDateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandReportByDateRowChangeEventHandler SelectSandReportByDateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSelectSandReportByDateRow(SelectSandReportByDateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandReportByDateRow AddSelectSandReportByDateRow(string xDate, decimal xMoisturePercent, int xPermeability, decimal xCompresiveStrength, int xCompactibility) {
                SelectSandReportByDateRow rowSelectSandReportByDateRow = ((SelectSandReportByDateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xDate,
                        xMoisturePercent,
                        xPermeability,
                        xCompresiveStrength,
                        xCompactibility};
                rowSelectSandReportByDateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectSandReportByDateRow);
                return rowSelectSandReportByDateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SelectSandReportByDateDataTable cln = ((SelectSandReportByDateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SelectSandReportByDateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnxDate = base.Columns["xDate"];
                this.columnxMoisturePercent = base.Columns["xMoisturePercent"];
                this.columnxPermeability = base.Columns["xPermeability"];
                this.columnxCompresiveStrength = base.Columns["xCompresiveStrength"];
                this.columnxCompactibility = base.Columns["xCompactibility"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnxDate = new global::System.Data.DataColumn("xDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDate);
                this.columnxMoisturePercent = new global::System.Data.DataColumn("xMoisturePercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxMoisturePercent);
                this.columnxPermeability = new global::System.Data.DataColumn("xPermeability", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxPermeability);
                this.columnxCompresiveStrength = new global::System.Data.DataColumn("xCompresiveStrength", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxCompresiveStrength);
                this.columnxCompactibility = new global::System.Data.DataColumn("xCompactibility", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxCompactibility);
                this.columnxDate.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandReportByDateRow NewSelectSandReportByDateRow() {
                return ((SelectSandReportByDateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SelectSandReportByDateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SelectSandReportByDateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectSandReportByDateRowChanged != null)) {
                    this.SelectSandReportByDateRowChanged(this, new SelectSandReportByDateRowChangeEvent(((SelectSandReportByDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectSandReportByDateRowChanging != null)) {
                    this.SelectSandReportByDateRowChanging(this, new SelectSandReportByDateRowChangeEvent(((SelectSandReportByDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectSandReportByDateRowDeleted != null)) {
                    this.SelectSandReportByDateRowDeleted(this, new SelectSandReportByDateRowChangeEvent(((SelectSandReportByDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectSandReportByDateRowDeleting != null)) {
                    this.SelectSandReportByDateRowDeleting(this, new SelectSandReportByDateRowChangeEvent(((SelectSandReportByDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSelectSandReportByDateRow(SelectSandReportByDateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Sand ds = new DataSet_Sand();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectSandReportByDateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class mSandSieveValueDataTable : global::System.Data.TypedTableBase<mSandSieveValueRow> {
            
            private global::System.Data.DataColumn columnx_;
            
            private global::System.Data.DataColumn columnxDiameter11;
            
            private global::System.Data.DataColumn columnxDiameter10;
            
            private global::System.Data.DataColumn columnxDiameter9;
            
            private global::System.Data.DataColumn columnxDiameter8;
            
            private global::System.Data.DataColumn columnxDiameter7;
            
            private global::System.Data.DataColumn columnxDiameter6;
            
            private global::System.Data.DataColumn columnxDiameter5;
            
            private global::System.Data.DataColumn columnxDiameter4;
            
            private global::System.Data.DataColumn columnxDiameter3;
            
            private global::System.Data.DataColumn columnxDiameter2;
            
            private global::System.Data.DataColumn columnxDiameter1;
            
            private global::System.Data.DataColumn columnxAstm11;
            
            private global::System.Data.DataColumn columnxAstm10;
            
            private global::System.Data.DataColumn columnxAstm9;
            
            private global::System.Data.DataColumn columnxAstm8;
            
            private global::System.Data.DataColumn columnxAstm7;
            
            private global::System.Data.DataColumn columnxAstm6;
            
            private global::System.Data.DataColumn columnxAstm5;
            
            private global::System.Data.DataColumn columnxAstm4;
            
            private global::System.Data.DataColumn columnxAstm3;
            
            private global::System.Data.DataColumn columnxAstm2;
            
            private global::System.Data.DataColumn columnxAstm1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandSieveValueDataTable() {
                this.TableName = "mSandSieveValue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal mSandSieveValueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected mSandSieveValueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn x_Column {
                get {
                    return this.columnx_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameter11Column {
                get {
                    return this.columnxDiameter11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameter10Column {
                get {
                    return this.columnxDiameter10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameter9Column {
                get {
                    return this.columnxDiameter9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameter8Column {
                get {
                    return this.columnxDiameter8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameter7Column {
                get {
                    return this.columnxDiameter7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameter6Column {
                get {
                    return this.columnxDiameter6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameter5Column {
                get {
                    return this.columnxDiameter5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameter4Column {
                get {
                    return this.columnxDiameter4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameter3Column {
                get {
                    return this.columnxDiameter3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameter2Column {
                get {
                    return this.columnxDiameter2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameter1Column {
                get {
                    return this.columnxDiameter1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAstm11Column {
                get {
                    return this.columnxAstm11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAstm10Column {
                get {
                    return this.columnxAstm10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAstm9Column {
                get {
                    return this.columnxAstm9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAstm8Column {
                get {
                    return this.columnxAstm8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAstm7Column {
                get {
                    return this.columnxAstm7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAstm6Column {
                get {
                    return this.columnxAstm6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAstm5Column {
                get {
                    return this.columnxAstm5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAstm4Column {
                get {
                    return this.columnxAstm4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAstm3Column {
                get {
                    return this.columnxAstm3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAstm2Column {
                get {
                    return this.columnxAstm2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAstm1Column {
                get {
                    return this.columnxAstm1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandSieveValueRow this[int index] {
                get {
                    return ((mSandSieveValueRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mSandSieveValueRowChangeEventHandler mSandSieveValueRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mSandSieveValueRowChangeEventHandler mSandSieveValueRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mSandSieveValueRowChangeEventHandler mSandSieveValueRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mSandSieveValueRowChangeEventHandler mSandSieveValueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmSandSieveValueRow(mSandSieveValueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandSieveValueRow AddmSandSieveValueRow(
                        string xDiameter11, 
                        string xDiameter10, 
                        string xDiameter9, 
                        string xDiameter8, 
                        string xDiameter7, 
                        string xDiameter6, 
                        string xDiameter5, 
                        string xDiameter4, 
                        string xDiameter3, 
                        string xDiameter2, 
                        string xDiameter1, 
                        string xAstm11, 
                        string xAstm10, 
                        string xAstm9, 
                        string xAstm8, 
                        string xAstm7, 
                        string xAstm6, 
                        string xAstm5, 
                        string xAstm4, 
                        string xAstm3, 
                        string xAstm2, 
                        string xAstm1) {
                mSandSieveValueRow rowmSandSieveValueRow = ((mSandSieveValueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        xDiameter11,
                        xDiameter10,
                        xDiameter9,
                        xDiameter8,
                        xDiameter7,
                        xDiameter6,
                        xDiameter5,
                        xDiameter4,
                        xDiameter3,
                        xDiameter2,
                        xDiameter1,
                        xAstm11,
                        xAstm10,
                        xAstm9,
                        xAstm8,
                        xAstm7,
                        xAstm6,
                        xAstm5,
                        xAstm4,
                        xAstm3,
                        xAstm2,
                        xAstm1};
                rowmSandSieveValueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmSandSieveValueRow);
                return rowmSandSieveValueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandSieveValueRow FindByx_(int x_) {
                return ((mSandSieveValueRow)(this.Rows.Find(new object[] {
                            x_})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                mSandSieveValueDataTable cln = ((mSandSieveValueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new mSandSieveValueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnx_ = base.Columns["x_"];
                this.columnxDiameter11 = base.Columns["xDiameter11"];
                this.columnxDiameter10 = base.Columns["xDiameter10"];
                this.columnxDiameter9 = base.Columns["xDiameter9"];
                this.columnxDiameter8 = base.Columns["xDiameter8"];
                this.columnxDiameter7 = base.Columns["xDiameter7"];
                this.columnxDiameter6 = base.Columns["xDiameter6"];
                this.columnxDiameter5 = base.Columns["xDiameter5"];
                this.columnxDiameter4 = base.Columns["xDiameter4"];
                this.columnxDiameter3 = base.Columns["xDiameter3"];
                this.columnxDiameter2 = base.Columns["xDiameter2"];
                this.columnxDiameter1 = base.Columns["xDiameter1"];
                this.columnxAstm11 = base.Columns["xAstm11"];
                this.columnxAstm10 = base.Columns["xAstm10"];
                this.columnxAstm9 = base.Columns["xAstm9"];
                this.columnxAstm8 = base.Columns["xAstm8"];
                this.columnxAstm7 = base.Columns["xAstm7"];
                this.columnxAstm6 = base.Columns["xAstm6"];
                this.columnxAstm5 = base.Columns["xAstm5"];
                this.columnxAstm4 = base.Columns["xAstm4"];
                this.columnxAstm3 = base.Columns["xAstm3"];
                this.columnxAstm2 = base.Columns["xAstm2"];
                this.columnxAstm1 = base.Columns["xAstm1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnx_ = new global::System.Data.DataColumn("x_", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnx_);
                this.columnxDiameter11 = new global::System.Data.DataColumn("xDiameter11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameter11);
                this.columnxDiameter10 = new global::System.Data.DataColumn("xDiameter10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameter10);
                this.columnxDiameter9 = new global::System.Data.DataColumn("xDiameter9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameter9);
                this.columnxDiameter8 = new global::System.Data.DataColumn("xDiameter8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameter8);
                this.columnxDiameter7 = new global::System.Data.DataColumn("xDiameter7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameter7);
                this.columnxDiameter6 = new global::System.Data.DataColumn("xDiameter6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameter6);
                this.columnxDiameter5 = new global::System.Data.DataColumn("xDiameter5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameter5);
                this.columnxDiameter4 = new global::System.Data.DataColumn("xDiameter4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameter4);
                this.columnxDiameter3 = new global::System.Data.DataColumn("xDiameter3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameter3);
                this.columnxDiameter2 = new global::System.Data.DataColumn("xDiameter2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameter2);
                this.columnxDiameter1 = new global::System.Data.DataColumn("xDiameter1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameter1);
                this.columnxAstm11 = new global::System.Data.DataColumn("xAstm11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAstm11);
                this.columnxAstm10 = new global::System.Data.DataColumn("xAstm10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAstm10);
                this.columnxAstm9 = new global::System.Data.DataColumn("xAstm9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAstm9);
                this.columnxAstm8 = new global::System.Data.DataColumn("xAstm8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAstm8);
                this.columnxAstm7 = new global::System.Data.DataColumn("xAstm7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAstm7);
                this.columnxAstm6 = new global::System.Data.DataColumn("xAstm6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAstm6);
                this.columnxAstm5 = new global::System.Data.DataColumn("xAstm5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAstm5);
                this.columnxAstm4 = new global::System.Data.DataColumn("xAstm4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAstm4);
                this.columnxAstm3 = new global::System.Data.DataColumn("xAstm3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAstm3);
                this.columnxAstm2 = new global::System.Data.DataColumn("xAstm2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAstm2);
                this.columnxAstm1 = new global::System.Data.DataColumn("xAstm1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAstm1);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnx_}, true));
                this.columnx_.AutoIncrement = true;
                this.columnx_.AutoIncrementSeed = -1;
                this.columnx_.AutoIncrementStep = -1;
                this.columnx_.AllowDBNull = false;
                this.columnx_.ReadOnly = true;
                this.columnx_.Unique = true;
                this.columnxDiameter11.MaxLength = 10;
                this.columnxDiameter10.MaxLength = 10;
                this.columnxDiameter9.MaxLength = 10;
                this.columnxDiameter8.MaxLength = 10;
                this.columnxDiameter7.MaxLength = 10;
                this.columnxDiameter6.MaxLength = 10;
                this.columnxDiameter5.MaxLength = 10;
                this.columnxDiameter4.MaxLength = 10;
                this.columnxDiameter3.MaxLength = 10;
                this.columnxDiameter2.MaxLength = 10;
                this.columnxDiameter1.MaxLength = 10;
                this.columnxAstm11.MaxLength = 10;
                this.columnxAstm10.MaxLength = 10;
                this.columnxAstm9.MaxLength = 10;
                this.columnxAstm8.MaxLength = 10;
                this.columnxAstm7.MaxLength = 10;
                this.columnxAstm6.MaxLength = 10;
                this.columnxAstm5.MaxLength = 10;
                this.columnxAstm4.MaxLength = 10;
                this.columnxAstm3.MaxLength = 10;
                this.columnxAstm2.MaxLength = 10;
                this.columnxAstm1.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandSieveValueRow NewmSandSieveValueRow() {
                return ((mSandSieveValueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new mSandSieveValueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(mSandSieveValueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.mSandSieveValueRowChanged != null)) {
                    this.mSandSieveValueRowChanged(this, new mSandSieveValueRowChangeEvent(((mSandSieveValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.mSandSieveValueRowChanging != null)) {
                    this.mSandSieveValueRowChanging(this, new mSandSieveValueRowChangeEvent(((mSandSieveValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.mSandSieveValueRowDeleted != null)) {
                    this.mSandSieveValueRowDeleted(this, new mSandSieveValueRowChangeEvent(((mSandSieveValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.mSandSieveValueRowDeleting != null)) {
                    this.mSandSieveValueRowDeleting(this, new mSandSieveValueRowChangeEvent(((mSandSieveValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemSandSieveValueRow(mSandSieveValueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Sand ds = new DataSet_Sand();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "mSandSieveValueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class mSandWeeklyTestDataTable : global::System.Data.TypedTableBase<mSandWeeklyTestRow> {
            
            private global::System.Data.DataColumn columnx_;
            
            private global::System.Data.DataColumn columnxDate;
            
            private global::System.Data.DataColumn columnxDiameterBefore11;
            
            private global::System.Data.DataColumn columnxDiameterBefore10;
            
            private global::System.Data.DataColumn columnxDiameterBefore9;
            
            private global::System.Data.DataColumn columnxDiameterBefore8;
            
            private global::System.Data.DataColumn columnxDiameterBefore7;
            
            private global::System.Data.DataColumn columnxDiameterBefore6;
            
            private global::System.Data.DataColumn columnxDiameterBefore5;
            
            private global::System.Data.DataColumn columnxDiameterBefore4;
            
            private global::System.Data.DataColumn columnxDiameterBefore3;
            
            private global::System.Data.DataColumn columnxDiameterBefore2;
            
            private global::System.Data.DataColumn columnxDiameterBefore1;
            
            private global::System.Data.DataColumn columnxDiameterAfter11;
            
            private global::System.Data.DataColumn columnxDiameterAfter10;
            
            private global::System.Data.DataColumn columnxDiameterAfter9;
            
            private global::System.Data.DataColumn columnxDiameterAfter8;
            
            private global::System.Data.DataColumn columnxDiameterAfter7;
            
            private global::System.Data.DataColumn columnxDiameterAfter6;
            
            private global::System.Data.DataColumn columnxDiameterAfter5;
            
            private global::System.Data.DataColumn columnxDiameterAfter4;
            
            private global::System.Data.DataColumn columnxDiameterAfter3;
            
            private global::System.Data.DataColumn columnxDiameterAfter2;
            
            private global::System.Data.DataColumn columnxDiameterAfter1;
            
            private global::System.Data.DataColumn columnxAfsBefore;
            
            private global::System.Data.DataColumn columnxAfsAfter;
            
            private global::System.Data.DataColumn columnxVolatilePercent;
            
            private global::System.Data.DataColumn columnxBurningPercent;
            
            private global::System.Data.DataColumn columnxGlayPercent;
            
            private global::System.Data.DataColumn columnxActiveBentnitePercent;
            
            private global::System.Data.DataColumn columnxPermeability;
            
            private global::System.Data.DataColumn columnxApprove_;
            
            private global::System.Data.DataColumn columnxSupplier_;
            
            private global::System.Data.DataColumn columnxComment;
            
            private global::System.Data.DataColumn columnxGenGroup_;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandWeeklyTestDataTable() {
                this.TableName = "mSandWeeklyTest";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal mSandWeeklyTestDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected mSandWeeklyTestDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn x_Column {
                get {
                    return this.columnx_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDateColumn {
                get {
                    return this.columnxDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterBefore11Column {
                get {
                    return this.columnxDiameterBefore11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterBefore10Column {
                get {
                    return this.columnxDiameterBefore10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterBefore9Column {
                get {
                    return this.columnxDiameterBefore9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterBefore8Column {
                get {
                    return this.columnxDiameterBefore8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterBefore7Column {
                get {
                    return this.columnxDiameterBefore7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterBefore6Column {
                get {
                    return this.columnxDiameterBefore6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterBefore5Column {
                get {
                    return this.columnxDiameterBefore5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterBefore4Column {
                get {
                    return this.columnxDiameterBefore4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterBefore3Column {
                get {
                    return this.columnxDiameterBefore3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterBefore2Column {
                get {
                    return this.columnxDiameterBefore2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterBefore1Column {
                get {
                    return this.columnxDiameterBefore1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterAfter11Column {
                get {
                    return this.columnxDiameterAfter11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterAfter10Column {
                get {
                    return this.columnxDiameterAfter10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterAfter9Column {
                get {
                    return this.columnxDiameterAfter9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterAfter8Column {
                get {
                    return this.columnxDiameterAfter8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterAfter7Column {
                get {
                    return this.columnxDiameterAfter7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterAfter6Column {
                get {
                    return this.columnxDiameterAfter6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterAfter5Column {
                get {
                    return this.columnxDiameterAfter5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterAfter4Column {
                get {
                    return this.columnxDiameterAfter4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterAfter3Column {
                get {
                    return this.columnxDiameterAfter3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterAfter2Column {
                get {
                    return this.columnxDiameterAfter2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDiameterAfter1Column {
                get {
                    return this.columnxDiameterAfter1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAfsBeforeColumn {
                get {
                    return this.columnxAfsBefore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xAfsAfterColumn {
                get {
                    return this.columnxAfsAfter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xVolatilePercentColumn {
                get {
                    return this.columnxVolatilePercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xBurningPercentColumn {
                get {
                    return this.columnxBurningPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xGlayPercentColumn {
                get {
                    return this.columnxGlayPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xActiveBentnitePercentColumn {
                get {
                    return this.columnxActiveBentnitePercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xPermeabilityColumn {
                get {
                    return this.columnxPermeability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xApprove_Column {
                get {
                    return this.columnxApprove_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xSupplier_Column {
                get {
                    return this.columnxSupplier_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xCommentColumn {
                get {
                    return this.columnxComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xGenGroup_Column {
                get {
                    return this.columnxGenGroup_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandWeeklyTestRow this[int index] {
                get {
                    return ((mSandWeeklyTestRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mSandWeeklyTestRowChangeEventHandler mSandWeeklyTestRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mSandWeeklyTestRowChangeEventHandler mSandWeeklyTestRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mSandWeeklyTestRowChangeEventHandler mSandWeeklyTestRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mSandWeeklyTestRowChangeEventHandler mSandWeeklyTestRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmSandWeeklyTestRow(mSandWeeklyTestRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandWeeklyTestRow AddmSandWeeklyTestRow(
                        string xDate, 
                        decimal xDiameterBefore11, 
                        decimal xDiameterBefore10, 
                        decimal xDiameterBefore9, 
                        decimal xDiameterBefore8, 
                        decimal xDiameterBefore7, 
                        decimal xDiameterBefore6, 
                        decimal xDiameterBefore5, 
                        decimal xDiameterBefore4, 
                        decimal xDiameterBefore3, 
                        decimal xDiameterBefore2, 
                        decimal xDiameterBefore1, 
                        decimal xDiameterAfter11, 
                        decimal xDiameterAfter10, 
                        decimal xDiameterAfter9, 
                        decimal xDiameterAfter8, 
                        decimal xDiameterAfter7, 
                        decimal xDiameterAfter6, 
                        decimal xDiameterAfter5, 
                        decimal xDiameterAfter4, 
                        decimal xDiameterAfter3, 
                        decimal xDiameterAfter2, 
                        decimal xDiameterAfter1, 
                        decimal xAfsBefore, 
                        decimal xAfsAfter, 
                        decimal xVolatilePercent, 
                        decimal xBurningPercent, 
                        decimal xGlayPercent, 
                        decimal xActiveBentnitePercent, 
                        decimal xPermeability, 
                        int xApprove_, 
                        int xSupplier_, 
                        string xComment, 
                        int xGenGroup_) {
                mSandWeeklyTestRow rowmSandWeeklyTestRow = ((mSandWeeklyTestRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        xDate,
                        xDiameterBefore11,
                        xDiameterBefore10,
                        xDiameterBefore9,
                        xDiameterBefore8,
                        xDiameterBefore7,
                        xDiameterBefore6,
                        xDiameterBefore5,
                        xDiameterBefore4,
                        xDiameterBefore3,
                        xDiameterBefore2,
                        xDiameterBefore1,
                        xDiameterAfter11,
                        xDiameterAfter10,
                        xDiameterAfter9,
                        xDiameterAfter8,
                        xDiameterAfter7,
                        xDiameterAfter6,
                        xDiameterAfter5,
                        xDiameterAfter4,
                        xDiameterAfter3,
                        xDiameterAfter2,
                        xDiameterAfter1,
                        xAfsBefore,
                        xAfsAfter,
                        xVolatilePercent,
                        xBurningPercent,
                        xGlayPercent,
                        xActiveBentnitePercent,
                        xPermeability,
                        xApprove_,
                        xSupplier_,
                        xComment,
                        xGenGroup_};
                rowmSandWeeklyTestRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmSandWeeklyTestRow);
                return rowmSandWeeklyTestRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandWeeklyTestRow FindByx_(int x_) {
                return ((mSandWeeklyTestRow)(this.Rows.Find(new object[] {
                            x_})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                mSandWeeklyTestDataTable cln = ((mSandWeeklyTestDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new mSandWeeklyTestDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnx_ = base.Columns["x_"];
                this.columnxDate = base.Columns["xDate"];
                this.columnxDiameterBefore11 = base.Columns["xDiameterBefore11"];
                this.columnxDiameterBefore10 = base.Columns["xDiameterBefore10"];
                this.columnxDiameterBefore9 = base.Columns["xDiameterBefore9"];
                this.columnxDiameterBefore8 = base.Columns["xDiameterBefore8"];
                this.columnxDiameterBefore7 = base.Columns["xDiameterBefore7"];
                this.columnxDiameterBefore6 = base.Columns["xDiameterBefore6"];
                this.columnxDiameterBefore5 = base.Columns["xDiameterBefore5"];
                this.columnxDiameterBefore4 = base.Columns["xDiameterBefore4"];
                this.columnxDiameterBefore3 = base.Columns["xDiameterBefore3"];
                this.columnxDiameterBefore2 = base.Columns["xDiameterBefore2"];
                this.columnxDiameterBefore1 = base.Columns["xDiameterBefore1"];
                this.columnxDiameterAfter11 = base.Columns["xDiameterAfter11"];
                this.columnxDiameterAfter10 = base.Columns["xDiameterAfter10"];
                this.columnxDiameterAfter9 = base.Columns["xDiameterAfter9"];
                this.columnxDiameterAfter8 = base.Columns["xDiameterAfter8"];
                this.columnxDiameterAfter7 = base.Columns["xDiameterAfter7"];
                this.columnxDiameterAfter6 = base.Columns["xDiameterAfter6"];
                this.columnxDiameterAfter5 = base.Columns["xDiameterAfter5"];
                this.columnxDiameterAfter4 = base.Columns["xDiameterAfter4"];
                this.columnxDiameterAfter3 = base.Columns["xDiameterAfter3"];
                this.columnxDiameterAfter2 = base.Columns["xDiameterAfter2"];
                this.columnxDiameterAfter1 = base.Columns["xDiameterAfter1"];
                this.columnxAfsBefore = base.Columns["xAfsBefore"];
                this.columnxAfsAfter = base.Columns["xAfsAfter"];
                this.columnxVolatilePercent = base.Columns["xVolatilePercent"];
                this.columnxBurningPercent = base.Columns["xBurningPercent"];
                this.columnxGlayPercent = base.Columns["xGlayPercent"];
                this.columnxActiveBentnitePercent = base.Columns["xActiveBentnitePercent"];
                this.columnxPermeability = base.Columns["xPermeability"];
                this.columnxApprove_ = base.Columns["xApprove_"];
                this.columnxSupplier_ = base.Columns["xSupplier_"];
                this.columnxComment = base.Columns["xComment"];
                this.columnxGenGroup_ = base.Columns["xGenGroup_"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnx_ = new global::System.Data.DataColumn("x_", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnx_);
                this.columnxDate = new global::System.Data.DataColumn("xDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDate);
                this.columnxDiameterBefore11 = new global::System.Data.DataColumn("xDiameterBefore11", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterBefore11);
                this.columnxDiameterBefore10 = new global::System.Data.DataColumn("xDiameterBefore10", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterBefore10);
                this.columnxDiameterBefore9 = new global::System.Data.DataColumn("xDiameterBefore9", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterBefore9);
                this.columnxDiameterBefore8 = new global::System.Data.DataColumn("xDiameterBefore8", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterBefore8);
                this.columnxDiameterBefore7 = new global::System.Data.DataColumn("xDiameterBefore7", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterBefore7);
                this.columnxDiameterBefore6 = new global::System.Data.DataColumn("xDiameterBefore6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterBefore6);
                this.columnxDiameterBefore5 = new global::System.Data.DataColumn("xDiameterBefore5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterBefore5);
                this.columnxDiameterBefore4 = new global::System.Data.DataColumn("xDiameterBefore4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterBefore4);
                this.columnxDiameterBefore3 = new global::System.Data.DataColumn("xDiameterBefore3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterBefore3);
                this.columnxDiameterBefore2 = new global::System.Data.DataColumn("xDiameterBefore2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterBefore2);
                this.columnxDiameterBefore1 = new global::System.Data.DataColumn("xDiameterBefore1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterBefore1);
                this.columnxDiameterAfter11 = new global::System.Data.DataColumn("xDiameterAfter11", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterAfter11);
                this.columnxDiameterAfter10 = new global::System.Data.DataColumn("xDiameterAfter10", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterAfter10);
                this.columnxDiameterAfter9 = new global::System.Data.DataColumn("xDiameterAfter9", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterAfter9);
                this.columnxDiameterAfter8 = new global::System.Data.DataColumn("xDiameterAfter8", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterAfter8);
                this.columnxDiameterAfter7 = new global::System.Data.DataColumn("xDiameterAfter7", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterAfter7);
                this.columnxDiameterAfter6 = new global::System.Data.DataColumn("xDiameterAfter6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterAfter6);
                this.columnxDiameterAfter5 = new global::System.Data.DataColumn("xDiameterAfter5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterAfter5);
                this.columnxDiameterAfter4 = new global::System.Data.DataColumn("xDiameterAfter4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterAfter4);
                this.columnxDiameterAfter3 = new global::System.Data.DataColumn("xDiameterAfter3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterAfter3);
                this.columnxDiameterAfter2 = new global::System.Data.DataColumn("xDiameterAfter2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterAfter2);
                this.columnxDiameterAfter1 = new global::System.Data.DataColumn("xDiameterAfter1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDiameterAfter1);
                this.columnxAfsBefore = new global::System.Data.DataColumn("xAfsBefore", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAfsBefore);
                this.columnxAfsAfter = new global::System.Data.DataColumn("xAfsAfter", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxAfsAfter);
                this.columnxVolatilePercent = new global::System.Data.DataColumn("xVolatilePercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxVolatilePercent);
                this.columnxBurningPercent = new global::System.Data.DataColumn("xBurningPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxBurningPercent);
                this.columnxGlayPercent = new global::System.Data.DataColumn("xGlayPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxGlayPercent);
                this.columnxActiveBentnitePercent = new global::System.Data.DataColumn("xActiveBentnitePercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxActiveBentnitePercent);
                this.columnxPermeability = new global::System.Data.DataColumn("xPermeability", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxPermeability);
                this.columnxApprove_ = new global::System.Data.DataColumn("xApprove_", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxApprove_);
                this.columnxSupplier_ = new global::System.Data.DataColumn("xSupplier_", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxSupplier_);
                this.columnxComment = new global::System.Data.DataColumn("xComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxComment);
                this.columnxGenGroup_ = new global::System.Data.DataColumn("xGenGroup_", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxGenGroup_);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnx_}, true));
                this.columnx_.AutoIncrement = true;
                this.columnx_.AutoIncrementSeed = -1;
                this.columnx_.AutoIncrementStep = -1;
                this.columnx_.AllowDBNull = false;
                this.columnx_.ReadOnly = true;
                this.columnx_.Unique = true;
                this.columnxDate.MaxLength = 10;
                this.columnxComment.MaxLength = 300;
                this.columnxGenGroup_.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandWeeklyTestRow NewmSandWeeklyTestRow() {
                return ((mSandWeeklyTestRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new mSandWeeklyTestRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(mSandWeeklyTestRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.mSandWeeklyTestRowChanged != null)) {
                    this.mSandWeeklyTestRowChanged(this, new mSandWeeklyTestRowChangeEvent(((mSandWeeklyTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.mSandWeeklyTestRowChanging != null)) {
                    this.mSandWeeklyTestRowChanging(this, new mSandWeeklyTestRowChangeEvent(((mSandWeeklyTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.mSandWeeklyTestRowDeleted != null)) {
                    this.mSandWeeklyTestRowDeleted(this, new mSandWeeklyTestRowChangeEvent(((mSandWeeklyTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.mSandWeeklyTestRowDeleting != null)) {
                    this.mSandWeeklyTestRowDeleting(this, new mSandWeeklyTestRowChangeEvent(((mSandWeeklyTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemSandWeeklyTestRow(mSandWeeklyTestRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Sand ds = new DataSet_Sand();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "mSandWeeklyTestDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectSandDailyReportDataTable : global::System.Data.TypedTableBase<SelectSandDailyReportRow> {
            
            private global::System.Data.DataColumn columnxDate;
            
            private global::System.Data.DataColumn columnShiftName;
            
            private global::System.Data.DataColumn columnxPiecesLine1;
            
            private global::System.Data.DataColumn columnxPiecesLine2;
            
            private global::System.Data.DataColumn columnSupplier;
            
            private global::System.Data.DataColumn columnxSamplingTime;
            
            private global::System.Data.DataColumn columnxMoisturePercent;
            
            private global::System.Data.DataColumn columnxPermeability;
            
            private global::System.Data.DataColumn columnxCompresiveStrength;
            
            private global::System.Data.DataColumn columnxCompactibility;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandDailyReportDataTable() {
                this.TableName = "SelectSandDailyReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectSandDailyReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SelectSandDailyReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDateColumn {
                get {
                    return this.columnxDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShiftNameColumn {
                get {
                    return this.columnShiftName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xPiecesLine1Column {
                get {
                    return this.columnxPiecesLine1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xPiecesLine2Column {
                get {
                    return this.columnxPiecesLine2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierColumn {
                get {
                    return this.columnSupplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xSamplingTimeColumn {
                get {
                    return this.columnxSamplingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xMoisturePercentColumn {
                get {
                    return this.columnxMoisturePercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xPermeabilityColumn {
                get {
                    return this.columnxPermeability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xCompresiveStrengthColumn {
                get {
                    return this.columnxCompresiveStrength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xCompactibilityColumn {
                get {
                    return this.columnxCompactibility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandDailyReportRow this[int index] {
                get {
                    return ((SelectSandDailyReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandDailyReportRowChangeEventHandler SelectSandDailyReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandDailyReportRowChangeEventHandler SelectSandDailyReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandDailyReportRowChangeEventHandler SelectSandDailyReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandDailyReportRowChangeEventHandler SelectSandDailyReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSelectSandDailyReportRow(SelectSandDailyReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandDailyReportRow AddSelectSandDailyReportRow(string xDate, string ShiftName, string xPiecesLine1, string xPiecesLine2, string Supplier, string xSamplingTime, decimal xMoisturePercent, int xPermeability, decimal xCompresiveStrength, int xCompactibility) {
                SelectSandDailyReportRow rowSelectSandDailyReportRow = ((SelectSandDailyReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        xDate,
                        ShiftName,
                        xPiecesLine1,
                        xPiecesLine2,
                        Supplier,
                        xSamplingTime,
                        xMoisturePercent,
                        xPermeability,
                        xCompresiveStrength,
                        xCompactibility};
                rowSelectSandDailyReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectSandDailyReportRow);
                return rowSelectSandDailyReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SelectSandDailyReportDataTable cln = ((SelectSandDailyReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SelectSandDailyReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnxDate = base.Columns["xDate"];
                this.columnShiftName = base.Columns["ShiftName"];
                this.columnxPiecesLine1 = base.Columns["xPiecesLine1"];
                this.columnxPiecesLine2 = base.Columns["xPiecesLine2"];
                this.columnSupplier = base.Columns["Supplier"];
                this.columnxSamplingTime = base.Columns["xSamplingTime"];
                this.columnxMoisturePercent = base.Columns["xMoisturePercent"];
                this.columnxPermeability = base.Columns["xPermeability"];
                this.columnxCompresiveStrength = base.Columns["xCompresiveStrength"];
                this.columnxCompactibility = base.Columns["xCompactibility"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnxDate = new global::System.Data.DataColumn("xDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDate);
                this.columnShiftName = new global::System.Data.DataColumn("ShiftName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShiftName);
                this.columnxPiecesLine1 = new global::System.Data.DataColumn("xPiecesLine1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxPiecesLine1);
                this.columnxPiecesLine2 = new global::System.Data.DataColumn("xPiecesLine2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxPiecesLine2);
                this.columnSupplier = new global::System.Data.DataColumn("Supplier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier);
                this.columnxSamplingTime = new global::System.Data.DataColumn("xSamplingTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxSamplingTime);
                this.columnxMoisturePercent = new global::System.Data.DataColumn("xMoisturePercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxMoisturePercent);
                this.columnxPermeability = new global::System.Data.DataColumn("xPermeability", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxPermeability);
                this.columnxCompresiveStrength = new global::System.Data.DataColumn("xCompresiveStrength", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxCompresiveStrength);
                this.columnxCompactibility = new global::System.Data.DataColumn("xCompactibility", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxCompactibility);
                this.columnxDate.MaxLength = 10;
                this.columnShiftName.ReadOnly = true;
                this.columnShiftName.MaxLength = 50;
                this.columnxPiecesLine1.ReadOnly = true;
                this.columnxPiecesLine1.MaxLength = 50;
                this.columnxPiecesLine2.ReadOnly = true;
                this.columnxPiecesLine2.MaxLength = 50;
                this.columnSupplier.ReadOnly = true;
                this.columnSupplier.MaxLength = 101;
                this.columnxSamplingTime.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandDailyReportRow NewSelectSandDailyReportRow() {
                return ((SelectSandDailyReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SelectSandDailyReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SelectSandDailyReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectSandDailyReportRowChanged != null)) {
                    this.SelectSandDailyReportRowChanged(this, new SelectSandDailyReportRowChangeEvent(((SelectSandDailyReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectSandDailyReportRowChanging != null)) {
                    this.SelectSandDailyReportRowChanging(this, new SelectSandDailyReportRowChangeEvent(((SelectSandDailyReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectSandDailyReportRowDeleted != null)) {
                    this.SelectSandDailyReportRowDeleted(this, new SelectSandDailyReportRowChangeEvent(((SelectSandDailyReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectSandDailyReportRowDeleting != null)) {
                    this.SelectSandDailyReportRowDeleting(this, new SelectSandDailyReportRowChangeEvent(((SelectSandDailyReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSelectSandDailyReportRow(SelectSandDailyReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Sand ds = new DataSet_Sand();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectSandDailyReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectSandMaterialUsageSumAVGByDateDataTable : global::System.Data.TypedTableBase<SelectSandMaterialUsageSumAVGByDateRow> {
            
            private global::System.Data.DataColumn columnBantonit;
            
            private global::System.Data.DataColumn columnSandNew;
            
            private global::System.Data.DataColumn columnCoalDust;
            
            private global::System.Data.DataColumn columnWater;
            
            private global::System.Data.DataColumn columnSandReturn;
            
            private global::System.Data.DataColumn columnBatchCount;
            
            private global::System.Data.DataColumn columnAVGBantonit;
            
            private global::System.Data.DataColumn columnAVGSandNew;
            
            private global::System.Data.DataColumn columnAVGCoalDust;
            
            private global::System.Data.DataColumn columnAVGWater;
            
            private global::System.Data.DataColumn columnAVGSandReturn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandMaterialUsageSumAVGByDateDataTable() {
                this.TableName = "SelectSandMaterialUsageSumAVGByDate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectSandMaterialUsageSumAVGByDateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SelectSandMaterialUsageSumAVGByDateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BantonitColumn {
                get {
                    return this.columnBantonit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SandNewColumn {
                get {
                    return this.columnSandNew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoalDustColumn {
                get {
                    return this.columnCoalDust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaterColumn {
                get {
                    return this.columnWater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SandReturnColumn {
                get {
                    return this.columnSandReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BatchCountColumn {
                get {
                    return this.columnBatchCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVGBantonitColumn {
                get {
                    return this.columnAVGBantonit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVGSandNewColumn {
                get {
                    return this.columnAVGSandNew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVGCoalDustColumn {
                get {
                    return this.columnAVGCoalDust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVGWaterColumn {
                get {
                    return this.columnAVGWater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVGSandReturnColumn {
                get {
                    return this.columnAVGSandReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandMaterialUsageSumAVGByDateRow this[int index] {
                get {
                    return ((SelectSandMaterialUsageSumAVGByDateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandMaterialUsageSumAVGByDateRowChangeEventHandler SelectSandMaterialUsageSumAVGByDateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandMaterialUsageSumAVGByDateRowChangeEventHandler SelectSandMaterialUsageSumAVGByDateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandMaterialUsageSumAVGByDateRowChangeEventHandler SelectSandMaterialUsageSumAVGByDateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandMaterialUsageSumAVGByDateRowChangeEventHandler SelectSandMaterialUsageSumAVGByDateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSelectSandMaterialUsageSumAVGByDateRow(SelectSandMaterialUsageSumAVGByDateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandMaterialUsageSumAVGByDateRow AddSelectSandMaterialUsageSumAVGByDateRow(int Bantonit, int SandNew, int CoalDust, int Water, int SandReturn, int BatchCount, decimal AVGBantonit, decimal AVGSandNew, decimal AVGCoalDust, decimal AVGWater, decimal AVGSandReturn) {
                SelectSandMaterialUsageSumAVGByDateRow rowSelectSandMaterialUsageSumAVGByDateRow = ((SelectSandMaterialUsageSumAVGByDateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Bantonit,
                        SandNew,
                        CoalDust,
                        Water,
                        SandReturn,
                        BatchCount,
                        AVGBantonit,
                        AVGSandNew,
                        AVGCoalDust,
                        AVGWater,
                        AVGSandReturn};
                rowSelectSandMaterialUsageSumAVGByDateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectSandMaterialUsageSumAVGByDateRow);
                return rowSelectSandMaterialUsageSumAVGByDateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SelectSandMaterialUsageSumAVGByDateDataTable cln = ((SelectSandMaterialUsageSumAVGByDateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SelectSandMaterialUsageSumAVGByDateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnBantonit = base.Columns["Bantonit"];
                this.columnSandNew = base.Columns["SandNew"];
                this.columnCoalDust = base.Columns["CoalDust"];
                this.columnWater = base.Columns["Water"];
                this.columnSandReturn = base.Columns["SandReturn"];
                this.columnBatchCount = base.Columns["BatchCount"];
                this.columnAVGBantonit = base.Columns["AVGBantonit"];
                this.columnAVGSandNew = base.Columns["AVGSandNew"];
                this.columnAVGCoalDust = base.Columns["AVGCoalDust"];
                this.columnAVGWater = base.Columns["AVGWater"];
                this.columnAVGSandReturn = base.Columns["AVGSandReturn"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnBantonit = new global::System.Data.DataColumn("Bantonit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBantonit);
                this.columnSandNew = new global::System.Data.DataColumn("SandNew", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSandNew);
                this.columnCoalDust = new global::System.Data.DataColumn("CoalDust", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoalDust);
                this.columnWater = new global::System.Data.DataColumn("Water", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWater);
                this.columnSandReturn = new global::System.Data.DataColumn("SandReturn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSandReturn);
                this.columnBatchCount = new global::System.Data.DataColumn("BatchCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchCount);
                this.columnAVGBantonit = new global::System.Data.DataColumn("AVGBantonit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGBantonit);
                this.columnAVGSandNew = new global::System.Data.DataColumn("AVGSandNew", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGSandNew);
                this.columnAVGCoalDust = new global::System.Data.DataColumn("AVGCoalDust", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGCoalDust);
                this.columnAVGWater = new global::System.Data.DataColumn("AVGWater", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGWater);
                this.columnAVGSandReturn = new global::System.Data.DataColumn("AVGSandReturn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGSandReturn);
                this.columnBantonit.ReadOnly = true;
                this.columnSandNew.ReadOnly = true;
                this.columnCoalDust.ReadOnly = true;
                this.columnWater.ReadOnly = true;
                this.columnSandReturn.ReadOnly = true;
                this.columnBatchCount.ReadOnly = true;
                this.columnAVGBantonit.ReadOnly = true;
                this.columnAVGSandNew.ReadOnly = true;
                this.columnAVGCoalDust.ReadOnly = true;
                this.columnAVGWater.ReadOnly = true;
                this.columnAVGSandReturn.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandMaterialUsageSumAVGByDateRow NewSelectSandMaterialUsageSumAVGByDateRow() {
                return ((SelectSandMaterialUsageSumAVGByDateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SelectSandMaterialUsageSumAVGByDateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SelectSandMaterialUsageSumAVGByDateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectSandMaterialUsageSumAVGByDateRowChanged != null)) {
                    this.SelectSandMaterialUsageSumAVGByDateRowChanged(this, new SelectSandMaterialUsageSumAVGByDateRowChangeEvent(((SelectSandMaterialUsageSumAVGByDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectSandMaterialUsageSumAVGByDateRowChanging != null)) {
                    this.SelectSandMaterialUsageSumAVGByDateRowChanging(this, new SelectSandMaterialUsageSumAVGByDateRowChangeEvent(((SelectSandMaterialUsageSumAVGByDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectSandMaterialUsageSumAVGByDateRowDeleted != null)) {
                    this.SelectSandMaterialUsageSumAVGByDateRowDeleted(this, new SelectSandMaterialUsageSumAVGByDateRowChangeEvent(((SelectSandMaterialUsageSumAVGByDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectSandMaterialUsageSumAVGByDateRowDeleting != null)) {
                    this.SelectSandMaterialUsageSumAVGByDateRowDeleting(this, new SelectSandMaterialUsageSumAVGByDateRowChangeEvent(((SelectSandMaterialUsageSumAVGByDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSelectSandMaterialUsageSumAVGByDateRow(SelectSandMaterialUsageSumAVGByDateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Sand ds = new DataSet_Sand();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectSandMaterialUsageSumAVGByDateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectSandMaterialAndDailyDataTable : global::System.Data.TypedTableBase<SelectSandMaterialAndDailyRow> {
            
            private global::System.Data.DataColumn columnx_;
            
            private global::System.Data.DataColumn columnxDate;
            
            private global::System.Data.DataColumn columnshift;
            
            private global::System.Data.DataColumn columnBatchCount;
            
            private global::System.Data.DataColumn columnBantonit;
            
            private global::System.Data.DataColumn columnSandNew;
            
            private global::System.Data.DataColumn columnCoalDust;
            
            private global::System.Data.DataColumn columnWater;
            
            private global::System.Data.DataColumn columnSandReturn;
            
            private global::System.Data.DataColumn columnAVGBantonit;
            
            private global::System.Data.DataColumn columnAVGSandNew;
            
            private global::System.Data.DataColumn columnAVGCoalDust;
            
            private global::System.Data.DataColumn columnAVGWater;
            
            private global::System.Data.DataColumn columnAVGSandReturn;
            
            private global::System.Data.DataColumn columnAVGPermeability;
            
            private global::System.Data.DataColumn columnAVGCompactibility;
            
            private global::System.Data.DataColumn columnAVGCompresiveStrength;
            
            private global::System.Data.DataColumn columnAVGMoisturePercent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandMaterialAndDailyDataTable() {
                this.TableName = "SelectSandMaterialAndDaily";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectSandMaterialAndDailyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SelectSandMaterialAndDailyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn x_Column {
                get {
                    return this.columnx_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xDateColumn {
                get {
                    return this.columnxDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn shiftColumn {
                get {
                    return this.columnshift;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BatchCountColumn {
                get {
                    return this.columnBatchCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BantonitColumn {
                get {
                    return this.columnBantonit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SandNewColumn {
                get {
                    return this.columnSandNew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoalDustColumn {
                get {
                    return this.columnCoalDust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaterColumn {
                get {
                    return this.columnWater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SandReturnColumn {
                get {
                    return this.columnSandReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVGBantonitColumn {
                get {
                    return this.columnAVGBantonit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVGSandNewColumn {
                get {
                    return this.columnAVGSandNew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVGCoalDustColumn {
                get {
                    return this.columnAVGCoalDust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVGWaterColumn {
                get {
                    return this.columnAVGWater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVGSandReturnColumn {
                get {
                    return this.columnAVGSandReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVGPermeabilityColumn {
                get {
                    return this.columnAVGPermeability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVGCompactibilityColumn {
                get {
                    return this.columnAVGCompactibility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVGCompresiveStrengthColumn {
                get {
                    return this.columnAVGCompresiveStrength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVGMoisturePercentColumn {
                get {
                    return this.columnAVGMoisturePercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandMaterialAndDailyRow this[int index] {
                get {
                    return ((SelectSandMaterialAndDailyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandMaterialAndDailyRowChangeEventHandler SelectSandMaterialAndDailyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandMaterialAndDailyRowChangeEventHandler SelectSandMaterialAndDailyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandMaterialAndDailyRowChangeEventHandler SelectSandMaterialAndDailyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectSandMaterialAndDailyRowChangeEventHandler SelectSandMaterialAndDailyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSelectSandMaterialAndDailyRow(SelectSandMaterialAndDailyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandMaterialAndDailyRow AddSelectSandMaterialAndDailyRow(
                        string xDate, 
                        string shift, 
                        int BatchCount, 
                        int Bantonit, 
                        int SandNew, 
                        int CoalDust, 
                        int Water, 
                        int SandReturn, 
                        decimal AVGBantonit, 
                        decimal AVGSandNew, 
                        decimal AVGCoalDust, 
                        decimal AVGWater, 
                        decimal AVGSandReturn, 
                        int AVGPermeability, 
                        int AVGCompactibility, 
                        decimal AVGCompresiveStrength, 
                        decimal AVGMoisturePercent) {
                SelectSandMaterialAndDailyRow rowSelectSandMaterialAndDailyRow = ((SelectSandMaterialAndDailyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        xDate,
                        shift,
                        BatchCount,
                        Bantonit,
                        SandNew,
                        CoalDust,
                        Water,
                        SandReturn,
                        AVGBantonit,
                        AVGSandNew,
                        AVGCoalDust,
                        AVGWater,
                        AVGSandReturn,
                        AVGPermeability,
                        AVGCompactibility,
                        AVGCompresiveStrength,
                        AVGMoisturePercent};
                rowSelectSandMaterialAndDailyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectSandMaterialAndDailyRow);
                return rowSelectSandMaterialAndDailyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandMaterialAndDailyRow FindByx_(int x_) {
                return ((SelectSandMaterialAndDailyRow)(this.Rows.Find(new object[] {
                            x_})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SelectSandMaterialAndDailyDataTable cln = ((SelectSandMaterialAndDailyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SelectSandMaterialAndDailyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnx_ = base.Columns["x_"];
                this.columnxDate = base.Columns["xDate"];
                this.columnshift = base.Columns["shift"];
                this.columnBatchCount = base.Columns["BatchCount"];
                this.columnBantonit = base.Columns["Bantonit"];
                this.columnSandNew = base.Columns["SandNew"];
                this.columnCoalDust = base.Columns["CoalDust"];
                this.columnWater = base.Columns["Water"];
                this.columnSandReturn = base.Columns["SandReturn"];
                this.columnAVGBantonit = base.Columns["AVGBantonit"];
                this.columnAVGSandNew = base.Columns["AVGSandNew"];
                this.columnAVGCoalDust = base.Columns["AVGCoalDust"];
                this.columnAVGWater = base.Columns["AVGWater"];
                this.columnAVGSandReturn = base.Columns["AVGSandReturn"];
                this.columnAVGPermeability = base.Columns["AVGPermeability"];
                this.columnAVGCompactibility = base.Columns["AVGCompactibility"];
                this.columnAVGCompresiveStrength = base.Columns["AVGCompresiveStrength"];
                this.columnAVGMoisturePercent = base.Columns["AVGMoisturePercent"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnx_ = new global::System.Data.DataColumn("x_", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnx_);
                this.columnxDate = new global::System.Data.DataColumn("xDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxDate);
                this.columnshift = new global::System.Data.DataColumn("shift", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshift);
                this.columnBatchCount = new global::System.Data.DataColumn("BatchCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchCount);
                this.columnBantonit = new global::System.Data.DataColumn("Bantonit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBantonit);
                this.columnSandNew = new global::System.Data.DataColumn("SandNew", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSandNew);
                this.columnCoalDust = new global::System.Data.DataColumn("CoalDust", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoalDust);
                this.columnWater = new global::System.Data.DataColumn("Water", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWater);
                this.columnSandReturn = new global::System.Data.DataColumn("SandReturn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSandReturn);
                this.columnAVGBantonit = new global::System.Data.DataColumn("AVGBantonit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGBantonit);
                this.columnAVGSandNew = new global::System.Data.DataColumn("AVGSandNew", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGSandNew);
                this.columnAVGCoalDust = new global::System.Data.DataColumn("AVGCoalDust", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGCoalDust);
                this.columnAVGWater = new global::System.Data.DataColumn("AVGWater", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGWater);
                this.columnAVGSandReturn = new global::System.Data.DataColumn("AVGSandReturn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGSandReturn);
                this.columnAVGPermeability = new global::System.Data.DataColumn("AVGPermeability", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGPermeability);
                this.columnAVGCompactibility = new global::System.Data.DataColumn("AVGCompactibility", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGCompactibility);
                this.columnAVGCompresiveStrength = new global::System.Data.DataColumn("AVGCompresiveStrength", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGCompresiveStrength);
                this.columnAVGMoisturePercent = new global::System.Data.DataColumn("AVGMoisturePercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVGMoisturePercent);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnx_}, true));
                this.columnx_.AutoIncrement = true;
                this.columnx_.AllowDBNull = false;
                this.columnx_.ReadOnly = true;
                this.columnx_.Unique = true;
                this.columnxDate.MaxLength = 10;
                this.columnshift.ReadOnly = true;
                this.columnshift.MaxLength = 50;
                this.columnBatchCount.ReadOnly = true;
                this.columnBantonit.ReadOnly = true;
                this.columnSandNew.ReadOnly = true;
                this.columnCoalDust.ReadOnly = true;
                this.columnWater.ReadOnly = true;
                this.columnSandReturn.ReadOnly = true;
                this.columnAVGBantonit.ReadOnly = true;
                this.columnAVGSandNew.ReadOnly = true;
                this.columnAVGCoalDust.ReadOnly = true;
                this.columnAVGWater.ReadOnly = true;
                this.columnAVGSandReturn.ReadOnly = true;
                this.columnAVGPermeability.ReadOnly = true;
                this.columnAVGCompactibility.ReadOnly = true;
                this.columnAVGCompresiveStrength.ReadOnly = true;
                this.columnAVGMoisturePercent.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandMaterialAndDailyRow NewSelectSandMaterialAndDailyRow() {
                return ((SelectSandMaterialAndDailyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SelectSandMaterialAndDailyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SelectSandMaterialAndDailyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectSandMaterialAndDailyRowChanged != null)) {
                    this.SelectSandMaterialAndDailyRowChanged(this, new SelectSandMaterialAndDailyRowChangeEvent(((SelectSandMaterialAndDailyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectSandMaterialAndDailyRowChanging != null)) {
                    this.SelectSandMaterialAndDailyRowChanging(this, new SelectSandMaterialAndDailyRowChangeEvent(((SelectSandMaterialAndDailyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectSandMaterialAndDailyRowDeleted != null)) {
                    this.SelectSandMaterialAndDailyRowDeleted(this, new SelectSandMaterialAndDailyRowChangeEvent(((SelectSandMaterialAndDailyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectSandMaterialAndDailyRowDeleting != null)) {
                    this.SelectSandMaterialAndDailyRowDeleting(this, new SelectSandMaterialAndDailyRowChangeEvent(((SelectSandMaterialAndDailyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSelectSandMaterialAndDailyRow(SelectSandMaterialAndDailyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Sand ds = new DataSet_Sand();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectSandMaterialAndDailyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class mControlChartRow : global::System.Data.DataRow {
            
            private mControlChartDataTable tablemControlChart;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal mControlChartRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemControlChart = ((mControlChartDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int x_ {
                get {
                    return ((int)(this[this.tablemControlChart.x_Column]));
                }
                set {
                    this[this.tablemControlChart.x_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xParameterName {
                get {
                    try {
                        return ((string)(this[this.tablemControlChart.xParameterNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xParameterName\' in table \'mControlChart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemControlChart.xParameterNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xAverage {
                get {
                    try {
                        return ((decimal)(this[this.tablemControlChart.xAverageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAverage\' in table \'mControlChart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemControlChart.xAverageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xHigh {
                get {
                    try {
                        return ((decimal)(this[this.tablemControlChart.xHighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xHigh\' in table \'mControlChart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemControlChart.xHighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xLow {
                get {
                    try {
                        return ((decimal)(this[this.tablemControlChart.xLowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xLow\' in table \'mControlChart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemControlChart.xLowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xParamNameUn {
                get {
                    try {
                        return ((string)(this[this.tablemControlChart.xParamNameUnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xParamNameUn\' in table \'mControlChart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemControlChart.xParamNameUnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxParameterNameNull() {
                return this.IsNull(this.tablemControlChart.xParameterNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxParameterNameNull() {
                this[this.tablemControlChart.xParameterNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAverageNull() {
                return this.IsNull(this.tablemControlChart.xAverageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAverageNull() {
                this[this.tablemControlChart.xAverageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxHighNull() {
                return this.IsNull(this.tablemControlChart.xHighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxHighNull() {
                this[this.tablemControlChart.xHighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxLowNull() {
                return this.IsNull(this.tablemControlChart.xLowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxLowNull() {
                this[this.tablemControlChart.xLowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxParamNameUnNull() {
                return this.IsNull(this.tablemControlChart.xParamNameUnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxParamNameUnNull() {
                this[this.tablemControlChart.xParamNameUnColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class mSandControlChartRow : global::System.Data.DataRow {
            
            private mSandControlChartDataTable tablemSandControlChart;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal mSandControlChartRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemSandControlChart = ((mSandControlChartDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int x_ {
                get {
                    return ((int)(this[this.tablemSandControlChart.x_Column]));
                }
                set {
                    this[this.tablemSandControlChart.x_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xParameterName {
                get {
                    try {
                        return ((string)(this[this.tablemSandControlChart.xParameterNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xParameterName\' in table \'mSandControlChart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandControlChart.xParameterNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xAverage {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandControlChart.xAverageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAverage\' in table \'mSandControlChart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandControlChart.xAverageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xHigh {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandControlChart.xHighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xHigh\' in table \'mSandControlChart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandControlChart.xHighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xLow {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandControlChart.xLowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xLow\' in table \'mSandControlChart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandControlChart.xLowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xParamNameUn {
                get {
                    try {
                        return ((string)(this[this.tablemSandControlChart.xParamNameUnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xParamNameUn\' in table \'mSandControlChart\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandControlChart.xParamNameUnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxParameterNameNull() {
                return this.IsNull(this.tablemSandControlChart.xParameterNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxParameterNameNull() {
                this[this.tablemSandControlChart.xParameterNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAverageNull() {
                return this.IsNull(this.tablemSandControlChart.xAverageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAverageNull() {
                this[this.tablemSandControlChart.xAverageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxHighNull() {
                return this.IsNull(this.tablemSandControlChart.xHighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxHighNull() {
                this[this.tablemSandControlChart.xHighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxLowNull() {
                return this.IsNull(this.tablemSandControlChart.xLowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxLowNull() {
                this[this.tablemSandControlChart.xLowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxParamNameUnNull() {
                return this.IsNull(this.tablemSandControlChart.xParamNameUnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxParamNameUnNull() {
                this[this.tablemSandControlChart.xParamNameUnColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SelectSandReportByDateRow : global::System.Data.DataRow {
            
            private SelectSandReportByDateDataTable tableSelectSandReportByDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectSandReportByDateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelectSandReportByDate = ((SelectSandReportByDateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDate {
                get {
                    try {
                        return ((string)(this[this.tableSelectSandReportByDate.xDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDate\' in table \'SelectSandReportByDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandReportByDate.xDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xMoisturePercent {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandReportByDate.xMoisturePercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xMoisturePercent\' in table \'SelectSandReportByDate\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSelectSandReportByDate.xMoisturePercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int xPermeability {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandReportByDate.xPermeabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xPermeability\' in table \'SelectSandReportByDate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSelectSandReportByDate.xPermeabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xCompresiveStrength {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandReportByDate.xCompresiveStrengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xCompresiveStrength\' in table \'SelectSandReportByDate\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandReportByDate.xCompresiveStrengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int xCompactibility {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandReportByDate.xCompactibilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xCompactibility\' in table \'SelectSandReportByDate\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSelectSandReportByDate.xCompactibilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDateNull() {
                return this.IsNull(this.tableSelectSandReportByDate.xDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDateNull() {
                this[this.tableSelectSandReportByDate.xDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxMoisturePercentNull() {
                return this.IsNull(this.tableSelectSandReportByDate.xMoisturePercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxMoisturePercentNull() {
                this[this.tableSelectSandReportByDate.xMoisturePercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxPermeabilityNull() {
                return this.IsNull(this.tableSelectSandReportByDate.xPermeabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxPermeabilityNull() {
                this[this.tableSelectSandReportByDate.xPermeabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxCompresiveStrengthNull() {
                return this.IsNull(this.tableSelectSandReportByDate.xCompresiveStrengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxCompresiveStrengthNull() {
                this[this.tableSelectSandReportByDate.xCompresiveStrengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxCompactibilityNull() {
                return this.IsNull(this.tableSelectSandReportByDate.xCompactibilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxCompactibilityNull() {
                this[this.tableSelectSandReportByDate.xCompactibilityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class mSandSieveValueRow : global::System.Data.DataRow {
            
            private mSandSieveValueDataTable tablemSandSieveValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal mSandSieveValueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemSandSieveValue = ((mSandSieveValueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int x_ {
                get {
                    return ((int)(this[this.tablemSandSieveValue.x_Column]));
                }
                set {
                    this[this.tablemSandSieveValue.x_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDiameter11 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xDiameter11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameter11\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xDiameter11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDiameter10 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xDiameter10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameter10\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xDiameter10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDiameter9 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xDiameter9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameter9\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xDiameter9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDiameter8 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xDiameter8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameter8\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xDiameter8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDiameter7 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xDiameter7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameter7\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xDiameter7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDiameter6 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xDiameter6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameter6\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xDiameter6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDiameter5 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xDiameter5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameter5\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xDiameter5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDiameter4 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xDiameter4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameter4\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xDiameter4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDiameter3 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xDiameter3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameter3\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xDiameter3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDiameter2 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xDiameter2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameter2\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xDiameter2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDiameter1 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xDiameter1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameter1\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xDiameter1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xAstm11 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xAstm11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAstm11\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xAstm11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xAstm10 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xAstm10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAstm10\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xAstm10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xAstm9 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xAstm9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAstm9\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xAstm9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xAstm8 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xAstm8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAstm8\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xAstm8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xAstm7 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xAstm7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAstm7\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xAstm7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xAstm6 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xAstm6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAstm6\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xAstm6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xAstm5 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xAstm5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAstm5\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xAstm5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xAstm4 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xAstm4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAstm4\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xAstm4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xAstm3 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xAstm3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAstm3\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xAstm3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xAstm2 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xAstm2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAstm2\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xAstm2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xAstm1 {
                get {
                    try {
                        return ((string)(this[this.tablemSandSieveValue.xAstm1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAstm1\' in table \'mSandSieveValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandSieveValue.xAstm1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameter11Null() {
                return this.IsNull(this.tablemSandSieveValue.xDiameter11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameter11Null() {
                this[this.tablemSandSieveValue.xDiameter11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameter10Null() {
                return this.IsNull(this.tablemSandSieveValue.xDiameter10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameter10Null() {
                this[this.tablemSandSieveValue.xDiameter10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameter9Null() {
                return this.IsNull(this.tablemSandSieveValue.xDiameter9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameter9Null() {
                this[this.tablemSandSieveValue.xDiameter9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameter8Null() {
                return this.IsNull(this.tablemSandSieveValue.xDiameter8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameter8Null() {
                this[this.tablemSandSieveValue.xDiameter8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameter7Null() {
                return this.IsNull(this.tablemSandSieveValue.xDiameter7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameter7Null() {
                this[this.tablemSandSieveValue.xDiameter7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameter6Null() {
                return this.IsNull(this.tablemSandSieveValue.xDiameter6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameter6Null() {
                this[this.tablemSandSieveValue.xDiameter6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameter5Null() {
                return this.IsNull(this.tablemSandSieveValue.xDiameter5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameter5Null() {
                this[this.tablemSandSieveValue.xDiameter5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameter4Null() {
                return this.IsNull(this.tablemSandSieveValue.xDiameter4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameter4Null() {
                this[this.tablemSandSieveValue.xDiameter4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameter3Null() {
                return this.IsNull(this.tablemSandSieveValue.xDiameter3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameter3Null() {
                this[this.tablemSandSieveValue.xDiameter3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameter2Null() {
                return this.IsNull(this.tablemSandSieveValue.xDiameter2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameter2Null() {
                this[this.tablemSandSieveValue.xDiameter2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameter1Null() {
                return this.IsNull(this.tablemSandSieveValue.xDiameter1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameter1Null() {
                this[this.tablemSandSieveValue.xDiameter1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAstm11Null() {
                return this.IsNull(this.tablemSandSieveValue.xAstm11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAstm11Null() {
                this[this.tablemSandSieveValue.xAstm11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAstm10Null() {
                return this.IsNull(this.tablemSandSieveValue.xAstm10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAstm10Null() {
                this[this.tablemSandSieveValue.xAstm10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAstm9Null() {
                return this.IsNull(this.tablemSandSieveValue.xAstm9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAstm9Null() {
                this[this.tablemSandSieveValue.xAstm9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAstm8Null() {
                return this.IsNull(this.tablemSandSieveValue.xAstm8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAstm8Null() {
                this[this.tablemSandSieveValue.xAstm8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAstm7Null() {
                return this.IsNull(this.tablemSandSieveValue.xAstm7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAstm7Null() {
                this[this.tablemSandSieveValue.xAstm7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAstm6Null() {
                return this.IsNull(this.tablemSandSieveValue.xAstm6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAstm6Null() {
                this[this.tablemSandSieveValue.xAstm6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAstm5Null() {
                return this.IsNull(this.tablemSandSieveValue.xAstm5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAstm5Null() {
                this[this.tablemSandSieveValue.xAstm5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAstm4Null() {
                return this.IsNull(this.tablemSandSieveValue.xAstm4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAstm4Null() {
                this[this.tablemSandSieveValue.xAstm4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAstm3Null() {
                return this.IsNull(this.tablemSandSieveValue.xAstm3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAstm3Null() {
                this[this.tablemSandSieveValue.xAstm3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAstm2Null() {
                return this.IsNull(this.tablemSandSieveValue.xAstm2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAstm2Null() {
                this[this.tablemSandSieveValue.xAstm2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAstm1Null() {
                return this.IsNull(this.tablemSandSieveValue.xAstm1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAstm1Null() {
                this[this.tablemSandSieveValue.xAstm1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class mSandWeeklyTestRow : global::System.Data.DataRow {
            
            private mSandWeeklyTestDataTable tablemSandWeeklyTest;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal mSandWeeklyTestRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemSandWeeklyTest = ((mSandWeeklyTestDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int x_ {
                get {
                    return ((int)(this[this.tablemSandWeeklyTest.x_Column]));
                }
                set {
                    this[this.tablemSandWeeklyTest.x_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDate {
                get {
                    try {
                        return ((string)(this[this.tablemSandWeeklyTest.xDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDate\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterBefore11 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterBefore11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterBefore11\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterBefore11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterBefore10 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterBefore10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterBefore10\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterBefore10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterBefore9 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterBefore9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterBefore9\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterBefore9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterBefore8 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterBefore8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterBefore8\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterBefore8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterBefore7 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterBefore7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterBefore7\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterBefore7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterBefore6 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterBefore6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterBefore6\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterBefore6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterBefore5 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterBefore5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterBefore5\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterBefore5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterBefore4 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterBefore4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterBefore4\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterBefore4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterBefore3 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterBefore3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterBefore3\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterBefore3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterBefore2 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterBefore2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterBefore2\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterBefore2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterBefore1 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterBefore1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterBefore1\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterBefore1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterAfter11 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterAfter11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterAfter11\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterAfter11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterAfter10 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterAfter10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterAfter10\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterAfter10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterAfter9 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterAfter9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterAfter9\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterAfter9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterAfter8 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterAfter8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterAfter8\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterAfter8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterAfter7 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterAfter7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterAfter7\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterAfter7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterAfter6 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterAfter6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterAfter6\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterAfter6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterAfter5 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterAfter5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterAfter5\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterAfter5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterAfter4 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterAfter4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterAfter4\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterAfter4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterAfter3 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterAfter3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterAfter3\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterAfter3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterAfter2 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterAfter2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterAfter2\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterAfter2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xDiameterAfter1 {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xDiameterAfter1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDiameterAfter1\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xDiameterAfter1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xAfsBefore {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xAfsBeforeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAfsBefore\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xAfsBeforeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xAfsAfter {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xAfsAfterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xAfsAfter\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xAfsAfterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xVolatilePercent {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xVolatilePercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xVolatilePercent\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xVolatilePercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xBurningPercent {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xBurningPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xBurningPercent\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xBurningPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xGlayPercent {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xGlayPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xGlayPercent\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xGlayPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xActiveBentnitePercent {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xActiveBentnitePercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xActiveBentnitePercent\' in table \'mSandWeeklyTest\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xActiveBentnitePercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xPermeability {
                get {
                    try {
                        return ((decimal)(this[this.tablemSandWeeklyTest.xPermeabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xPermeability\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xPermeabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int xApprove_ {
                get {
                    try {
                        return ((int)(this[this.tablemSandWeeklyTest.xApprove_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xApprove_\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xApprove_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int xSupplier_ {
                get {
                    try {
                        return ((int)(this[this.tablemSandWeeklyTest.xSupplier_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xSupplier_\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xSupplier_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xComment {
                get {
                    try {
                        return ((string)(this[this.tablemSandWeeklyTest.xCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xComment\' in table \'mSandWeeklyTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemSandWeeklyTest.xCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int xGenGroup_ {
                get {
                    return ((int)(this[this.tablemSandWeeklyTest.xGenGroup_Column]));
                }
                set {
                    this[this.tablemSandWeeklyTest.xGenGroup_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDateNull() {
                return this.IsNull(this.tablemSandWeeklyTest.xDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDateNull() {
                this[this.tablemSandWeeklyTest.xDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterBefore11Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterBefore11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterBefore11Null() {
                this[this.tablemSandWeeklyTest.xDiameterBefore11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterBefore10Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterBefore10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterBefore10Null() {
                this[this.tablemSandWeeklyTest.xDiameterBefore10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterBefore9Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterBefore9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterBefore9Null() {
                this[this.tablemSandWeeklyTest.xDiameterBefore9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterBefore8Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterBefore8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterBefore8Null() {
                this[this.tablemSandWeeklyTest.xDiameterBefore8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterBefore7Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterBefore7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterBefore7Null() {
                this[this.tablemSandWeeklyTest.xDiameterBefore7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterBefore6Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterBefore6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterBefore6Null() {
                this[this.tablemSandWeeklyTest.xDiameterBefore6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterBefore5Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterBefore5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterBefore5Null() {
                this[this.tablemSandWeeklyTest.xDiameterBefore5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterBefore4Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterBefore4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterBefore4Null() {
                this[this.tablemSandWeeklyTest.xDiameterBefore4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterBefore3Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterBefore3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterBefore3Null() {
                this[this.tablemSandWeeklyTest.xDiameterBefore3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterBefore2Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterBefore2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterBefore2Null() {
                this[this.tablemSandWeeklyTest.xDiameterBefore2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterBefore1Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterBefore1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterBefore1Null() {
                this[this.tablemSandWeeklyTest.xDiameterBefore1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterAfter11Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterAfter11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterAfter11Null() {
                this[this.tablemSandWeeklyTest.xDiameterAfter11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterAfter10Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterAfter10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterAfter10Null() {
                this[this.tablemSandWeeklyTest.xDiameterAfter10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterAfter9Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterAfter9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterAfter9Null() {
                this[this.tablemSandWeeklyTest.xDiameterAfter9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterAfter8Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterAfter8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterAfter8Null() {
                this[this.tablemSandWeeklyTest.xDiameterAfter8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterAfter7Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterAfter7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterAfter7Null() {
                this[this.tablemSandWeeklyTest.xDiameterAfter7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterAfter6Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterAfter6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterAfter6Null() {
                this[this.tablemSandWeeklyTest.xDiameterAfter6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterAfter5Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterAfter5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterAfter5Null() {
                this[this.tablemSandWeeklyTest.xDiameterAfter5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterAfter4Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterAfter4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterAfter4Null() {
                this[this.tablemSandWeeklyTest.xDiameterAfter4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterAfter3Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterAfter3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterAfter3Null() {
                this[this.tablemSandWeeklyTest.xDiameterAfter3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterAfter2Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterAfter2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterAfter2Null() {
                this[this.tablemSandWeeklyTest.xDiameterAfter2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDiameterAfter1Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xDiameterAfter1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDiameterAfter1Null() {
                this[this.tablemSandWeeklyTest.xDiameterAfter1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAfsBeforeNull() {
                return this.IsNull(this.tablemSandWeeklyTest.xAfsBeforeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAfsBeforeNull() {
                this[this.tablemSandWeeklyTest.xAfsBeforeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxAfsAfterNull() {
                return this.IsNull(this.tablemSandWeeklyTest.xAfsAfterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxAfsAfterNull() {
                this[this.tablemSandWeeklyTest.xAfsAfterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxVolatilePercentNull() {
                return this.IsNull(this.tablemSandWeeklyTest.xVolatilePercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxVolatilePercentNull() {
                this[this.tablemSandWeeklyTest.xVolatilePercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxBurningPercentNull() {
                return this.IsNull(this.tablemSandWeeklyTest.xBurningPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxBurningPercentNull() {
                this[this.tablemSandWeeklyTest.xBurningPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxGlayPercentNull() {
                return this.IsNull(this.tablemSandWeeklyTest.xGlayPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxGlayPercentNull() {
                this[this.tablemSandWeeklyTest.xGlayPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxActiveBentnitePercentNull() {
                return this.IsNull(this.tablemSandWeeklyTest.xActiveBentnitePercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxActiveBentnitePercentNull() {
                this[this.tablemSandWeeklyTest.xActiveBentnitePercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxPermeabilityNull() {
                return this.IsNull(this.tablemSandWeeklyTest.xPermeabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxPermeabilityNull() {
                this[this.tablemSandWeeklyTest.xPermeabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxApprove_Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xApprove_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxApprove_Null() {
                this[this.tablemSandWeeklyTest.xApprove_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxSupplier_Null() {
                return this.IsNull(this.tablemSandWeeklyTest.xSupplier_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxSupplier_Null() {
                this[this.tablemSandWeeklyTest.xSupplier_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxCommentNull() {
                return this.IsNull(this.tablemSandWeeklyTest.xCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxCommentNull() {
                this[this.tablemSandWeeklyTest.xCommentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SelectSandDailyReportRow : global::System.Data.DataRow {
            
            private SelectSandDailyReportDataTable tableSelectSandDailyReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectSandDailyReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelectSandDailyReport = ((SelectSandDailyReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDate {
                get {
                    try {
                        return ((string)(this[this.tableSelectSandDailyReport.xDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDate\' in table \'SelectSandDailyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandDailyReport.xDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShiftName {
                get {
                    try {
                        return ((string)(this[this.tableSelectSandDailyReport.ShiftNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShiftName\' in table \'SelectSandDailyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandDailyReport.ShiftNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xPiecesLine1 {
                get {
                    try {
                        return ((string)(this[this.tableSelectSandDailyReport.xPiecesLine1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xPiecesLine1\' in table \'SelectSandDailyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandDailyReport.xPiecesLine1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xPiecesLine2 {
                get {
                    try {
                        return ((string)(this[this.tableSelectSandDailyReport.xPiecesLine2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xPiecesLine2\' in table \'SelectSandDailyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandDailyReport.xPiecesLine2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Supplier {
                get {
                    try {
                        return ((string)(this[this.tableSelectSandDailyReport.SupplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier\' in table \'SelectSandDailyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandDailyReport.SupplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xSamplingTime {
                get {
                    try {
                        return ((string)(this[this.tableSelectSandDailyReport.xSamplingTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xSamplingTime\' in table \'SelectSandDailyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandDailyReport.xSamplingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xMoisturePercent {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandDailyReport.xMoisturePercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xMoisturePercent\' in table \'SelectSandDailyReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSelectSandDailyReport.xMoisturePercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int xPermeability {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandDailyReport.xPermeabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xPermeability\' in table \'SelectSandDailyReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandDailyReport.xPermeabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xCompresiveStrength {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandDailyReport.xCompresiveStrengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xCompresiveStrength\' in table \'SelectSandDailyReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSelectSandDailyReport.xCompresiveStrengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int xCompactibility {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandDailyReport.xCompactibilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xCompactibility\' in table \'SelectSandDailyReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSelectSandDailyReport.xCompactibilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDateNull() {
                return this.IsNull(this.tableSelectSandDailyReport.xDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDateNull() {
                this[this.tableSelectSandDailyReport.xDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShiftNameNull() {
                return this.IsNull(this.tableSelectSandDailyReport.ShiftNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShiftNameNull() {
                this[this.tableSelectSandDailyReport.ShiftNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxPiecesLine1Null() {
                return this.IsNull(this.tableSelectSandDailyReport.xPiecesLine1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxPiecesLine1Null() {
                this[this.tableSelectSandDailyReport.xPiecesLine1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxPiecesLine2Null() {
                return this.IsNull(this.tableSelectSandDailyReport.xPiecesLine2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxPiecesLine2Null() {
                this[this.tableSelectSandDailyReport.xPiecesLine2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierNull() {
                return this.IsNull(this.tableSelectSandDailyReport.SupplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierNull() {
                this[this.tableSelectSandDailyReport.SupplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxSamplingTimeNull() {
                return this.IsNull(this.tableSelectSandDailyReport.xSamplingTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxSamplingTimeNull() {
                this[this.tableSelectSandDailyReport.xSamplingTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxMoisturePercentNull() {
                return this.IsNull(this.tableSelectSandDailyReport.xMoisturePercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxMoisturePercentNull() {
                this[this.tableSelectSandDailyReport.xMoisturePercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxPermeabilityNull() {
                return this.IsNull(this.tableSelectSandDailyReport.xPermeabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxPermeabilityNull() {
                this[this.tableSelectSandDailyReport.xPermeabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxCompresiveStrengthNull() {
                return this.IsNull(this.tableSelectSandDailyReport.xCompresiveStrengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxCompresiveStrengthNull() {
                this[this.tableSelectSandDailyReport.xCompresiveStrengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxCompactibilityNull() {
                return this.IsNull(this.tableSelectSandDailyReport.xCompactibilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxCompactibilityNull() {
                this[this.tableSelectSandDailyReport.xCompactibilityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SelectSandMaterialUsageSumAVGByDateRow : global::System.Data.DataRow {
            
            private SelectSandMaterialUsageSumAVGByDateDataTable tableSelectSandMaterialUsageSumAVGByDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectSandMaterialUsageSumAVGByDateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelectSandMaterialUsageSumAVGByDate = ((SelectSandMaterialUsageSumAVGByDateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Bantonit {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandMaterialUsageSumAVGByDate.BantonitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bantonit\' in table \'SelectSandMaterialUsageSumAVGByDate\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialUsageSumAVGByDate.BantonitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SandNew {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandMaterialUsageSumAVGByDate.SandNewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SandNew\' in table \'SelectSandMaterialUsageSumAVGByDate\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialUsageSumAVGByDate.SandNewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CoalDust {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandMaterialUsageSumAVGByDate.CoalDustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoalDust\' in table \'SelectSandMaterialUsageSumAVGByDate\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialUsageSumAVGByDate.CoalDustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Water {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandMaterialUsageSumAVGByDate.WaterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Water\' in table \'SelectSandMaterialUsageSumAVGByDate\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialUsageSumAVGByDate.WaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SandReturn {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandMaterialUsageSumAVGByDate.SandReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SandReturn\' in table \'SelectSandMaterialUsageSumAVGByDate\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialUsageSumAVGByDate.SandReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BatchCount {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandMaterialUsageSumAVGByDate.BatchCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchCount\' in table \'SelectSandMaterialUsageSumAVGByDate\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialUsageSumAVGByDate.BatchCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVGBantonit {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGBantonitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGBantonit\' in table \'SelectSandMaterialUsageSumAVGByDate\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGBantonitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVGSandNew {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGSandNewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGSandNew\' in table \'SelectSandMaterialUsageSumAVGByDate\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGSandNewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVGCoalDust {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGCoalDustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGCoalDust\' in table \'SelectSandMaterialUsageSumAVGByDate\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGCoalDustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVGWater {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGWaterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGWater\' in table \'SelectSandMaterialUsageSumAVGByDate\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGWaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVGSandReturn {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGSandReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGSandReturn\' in table \'SelectSandMaterialUsageSumAVGByDat" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGSandReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBantonitNull() {
                return this.IsNull(this.tableSelectSandMaterialUsageSumAVGByDate.BantonitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBantonitNull() {
                this[this.tableSelectSandMaterialUsageSumAVGByDate.BantonitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSandNewNull() {
                return this.IsNull(this.tableSelectSandMaterialUsageSumAVGByDate.SandNewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSandNewNull() {
                this[this.tableSelectSandMaterialUsageSumAVGByDate.SandNewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoalDustNull() {
                return this.IsNull(this.tableSelectSandMaterialUsageSumAVGByDate.CoalDustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoalDustNull() {
                this[this.tableSelectSandMaterialUsageSumAVGByDate.CoalDustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWaterNull() {
                return this.IsNull(this.tableSelectSandMaterialUsageSumAVGByDate.WaterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWaterNull() {
                this[this.tableSelectSandMaterialUsageSumAVGByDate.WaterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSandReturnNull() {
                return this.IsNull(this.tableSelectSandMaterialUsageSumAVGByDate.SandReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSandReturnNull() {
                this[this.tableSelectSandMaterialUsageSumAVGByDate.SandReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBatchCountNull() {
                return this.IsNull(this.tableSelectSandMaterialUsageSumAVGByDate.BatchCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBatchCountNull() {
                this[this.tableSelectSandMaterialUsageSumAVGByDate.BatchCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVGBantonitNull() {
                return this.IsNull(this.tableSelectSandMaterialUsageSumAVGByDate.AVGBantonitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVGBantonitNull() {
                this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGBantonitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVGSandNewNull() {
                return this.IsNull(this.tableSelectSandMaterialUsageSumAVGByDate.AVGSandNewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVGSandNewNull() {
                this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGSandNewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVGCoalDustNull() {
                return this.IsNull(this.tableSelectSandMaterialUsageSumAVGByDate.AVGCoalDustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVGCoalDustNull() {
                this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGCoalDustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVGWaterNull() {
                return this.IsNull(this.tableSelectSandMaterialUsageSumAVGByDate.AVGWaterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVGWaterNull() {
                this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGWaterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVGSandReturnNull() {
                return this.IsNull(this.tableSelectSandMaterialUsageSumAVGByDate.AVGSandReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVGSandReturnNull() {
                this[this.tableSelectSandMaterialUsageSumAVGByDate.AVGSandReturnColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SelectSandMaterialAndDailyRow : global::System.Data.DataRow {
            
            private SelectSandMaterialAndDailyDataTable tableSelectSandMaterialAndDaily;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectSandMaterialAndDailyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelectSandMaterialAndDaily = ((SelectSandMaterialAndDailyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int x_ {
                get {
                    return ((int)(this[this.tableSelectSandMaterialAndDaily.x_Column]));
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.x_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xDate {
                get {
                    try {
                        return ((string)(this[this.tableSelectSandMaterialAndDaily.xDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xDate\' in table \'SelectSandMaterialAndDaily\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.xDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string shift {
                get {
                    try {
                        return ((string)(this[this.tableSelectSandMaterialAndDaily.shiftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shift\' in table \'SelectSandMaterialAndDaily\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.shiftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BatchCount {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandMaterialAndDaily.BatchCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchCount\' in table \'SelectSandMaterialAndDaily\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.BatchCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Bantonit {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandMaterialAndDaily.BantonitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bantonit\' in table \'SelectSandMaterialAndDaily\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.BantonitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SandNew {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandMaterialAndDaily.SandNewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SandNew\' in table \'SelectSandMaterialAndDaily\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.SandNewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CoalDust {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandMaterialAndDaily.CoalDustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoalDust\' in table \'SelectSandMaterialAndDaily\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.CoalDustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Water {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandMaterialAndDaily.WaterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Water\' in table \'SelectSandMaterialAndDaily\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.WaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SandReturn {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandMaterialAndDaily.SandReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SandReturn\' in table \'SelectSandMaterialAndDaily\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.SandReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVGBantonit {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandMaterialAndDaily.AVGBantonitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGBantonit\' in table \'SelectSandMaterialAndDaily\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.AVGBantonitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVGSandNew {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandMaterialAndDaily.AVGSandNewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGSandNew\' in table \'SelectSandMaterialAndDaily\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.AVGSandNewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVGCoalDust {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandMaterialAndDaily.AVGCoalDustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGCoalDust\' in table \'SelectSandMaterialAndDaily\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.AVGCoalDustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVGWater {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandMaterialAndDaily.AVGWaterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGWater\' in table \'SelectSandMaterialAndDaily\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.AVGWaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVGSandReturn {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandMaterialAndDaily.AVGSandReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGSandReturn\' in table \'SelectSandMaterialAndDaily\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.AVGSandReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AVGPermeability {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandMaterialAndDaily.AVGPermeabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGPermeability\' in table \'SelectSandMaterialAndDaily\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.AVGPermeabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AVGCompactibility {
                get {
                    try {
                        return ((int)(this[this.tableSelectSandMaterialAndDaily.AVGCompactibilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGCompactibility\' in table \'SelectSandMaterialAndDaily\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.AVGCompactibilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVGCompresiveStrength {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandMaterialAndDaily.AVGCompresiveStrengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGCompresiveStrength\' in table \'SelectSandMaterialAndDaily" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.AVGCompresiveStrengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVGMoisturePercent {
                get {
                    try {
                        return ((decimal)(this[this.tableSelectSandMaterialAndDaily.AVGMoisturePercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVGMoisturePercent\' in table \'SelectSandMaterialAndDaily\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectSandMaterialAndDaily.AVGMoisturePercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxDateNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.xDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxDateNull() {
                this[this.tableSelectSandMaterialAndDaily.xDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsshiftNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.shiftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetshiftNull() {
                this[this.tableSelectSandMaterialAndDaily.shiftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBatchCountNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.BatchCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBatchCountNull() {
                this[this.tableSelectSandMaterialAndDaily.BatchCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBantonitNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.BantonitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBantonitNull() {
                this[this.tableSelectSandMaterialAndDaily.BantonitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSandNewNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.SandNewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSandNewNull() {
                this[this.tableSelectSandMaterialAndDaily.SandNewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoalDustNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.CoalDustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoalDustNull() {
                this[this.tableSelectSandMaterialAndDaily.CoalDustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWaterNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.WaterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWaterNull() {
                this[this.tableSelectSandMaterialAndDaily.WaterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSandReturnNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.SandReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSandReturnNull() {
                this[this.tableSelectSandMaterialAndDaily.SandReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVGBantonitNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.AVGBantonitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVGBantonitNull() {
                this[this.tableSelectSandMaterialAndDaily.AVGBantonitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVGSandNewNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.AVGSandNewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVGSandNewNull() {
                this[this.tableSelectSandMaterialAndDaily.AVGSandNewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVGCoalDustNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.AVGCoalDustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVGCoalDustNull() {
                this[this.tableSelectSandMaterialAndDaily.AVGCoalDustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVGWaterNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.AVGWaterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVGWaterNull() {
                this[this.tableSelectSandMaterialAndDaily.AVGWaterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVGSandReturnNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.AVGSandReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVGSandReturnNull() {
                this[this.tableSelectSandMaterialAndDaily.AVGSandReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVGPermeabilityNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.AVGPermeabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVGPermeabilityNull() {
                this[this.tableSelectSandMaterialAndDaily.AVGPermeabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVGCompactibilityNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.AVGCompactibilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVGCompactibilityNull() {
                this[this.tableSelectSandMaterialAndDaily.AVGCompactibilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVGCompresiveStrengthNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.AVGCompresiveStrengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVGCompresiveStrengthNull() {
                this[this.tableSelectSandMaterialAndDaily.AVGCompresiveStrengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVGMoisturePercentNull() {
                return this.IsNull(this.tableSelectSandMaterialAndDaily.AVGMoisturePercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVGMoisturePercentNull() {
                this[this.tableSelectSandMaterialAndDaily.AVGMoisturePercentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class mControlChartRowChangeEvent : global::System.EventArgs {
            
            private mControlChartRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mControlChartRowChangeEvent(mControlChartRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mControlChartRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class mSandControlChartRowChangeEvent : global::System.EventArgs {
            
            private mSandControlChartRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandControlChartRowChangeEvent(mSandControlChartRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandControlChartRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SelectSandReportByDateRowChangeEvent : global::System.EventArgs {
            
            private SelectSandReportByDateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandReportByDateRowChangeEvent(SelectSandReportByDateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandReportByDateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class mSandSieveValueRowChangeEvent : global::System.EventArgs {
            
            private mSandSieveValueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandSieveValueRowChangeEvent(mSandSieveValueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandSieveValueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class mSandWeeklyTestRowChangeEvent : global::System.EventArgs {
            
            private mSandWeeklyTestRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandWeeklyTestRowChangeEvent(mSandWeeklyTestRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mSandWeeklyTestRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SelectSandDailyReportRowChangeEvent : global::System.EventArgs {
            
            private SelectSandDailyReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandDailyReportRowChangeEvent(SelectSandDailyReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandDailyReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SelectSandMaterialUsageSumAVGByDateRowChangeEvent : global::System.EventArgs {
            
            private SelectSandMaterialUsageSumAVGByDateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandMaterialUsageSumAVGByDateRowChangeEvent(SelectSandMaterialUsageSumAVGByDateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandMaterialUsageSumAVGByDateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SelectSandMaterialAndDailyRowChangeEvent : global::System.EventArgs {
            
            private SelectSandMaterialAndDailyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandMaterialAndDailyRowChangeEvent(SelectSandMaterialAndDailyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectSandMaterialAndDailyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DAL.DataSet_SandTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class mControlChartTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public mControlChartTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "mControlChart";
            tableMapping.ColumnMappings.Add("x_", "x_");
            tableMapping.ColumnMappings.Add("xParameterName", "xParameterName");
            tableMapping.ColumnMappings.Add("xAverage", "xAverage");
            tableMapping.ColumnMappings.Add("xHigh", "xHigh");
            tableMapping.ColumnMappings.Add("xLow", "xLow");
            tableMapping.ColumnMappings.Add("xParamNameUn", "xParamNameUn");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DAL.Properties.Settings.Default.PayazobConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        x_, xParameterName, xAverage, xHigh, xLow, xParamNameUn\r\nFROM      " +
                "      mSandControlChart\r\nWHERE      (  xParamNameUn = @xParamNameUn)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xParamNameUn", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "xParamNameUn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Sand.mControlChartDataTable dataTable, string xParamNameUn) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((xParamNameUn == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(xParamNameUn));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Sand.mControlChartDataTable GetData(string xParamNameUn) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((xParamNameUn == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(xParamNameUn));
            }
            DataSet_Sand.mControlChartDataTable dataTable = new DataSet_Sand.mControlChartDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class mSandControlChartTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public mSandControlChartTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "mSandControlChart";
            tableMapping.ColumnMappings.Add("x_", "x_");
            tableMapping.ColumnMappings.Add("xParameterName", "xParameterName");
            tableMapping.ColumnMappings.Add("xAverage", "xAverage");
            tableMapping.ColumnMappings.Add("xHigh", "xHigh");
            tableMapping.ColumnMappings.Add("xLow", "xLow");
            tableMapping.ColumnMappings.Add("xParamNameUn", "xParamNameUn");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[mSandControlChart] WHERE (([x_] = @Original_x_) AND ((@IsNull_xParameterName = 1 AND [xParameterName] IS NULL) OR ([xParameterName] = @Original_xParameterName)) AND ((@IsNull_xAverage = 1 AND [xAverage] IS NULL) OR ([xAverage] = @Original_xAverage)) AND ((@IsNull_xHigh = 1 AND [xHigh] IS NULL) OR ([xHigh] = @Original_xHigh)) AND ((@IsNull_xLow = 1 AND [xLow] IS NULL) OR ([xLow] = @Original_xLow)) AND ((@IsNull_xParamNameUn = 1 AND [xParamNameUn] IS NULL) OR ([xParamNameUn] = @Original_xParamNameUn)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_x_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "x_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xParameterName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xParameterName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xParameterName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xParameterName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAverage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAverage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAverage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "xAverage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xHigh", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xHigh", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xHigh", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "xHigh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xLow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xLow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xLow", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "xLow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xParamNameUn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xParamNameUn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xParamNameUn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xParamNameUn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[mSandControlChart] ([xParameterName], [xAverage], [xHigh], [xLow], [xParamNameUn]) VALUES (@xParameterName, @xAverage, @xHigh, @xLow, @xParamNameUn);
SELECT x_, xParameterName, xAverage, xHigh, xLow, xParamNameUn FROM mSandControlChart WHERE (x_ = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xParameterName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xParameterName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAverage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "xAverage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xHigh", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "xHigh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xLow", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "xLow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xParamNameUn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xParamNameUn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[mSandControlChart] SET [xParameterName] = @xParameterName, [xAverage] = @xAverage, [xHigh] = @xHigh, [xLow] = @xLow, [xParamNameUn] = @xParamNameUn WHERE (([x_] = @Original_x_) AND ((@IsNull_xParameterName = 1 AND [xParameterName] IS NULL) OR ([xParameterName] = @Original_xParameterName)) AND ((@IsNull_xAverage = 1 AND [xAverage] IS NULL) OR ([xAverage] = @Original_xAverage)) AND ((@IsNull_xHigh = 1 AND [xHigh] IS NULL) OR ([xHigh] = @Original_xHigh)) AND ((@IsNull_xLow = 1 AND [xLow] IS NULL) OR ([xLow] = @Original_xLow)) AND ((@IsNull_xParamNameUn = 1 AND [xParamNameUn] IS NULL) OR ([xParamNameUn] = @Original_xParamNameUn)));
SELECT x_, xParameterName, xAverage, xHigh, xLow, xParamNameUn FROM mSandControlChart WHERE (x_ = @x_)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xParameterName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xParameterName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAverage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "xAverage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xHigh", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "xHigh", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xLow", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "xLow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xParamNameUn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xParamNameUn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_x_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "x_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xParameterName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xParameterName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xParameterName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xParameterName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAverage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAverage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAverage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "xAverage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xHigh", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xHigh", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xHigh", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "xHigh", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xLow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xLow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xLow", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "xLow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xParamNameUn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xParamNameUn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xParamNameUn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xParamNameUn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@x_", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "x_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DAL.Properties.Settings.Default.PayazobConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT x_, xParameterName, xAverage, xHigh, xLow, xParamNameUn FROM dbo.mSandCont" +
                "rolChart";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Sand.mSandControlChartDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Sand.mSandControlChartDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Sand.mSandControlChartDataTable dataTable = new DataSet_Sand.mSandControlChartDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_Sand.mSandControlChartDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_Sand dataSet) {
            return this.Adapter.Update(dataSet, "mSandControlChart");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_x_, string Original_xParameterName, global::System.Nullable<decimal> Original_xAverage, global::System.Nullable<decimal> Original_xHigh, global::System.Nullable<decimal> Original_xLow, string Original_xParamNameUn) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_x_));
            if ((Original_xParameterName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_xParameterName));
            }
            if ((Original_xAverage.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_xAverage.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_xHigh.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_xHigh.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_xLow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_xLow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_xParamNameUn == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_xParamNameUn));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string xParameterName, global::System.Nullable<decimal> xAverage, global::System.Nullable<decimal> xHigh, global::System.Nullable<decimal> xLow, string xParamNameUn) {
            if ((xParameterName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(xParameterName));
            }
            if ((xAverage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(xAverage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((xHigh.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(xHigh.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((xLow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(xLow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((xParamNameUn == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(xParamNameUn));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string xParameterName, global::System.Nullable<decimal> xAverage, global::System.Nullable<decimal> xHigh, global::System.Nullable<decimal> xLow, string xParamNameUn, int Original_x_, string Original_xParameterName, global::System.Nullable<decimal> Original_xAverage, global::System.Nullable<decimal> Original_xHigh, global::System.Nullable<decimal> Original_xLow, string Original_xParamNameUn, int x_) {
            if ((xParameterName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(xParameterName));
            }
            if ((xAverage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(xAverage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((xHigh.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(xHigh.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((xLow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(xLow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((xParamNameUn == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(xParamNameUn));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_x_));
            if ((Original_xParameterName == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_xParameterName));
            }
            if ((Original_xAverage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_xAverage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_xHigh.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_xHigh.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_xLow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_xLow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_xParamNameUn == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_xParamNameUn));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(x_));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string xParameterName, global::System.Nullable<decimal> xAverage, global::System.Nullable<decimal> xHigh, global::System.Nullable<decimal> xLow, string xParamNameUn, int Original_x_, string Original_xParameterName, global::System.Nullable<decimal> Original_xAverage, global::System.Nullable<decimal> Original_xHigh, global::System.Nullable<decimal> Original_xLow, string Original_xParamNameUn) {
            return this.Update(xParameterName, xAverage, xHigh, xLow, xParamNameUn, Original_x_, Original_xParameterName, Original_xAverage, Original_xHigh, Original_xLow, Original_xParamNameUn, Original_x_);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SelectSandReportByDateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SelectSandReportByDateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SelectSandReportByDate";
            tableMapping.ColumnMappings.Add("xDate", "xDate");
            tableMapping.ColumnMappings.Add("xMoisturePercent", "xMoisturePercent");
            tableMapping.ColumnMappings.Add("xPermeability", "xPermeability");
            tableMapping.ColumnMappings.Add("xCompresiveStrength", "xCompresiveStrength");
            tableMapping.ColumnMappings.Add("xCompactibility", "xCompactibility");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DAL.Properties.Settings.Default.PayazobConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SelectSandReportByDate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateFrom", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateTo", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Sand.SelectSandReportByDateDataTable dataTable, string DateFrom, string DateTo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DateFrom == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(DateFrom));
            }
            if ((DateTo == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DateTo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Sand.SelectSandReportByDateDataTable GetData(string DateFrom, string DateTo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DateFrom == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(DateFrom));
            }
            if ((DateTo == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DateTo));
            }
            DataSet_Sand.SelectSandReportByDateDataTable dataTable = new DataSet_Sand.SelectSandReportByDateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class mSandSieveValueTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public mSandSieveValueTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "mSandSieveValue";
            tableMapping.ColumnMappings.Add("x_", "x_");
            tableMapping.ColumnMappings.Add("xDiameter11", "xDiameter11");
            tableMapping.ColumnMappings.Add("xDiameter10", "xDiameter10");
            tableMapping.ColumnMappings.Add("xDiameter9", "xDiameter9");
            tableMapping.ColumnMappings.Add("xDiameter8", "xDiameter8");
            tableMapping.ColumnMappings.Add("xDiameter7", "xDiameter7");
            tableMapping.ColumnMappings.Add("xDiameter6", "xDiameter6");
            tableMapping.ColumnMappings.Add("xDiameter5", "xDiameter5");
            tableMapping.ColumnMappings.Add("xDiameter4", "xDiameter4");
            tableMapping.ColumnMappings.Add("xDiameter3", "xDiameter3");
            tableMapping.ColumnMappings.Add("xDiameter2", "xDiameter2");
            tableMapping.ColumnMappings.Add("xDiameter1", "xDiameter1");
            tableMapping.ColumnMappings.Add("xAstm11", "xAstm11");
            tableMapping.ColumnMappings.Add("xAstm10", "xAstm10");
            tableMapping.ColumnMappings.Add("xAstm9", "xAstm9");
            tableMapping.ColumnMappings.Add("xAstm8", "xAstm8");
            tableMapping.ColumnMappings.Add("xAstm7", "xAstm7");
            tableMapping.ColumnMappings.Add("xAstm6", "xAstm6");
            tableMapping.ColumnMappings.Add("xAstm5", "xAstm5");
            tableMapping.ColumnMappings.Add("xAstm4", "xAstm4");
            tableMapping.ColumnMappings.Add("xAstm3", "xAstm3");
            tableMapping.ColumnMappings.Add("xAstm2", "xAstm2");
            tableMapping.ColumnMappings.Add("xAstm1", "xAstm1");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[mSandSieveValue] WHERE (([x_] = @Original_x_) AND ((@IsNull_xD" +
                "iameter11 = 1 AND [xDiameter11] IS NULL) OR ([xDiameter11] = @Original_xDiameter" +
                "11)) AND ((@IsNull_xDiameter10 = 1 AND [xDiameter10] IS NULL) OR ([xDiameter10] " +
                "= @Original_xDiameter10)) AND ((@IsNull_xDiameter9 = 1 AND [xDiameter9] IS NULL)" +
                " OR ([xDiameter9] = @Original_xDiameter9)) AND ((@IsNull_xDiameter8 = 1 AND [xDi" +
                "ameter8] IS NULL) OR ([xDiameter8] = @Original_xDiameter8)) AND ((@IsNull_xDiame" +
                "ter7 = 1 AND [xDiameter7] IS NULL) OR ([xDiameter7] = @Original_xDiameter7)) AND" +
                " ((@IsNull_xDiameter6 = 1 AND [xDiameter6] IS NULL) OR ([xDiameter6] = @Original" +
                "_xDiameter6)) AND ((@IsNull_xDiameter5 = 1 AND [xDiameter5] IS NULL) OR ([xDiame" +
                "ter5] = @Original_xDiameter5)) AND ((@IsNull_xDiameter4 = 1 AND [xDiameter4] IS " +
                "NULL) OR ([xDiameter4] = @Original_xDiameter4)) AND ((@IsNull_xDiameter3 = 1 AND" +
                " [xDiameter3] IS NULL) OR ([xDiameter3] = @Original_xDiameter3)) AND ((@IsNull_x" +
                "Diameter2 = 1 AND [xDiameter2] IS NULL) OR ([xDiameter2] = @Original_xDiameter2)" +
                ") AND ((@IsNull_xDiameter1 = 1 AND [xDiameter1] IS NULL) OR ([xDiameter1] = @Ori" +
                "ginal_xDiameter1)) AND ((@IsNull_xAstm11 = 1 AND [xAstm11] IS NULL) OR ([xAstm11" +
                "] = @Original_xAstm11)) AND ((@IsNull_xAstm10 = 1 AND [xAstm10] IS NULL) OR ([xA" +
                "stm10] = @Original_xAstm10)) AND ((@IsNull_xAstm9 = 1 AND [xAstm9] IS NULL) OR (" +
                "[xAstm9] = @Original_xAstm9)) AND ((@IsNull_xAstm8 = 1 AND [xAstm8] IS NULL) OR " +
                "([xAstm8] = @Original_xAstm8)) AND ((@IsNull_xAstm7 = 1 AND [xAstm7] IS NULL) OR" +
                " ([xAstm7] = @Original_xAstm7)) AND ((@IsNull_xAstm6 = 1 AND [xAstm6] IS NULL) O" +
                "R ([xAstm6] = @Original_xAstm6)) AND ((@IsNull_xAstm5 = 1 AND [xAstm5] IS NULL) " +
                "OR ([xAstm5] = @Original_xAstm5)) AND ((@IsNull_xAstm4 = 1 AND [xAstm4] IS NULL)" +
                " OR ([xAstm4] = @Original_xAstm4)) AND ((@IsNull_xAstm3 = 1 AND [xAstm3] IS NULL" +
                ") OR ([xAstm3] = @Original_xAstm3)) AND ((@IsNull_xAstm2 = 1 AND [xAstm2] IS NUL" +
                "L) OR ([xAstm2] = @Original_xAstm2)) AND ((@IsNull_xAstm1 = 1 AND [xAstm1] IS NU" +
                "LL) OR ([xAstm1] = @Original_xAstm1)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_x_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "x_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter11", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter10", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter9", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter8", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter7", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter6", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter5", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter4", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm11", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm10", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm9", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm8", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm7", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm6", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm5", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm4", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[mSandSieveValue] ([xDiameter11], [xDiameter10], [xDiameter9], [xDiameter8], [xDiameter7], [xDiameter6], [xDiameter5], [xDiameter4], [xDiameter3], [xDiameter2], [xDiameter1], [xAstm11], [xAstm10], [xAstm9], [xAstm8], [xAstm7], [xAstm6], [xAstm5], [xAstm4], [xAstm3], [xAstm2], [xAstm1]) VALUES (@xDiameter11, @xDiameter10, @xDiameter9, @xDiameter8, @xDiameter7, @xDiameter6, @xDiameter5, @xDiameter4, @xDiameter3, @xDiameter2, @xDiameter1, @xAstm11, @xAstm10, @xAstm9, @xAstm8, @xAstm7, @xAstm6, @xAstm5, @xAstm4, @xAstm3, @xAstm2, @xAstm1);
SELECT x_, xDiameter11, xDiameter10, xDiameter9, xDiameter8, xDiameter7, xDiameter6, xDiameter5, xDiameter4, xDiameter3, xDiameter2, xDiameter1, xAstm11, xAstm10, xAstm9, xAstm8, xAstm7, xAstm6, xAstm5, xAstm4, xAstm3, xAstm2, xAstm1 FROM mSandSieveValue WHERE (x_ = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter11", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter10", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter9", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter8", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter7", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter6", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter5", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter4", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm11", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm10", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm9", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm8", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm7", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm6", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm5", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm4", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[mSandSieveValue] SET [xDiameter11] = @xDiameter11, [xDiameter10] = " +
                "@xDiameter10, [xDiameter9] = @xDiameter9, [xDiameter8] = @xDiameter8, [xDiameter" +
                "7] = @xDiameter7, [xDiameter6] = @xDiameter6, [xDiameter5] = @xDiameter5, [xDiam" +
                "eter4] = @xDiameter4, [xDiameter3] = @xDiameter3, [xDiameter2] = @xDiameter2, [x" +
                "Diameter1] = @xDiameter1, [xAstm11] = @xAstm11, [xAstm10] = @xAstm10, [xAstm9] =" +
                " @xAstm9, [xAstm8] = @xAstm8, [xAstm7] = @xAstm7, [xAstm6] = @xAstm6, [xAstm5] =" +
                " @xAstm5, [xAstm4] = @xAstm4, [xAstm3] = @xAstm3, [xAstm2] = @xAstm2, [xAstm1] =" +
                " @xAstm1 WHERE (([x_] = @Original_x_) AND ((@IsNull_xDiameter11 = 1 AND [xDiamet" +
                "er11] IS NULL) OR ([xDiameter11] = @Original_xDiameter11)) AND ((@IsNull_xDiamet" +
                "er10 = 1 AND [xDiameter10] IS NULL) OR ([xDiameter10] = @Original_xDiameter10)) " +
                "AND ((@IsNull_xDiameter9 = 1 AND [xDiameter9] IS NULL) OR ([xDiameter9] = @Origi" +
                "nal_xDiameter9)) AND ((@IsNull_xDiameter8 = 1 AND [xDiameter8] IS NULL) OR ([xDi" +
                "ameter8] = @Original_xDiameter8)) AND ((@IsNull_xDiameter7 = 1 AND [xDiameter7] " +
                "IS NULL) OR ([xDiameter7] = @Original_xDiameter7)) AND ((@IsNull_xDiameter6 = 1 " +
                "AND [xDiameter6] IS NULL) OR ([xDiameter6] = @Original_xDiameter6)) AND ((@IsNul" +
                "l_xDiameter5 = 1 AND [xDiameter5] IS NULL) OR ([xDiameter5] = @Original_xDiamete" +
                "r5)) AND ((@IsNull_xDiameter4 = 1 AND [xDiameter4] IS NULL) OR ([xDiameter4] = @" +
                "Original_xDiameter4)) AND ((@IsNull_xDiameter3 = 1 AND [xDiameter3] IS NULL) OR " +
                "([xDiameter3] = @Original_xDiameter3)) AND ((@IsNull_xDiameter2 = 1 AND [xDiamet" +
                "er2] IS NULL) OR ([xDiameter2] = @Original_xDiameter2)) AND ((@IsNull_xDiameter1" +
                " = 1 AND [xDiameter1] IS NULL) OR ([xDiameter1] = @Original_xDiameter1)) AND ((@" +
                "IsNull_xAstm11 = 1 AND [xAstm11] IS NULL) OR ([xAstm11] = @Original_xAstm11)) AN" +
                "D ((@IsNull_xAstm10 = 1 AND [xAstm10] IS NULL) OR ([xAstm10] = @Original_xAstm10" +
                ")) AND ((@IsNull_xAstm9 = 1 AND [xAstm9] IS NULL) OR ([xAstm9] = @Original_xAstm" +
                "9)) AND ((@IsNull_xAstm8 = 1 AND [xAstm8] IS NULL) OR ([xAstm8] = @Original_xAst" +
                "m8)) AND ((@IsNull_xAstm7 = 1 AND [xAstm7] IS NULL) OR ([xAstm7] = @Original_xAs" +
                "tm7)) AND ((@IsNull_xAstm6 = 1 AND [xAstm6] IS NULL) OR ([xAstm6] = @Original_xA" +
                "stm6)) AND ((@IsNull_xAstm5 = 1 AND [xAstm5] IS NULL) OR ([xAstm5] = @Original_x" +
                "Astm5)) AND ((@IsNull_xAstm4 = 1 AND [xAstm4] IS NULL) OR ([xAstm4] = @Original_" +
                "xAstm4)) AND ((@IsNull_xAstm3 = 1 AND [xAstm3] IS NULL) OR ([xAstm3] = @Original" +
                "_xAstm3)) AND ((@IsNull_xAstm2 = 1 AND [xAstm2] IS NULL) OR ([xAstm2] = @Origina" +
                "l_xAstm2)) AND ((@IsNull_xAstm1 = 1 AND [xAstm1] IS NULL) OR ([xAstm1] = @Origin" +
                "al_xAstm1)));\r\nSELECT x_, xDiameter11, xDiameter10, xDiameter9, xDiameter8, xDia" +
                "meter7, xDiameter6, xDiameter5, xDiameter4, xDiameter3, xDiameter2, xDiameter1, " +
                "xAstm11, xAstm10, xAstm9, xAstm8, xAstm7, xAstm6, xAstm5, xAstm4, xAstm3, xAstm2" +
                ", xAstm1 FROM mSandSieveValue WHERE (x_ = @x_)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter11", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter10", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter9", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter8", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter7", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter6", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter5", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter4", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameter1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm11", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm10", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm9", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm8", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm7", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm6", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm5", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm4", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAstm1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_x_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "x_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter11", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter10", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter9", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter8", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter7", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter6", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter5", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter4", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameter1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameter1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameter1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm11", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm10", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm9", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm8", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm7", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm6", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm5", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm4", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAstm1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAstm1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAstm1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@x_", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "x_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DAL.Properties.Settings.Default.PayazobConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT x_, xDiameter11, xDiameter10, xDiameter9, xDiameter8, xDiameter7, xDiameter6, xDiameter5, xDiameter4, xDiameter3, xDiameter2, xDiameter1, xAstm11, xAstm10, xAstm9, xAstm8, xAstm7, xAstm6, xAstm5, xAstm4, xAstm3, xAstm2, xAstm1 FROM dbo.mSandSieveValue";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Sand.mSandSieveValueDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Sand.mSandSieveValueDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Sand.mSandSieveValueDataTable dataTable = new DataSet_Sand.mSandSieveValueDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_Sand.mSandSieveValueDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_Sand dataSet) {
            return this.Adapter.Update(dataSet, "mSandSieveValue");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_x_, 
                    string Original_xDiameter11, 
                    string Original_xDiameter10, 
                    string Original_xDiameter9, 
                    string Original_xDiameter8, 
                    string Original_xDiameter7, 
                    string Original_xDiameter6, 
                    string Original_xDiameter5, 
                    string Original_xDiameter4, 
                    string Original_xDiameter3, 
                    string Original_xDiameter2, 
                    string Original_xDiameter1, 
                    string Original_xAstm11, 
                    string Original_xAstm10, 
                    string Original_xAstm9, 
                    string Original_xAstm8, 
                    string Original_xAstm7, 
                    string Original_xAstm6, 
                    string Original_xAstm5, 
                    string Original_xAstm4, 
                    string Original_xAstm3, 
                    string Original_xAstm2, 
                    string Original_xAstm1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_x_));
            if ((Original_xDiameter11 == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_xDiameter11));
            }
            if ((Original_xDiameter10 == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_xDiameter10));
            }
            if ((Original_xDiameter9 == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_xDiameter9));
            }
            if ((Original_xDiameter8 == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_xDiameter8));
            }
            if ((Original_xDiameter7 == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_xDiameter7));
            }
            if ((Original_xDiameter6 == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_xDiameter6));
            }
            if ((Original_xDiameter5 == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_xDiameter5));
            }
            if ((Original_xDiameter4 == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_xDiameter4));
            }
            if ((Original_xDiameter3 == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_xDiameter3));
            }
            if ((Original_xDiameter2 == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_xDiameter2));
            }
            if ((Original_xDiameter1 == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_xDiameter1));
            }
            if ((Original_xAstm11 == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_xAstm11));
            }
            if ((Original_xAstm10 == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_xAstm10));
            }
            if ((Original_xAstm9 == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_xAstm9));
            }
            if ((Original_xAstm8 == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_xAstm8));
            }
            if ((Original_xAstm7 == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_xAstm7));
            }
            if ((Original_xAstm6 == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_xAstm6));
            }
            if ((Original_xAstm5 == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_xAstm5));
            }
            if ((Original_xAstm4 == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_xAstm4));
            }
            if ((Original_xAstm3 == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_xAstm3));
            }
            if ((Original_xAstm2 == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_xAstm2));
            }
            if ((Original_xAstm1 == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_xAstm1));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string xDiameter11, 
                    string xDiameter10, 
                    string xDiameter9, 
                    string xDiameter8, 
                    string xDiameter7, 
                    string xDiameter6, 
                    string xDiameter5, 
                    string xDiameter4, 
                    string xDiameter3, 
                    string xDiameter2, 
                    string xDiameter1, 
                    string xAstm11, 
                    string xAstm10, 
                    string xAstm9, 
                    string xAstm8, 
                    string xAstm7, 
                    string xAstm6, 
                    string xAstm5, 
                    string xAstm4, 
                    string xAstm3, 
                    string xAstm2, 
                    string xAstm1) {
            if ((xDiameter11 == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(xDiameter11));
            }
            if ((xDiameter10 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(xDiameter10));
            }
            if ((xDiameter9 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(xDiameter9));
            }
            if ((xDiameter8 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(xDiameter8));
            }
            if ((xDiameter7 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(xDiameter7));
            }
            if ((xDiameter6 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(xDiameter6));
            }
            if ((xDiameter5 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(xDiameter5));
            }
            if ((xDiameter4 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(xDiameter4));
            }
            if ((xDiameter3 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(xDiameter3));
            }
            if ((xDiameter2 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(xDiameter2));
            }
            if ((xDiameter1 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(xDiameter1));
            }
            if ((xAstm11 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(xAstm11));
            }
            if ((xAstm10 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(xAstm10));
            }
            if ((xAstm9 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(xAstm9));
            }
            if ((xAstm8 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(xAstm8));
            }
            if ((xAstm7 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(xAstm7));
            }
            if ((xAstm6 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(xAstm6));
            }
            if ((xAstm5 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(xAstm5));
            }
            if ((xAstm4 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(xAstm4));
            }
            if ((xAstm3 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(xAstm3));
            }
            if ((xAstm2 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(xAstm2));
            }
            if ((xAstm1 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(xAstm1));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string xDiameter11, 
                    string xDiameter10, 
                    string xDiameter9, 
                    string xDiameter8, 
                    string xDiameter7, 
                    string xDiameter6, 
                    string xDiameter5, 
                    string xDiameter4, 
                    string xDiameter3, 
                    string xDiameter2, 
                    string xDiameter1, 
                    string xAstm11, 
                    string xAstm10, 
                    string xAstm9, 
                    string xAstm8, 
                    string xAstm7, 
                    string xAstm6, 
                    string xAstm5, 
                    string xAstm4, 
                    string xAstm3, 
                    string xAstm2, 
                    string xAstm1, 
                    int Original_x_, 
                    string Original_xDiameter11, 
                    string Original_xDiameter10, 
                    string Original_xDiameter9, 
                    string Original_xDiameter8, 
                    string Original_xDiameter7, 
                    string Original_xDiameter6, 
                    string Original_xDiameter5, 
                    string Original_xDiameter4, 
                    string Original_xDiameter3, 
                    string Original_xDiameter2, 
                    string Original_xDiameter1, 
                    string Original_xAstm11, 
                    string Original_xAstm10, 
                    string Original_xAstm9, 
                    string Original_xAstm8, 
                    string Original_xAstm7, 
                    string Original_xAstm6, 
                    string Original_xAstm5, 
                    string Original_xAstm4, 
                    string Original_xAstm3, 
                    string Original_xAstm2, 
                    string Original_xAstm1, 
                    int x_) {
            if ((xDiameter11 == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(xDiameter11));
            }
            if ((xDiameter10 == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(xDiameter10));
            }
            if ((xDiameter9 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(xDiameter9));
            }
            if ((xDiameter8 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(xDiameter8));
            }
            if ((xDiameter7 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(xDiameter7));
            }
            if ((xDiameter6 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(xDiameter6));
            }
            if ((xDiameter5 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(xDiameter5));
            }
            if ((xDiameter4 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(xDiameter4));
            }
            if ((xDiameter3 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(xDiameter3));
            }
            if ((xDiameter2 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(xDiameter2));
            }
            if ((xDiameter1 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(xDiameter1));
            }
            if ((xAstm11 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(xAstm11));
            }
            if ((xAstm10 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(xAstm10));
            }
            if ((xAstm9 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(xAstm9));
            }
            if ((xAstm8 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(xAstm8));
            }
            if ((xAstm7 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(xAstm7));
            }
            if ((xAstm6 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(xAstm6));
            }
            if ((xAstm5 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(xAstm5));
            }
            if ((xAstm4 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(xAstm4));
            }
            if ((xAstm3 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(xAstm3));
            }
            if ((xAstm2 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(xAstm2));
            }
            if ((xAstm1 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(xAstm1));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_x_));
            if ((Original_xDiameter11 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_xDiameter11));
            }
            if ((Original_xDiameter10 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_xDiameter10));
            }
            if ((Original_xDiameter9 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_xDiameter9));
            }
            if ((Original_xDiameter8 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_xDiameter8));
            }
            if ((Original_xDiameter7 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_xDiameter7));
            }
            if ((Original_xDiameter6 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_xDiameter6));
            }
            if ((Original_xDiameter5 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_xDiameter5));
            }
            if ((Original_xDiameter4 == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_xDiameter4));
            }
            if ((Original_xDiameter3 == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_xDiameter3));
            }
            if ((Original_xDiameter2 == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_xDiameter2));
            }
            if ((Original_xDiameter1 == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_xDiameter1));
            }
            if ((Original_xAstm11 == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_xAstm11));
            }
            if ((Original_xAstm10 == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_xAstm10));
            }
            if ((Original_xAstm9 == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_xAstm9));
            }
            if ((Original_xAstm8 == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_xAstm8));
            }
            if ((Original_xAstm7 == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_xAstm7));
            }
            if ((Original_xAstm6 == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_xAstm6));
            }
            if ((Original_xAstm5 == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_xAstm5));
            }
            if ((Original_xAstm4 == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_xAstm4));
            }
            if ((Original_xAstm3 == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_xAstm3));
            }
            if ((Original_xAstm2 == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_xAstm2));
            }
            if ((Original_xAstm1 == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_xAstm1));
            }
            this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(x_));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string xDiameter11, 
                    string xDiameter10, 
                    string xDiameter9, 
                    string xDiameter8, 
                    string xDiameter7, 
                    string xDiameter6, 
                    string xDiameter5, 
                    string xDiameter4, 
                    string xDiameter3, 
                    string xDiameter2, 
                    string xDiameter1, 
                    string xAstm11, 
                    string xAstm10, 
                    string xAstm9, 
                    string xAstm8, 
                    string xAstm7, 
                    string xAstm6, 
                    string xAstm5, 
                    string xAstm4, 
                    string xAstm3, 
                    string xAstm2, 
                    string xAstm1, 
                    int Original_x_, 
                    string Original_xDiameter11, 
                    string Original_xDiameter10, 
                    string Original_xDiameter9, 
                    string Original_xDiameter8, 
                    string Original_xDiameter7, 
                    string Original_xDiameter6, 
                    string Original_xDiameter5, 
                    string Original_xDiameter4, 
                    string Original_xDiameter3, 
                    string Original_xDiameter2, 
                    string Original_xDiameter1, 
                    string Original_xAstm11, 
                    string Original_xAstm10, 
                    string Original_xAstm9, 
                    string Original_xAstm8, 
                    string Original_xAstm7, 
                    string Original_xAstm6, 
                    string Original_xAstm5, 
                    string Original_xAstm4, 
                    string Original_xAstm3, 
                    string Original_xAstm2, 
                    string Original_xAstm1) {
            return this.Update(xDiameter11, xDiameter10, xDiameter9, xDiameter8, xDiameter7, xDiameter6, xDiameter5, xDiameter4, xDiameter3, xDiameter2, xDiameter1, xAstm11, xAstm10, xAstm9, xAstm8, xAstm7, xAstm6, xAstm5, xAstm4, xAstm3, xAstm2, xAstm1, Original_x_, Original_xDiameter11, Original_xDiameter10, Original_xDiameter9, Original_xDiameter8, Original_xDiameter7, Original_xDiameter6, Original_xDiameter5, Original_xDiameter4, Original_xDiameter3, Original_xDiameter2, Original_xDiameter1, Original_xAstm11, Original_xAstm10, Original_xAstm9, Original_xAstm8, Original_xAstm7, Original_xAstm6, Original_xAstm5, Original_xAstm4, Original_xAstm3, Original_xAstm2, Original_xAstm1, Original_x_);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class mSandWeeklyTestTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public mSandWeeklyTestTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "mSandWeeklyTest";
            tableMapping.ColumnMappings.Add("x_", "x_");
            tableMapping.ColumnMappings.Add("xDate", "xDate");
            tableMapping.ColumnMappings.Add("xDiameterBefore11", "xDiameterBefore11");
            tableMapping.ColumnMappings.Add("xDiameterBefore10", "xDiameterBefore10");
            tableMapping.ColumnMappings.Add("xDiameterBefore9", "xDiameterBefore9");
            tableMapping.ColumnMappings.Add("xDiameterBefore8", "xDiameterBefore8");
            tableMapping.ColumnMappings.Add("xDiameterBefore7", "xDiameterBefore7");
            tableMapping.ColumnMappings.Add("xDiameterBefore6", "xDiameterBefore6");
            tableMapping.ColumnMappings.Add("xDiameterBefore5", "xDiameterBefore5");
            tableMapping.ColumnMappings.Add("xDiameterBefore4", "xDiameterBefore4");
            tableMapping.ColumnMappings.Add("xDiameterBefore3", "xDiameterBefore3");
            tableMapping.ColumnMappings.Add("xDiameterBefore2", "xDiameterBefore2");
            tableMapping.ColumnMappings.Add("xDiameterBefore1", "xDiameterBefore1");
            tableMapping.ColumnMappings.Add("xDiameterAfter11", "xDiameterAfter11");
            tableMapping.ColumnMappings.Add("xDiameterAfter10", "xDiameterAfter10");
            tableMapping.ColumnMappings.Add("xDiameterAfter9", "xDiameterAfter9");
            tableMapping.ColumnMappings.Add("xDiameterAfter8", "xDiameterAfter8");
            tableMapping.ColumnMappings.Add("xDiameterAfter7", "xDiameterAfter7");
            tableMapping.ColumnMappings.Add("xDiameterAfter6", "xDiameterAfter6");
            tableMapping.ColumnMappings.Add("xDiameterAfter5", "xDiameterAfter5");
            tableMapping.ColumnMappings.Add("xDiameterAfter4", "xDiameterAfter4");
            tableMapping.ColumnMappings.Add("xDiameterAfter3", "xDiameterAfter3");
            tableMapping.ColumnMappings.Add("xDiameterAfter2", "xDiameterAfter2");
            tableMapping.ColumnMappings.Add("xDiameterAfter1", "xDiameterAfter1");
            tableMapping.ColumnMappings.Add("xAfsBefore", "xAfsBefore");
            tableMapping.ColumnMappings.Add("xAfsAfter", "xAfsAfter");
            tableMapping.ColumnMappings.Add("xVolatilePercent", "xVolatilePercent");
            tableMapping.ColumnMappings.Add("xBurningPercent", "xBurningPercent");
            tableMapping.ColumnMappings.Add("xGlayPercent", "xGlayPercent");
            tableMapping.ColumnMappings.Add("xActiveBentnitePercent", "xActiveBentnitePercent");
            tableMapping.ColumnMappings.Add("xPermeability", "xPermeability");
            tableMapping.ColumnMappings.Add("xApprove_", "xApprove_");
            tableMapping.ColumnMappings.Add("xSupplier_", "xSupplier_");
            tableMapping.ColumnMappings.Add("xComment", "xComment");
            tableMapping.ColumnMappings.Add("xGenGroup_", "xGenGroup_");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [mSandWeeklyTest] WHERE (([x_] = @Original_x_) AND ((@IsNull_xDate = " +
                "1 AND [xDate] IS NULL) OR ([xDate] = @Original_xDate)) AND ((@IsNull_xDiameterBe" +
                "fore11 = 1 AND [xDiameterBefore11] IS NULL) OR ([xDiameterBefore11] = @Original_" +
                "xDiameterBefore11)) AND ((@IsNull_xDiameterBefore10 = 1 AND [xDiameterBefore10] " +
                "IS NULL) OR ([xDiameterBefore10] = @Original_xDiameterBefore10)) AND ((@IsNull_x" +
                "DiameterBefore9 = 1 AND [xDiameterBefore9] IS NULL) OR ([xDiameterBefore9] = @Or" +
                "iginal_xDiameterBefore9)) AND ((@IsNull_xDiameterBefore8 = 1 AND [xDiameterBefor" +
                "e8] IS NULL) OR ([xDiameterBefore8] = @Original_xDiameterBefore8)) AND ((@IsNull" +
                "_xDiameterBefore7 = 1 AND [xDiameterBefore7] IS NULL) OR ([xDiameterBefore7] = @" +
                "Original_xDiameterBefore7)) AND ((@IsNull_xDiameterBefore6 = 1 AND [xDiameterBef" +
                "ore6] IS NULL) OR ([xDiameterBefore6] = @Original_xDiameterBefore6)) AND ((@IsNu" +
                "ll_xDiameterBefore5 = 1 AND [xDiameterBefore5] IS NULL) OR ([xDiameterBefore5] =" +
                " @Original_xDiameterBefore5)) AND ((@IsNull_xDiameterBefore4 = 1 AND [xDiameterB" +
                "efore4] IS NULL) OR ([xDiameterBefore4] = @Original_xDiameterBefore4)) AND ((@Is" +
                "Null_xDiameterBefore3 = 1 AND [xDiameterBefore3] IS NULL) OR ([xDiameterBefore3]" +
                " = @Original_xDiameterBefore3)) AND ((@IsNull_xDiameterBefore2 = 1 AND [xDiamete" +
                "rBefore2] IS NULL) OR ([xDiameterBefore2] = @Original_xDiameterBefore2)) AND ((@" +
                "IsNull_xDiameterBefore1 = 1 AND [xDiameterBefore1] IS NULL) OR ([xDiameterBefore" +
                "1] = @Original_xDiameterBefore1)) AND ((@IsNull_xDiameterAfter11 = 1 AND [xDiame" +
                "terAfter11] IS NULL) OR ([xDiameterAfter11] = @Original_xDiameterAfter11)) AND (" +
                "(@IsNull_xDiameterAfter10 = 1 AND [xDiameterAfter10] IS NULL) OR ([xDiameterAfte" +
                "r10] = @Original_xDiameterAfter10)) AND ((@IsNull_xDiameterAfter9 = 1 AND [xDiam" +
                "eterAfter9] IS NULL) OR ([xDiameterAfter9] = @Original_xDiameterAfter9)) AND ((@" +
                "IsNull_xDiameterAfter8 = 1 AND [xDiameterAfter8] IS NULL) OR ([xDiameterAfter8] " +
                "= @Original_xDiameterAfter8)) AND ((@IsNull_xDiameterAfter7 = 1 AND [xDiameterAf" +
                "ter7] IS NULL) OR ([xDiameterAfter7] = @Original_xDiameterAfter7)) AND ((@IsNull" +
                "_xDiameterAfter6 = 1 AND [xDiameterAfter6] IS NULL) OR ([xDiameterAfter6] = @Ori" +
                "ginal_xDiameterAfter6)) AND ((@IsNull_xDiameterAfter5 = 1 AND [xDiameterAfter5] " +
                "IS NULL) OR ([xDiameterAfter5] = @Original_xDiameterAfter5)) AND ((@IsNull_xDiam" +
                "eterAfter4 = 1 AND [xDiameterAfter4] IS NULL) OR ([xDiameterAfter4] = @Original_" +
                "xDiameterAfter4)) AND ((@IsNull_xDiameterAfter3 = 1 AND [xDiameterAfter3] IS NUL" +
                "L) OR ([xDiameterAfter3] = @Original_xDiameterAfter3)) AND ((@IsNull_xDiameterAf" +
                "ter2 = 1 AND [xDiameterAfter2] IS NULL) OR ([xDiameterAfter2] = @Original_xDiame" +
                "terAfter2)) AND ((@IsNull_xDiameterAfter1 = 1 AND [xDiameterAfter1] IS NULL) OR " +
                "([xDiameterAfter1] = @Original_xDiameterAfter1)) AND ((@IsNull_xAfsBefore = 1 AN" +
                "D [xAfsBefore] IS NULL) OR ([xAfsBefore] = @Original_xAfsBefore)) AND ((@IsNull_" +
                "xAfsAfter = 1 AND [xAfsAfter] IS NULL) OR ([xAfsAfter] = @Original_xAfsAfter)) A" +
                "ND ((@IsNull_xVolatilePercent = 1 AND [xVolatilePercent] IS NULL) OR ([xVolatile" +
                "Percent] = @Original_xVolatilePercent)) AND ((@IsNull_xBurningPercent = 1 AND [x" +
                "BurningPercent] IS NULL) OR ([xBurningPercent] = @Original_xBurningPercent)) AND" +
                " ((@IsNull_xGlayPercent = 1 AND [xGlayPercent] IS NULL) OR ([xGlayPercent] = @Or" +
                "iginal_xGlayPercent)) AND ((@IsNull_xActiveBentnitePercent = 1 AND [xActiveBentn" +
                "itePercent] IS NULL) OR ([xActiveBentnitePercent] = @Original_xActiveBentnitePer" +
                "cent)) AND ((@IsNull_xPermeability = 1 AND [xPermeability] IS NULL) OR ([xPermea" +
                "bility] = @Original_xPermeability)) AND ((@IsNull_xApprove_ = 1 AND [xApprove_] " +
                "IS NULL) OR ([xApprove_] = @Original_xApprove_)) AND ((@IsNull_xSupplier_ = 1 AN" +
                "D [xSupplier_] IS NULL) OR ([xSupplier_] = @Original_xSupplier_)) AND ((@IsNull_" +
                "xComment = 1 AND [xComment] IS NULL) OR ([xComment] = @Original_xComment)) AND (" +
                "[xGenGroup_] = @Original_xGenGroup_))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_x_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "x_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDate", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore11", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore10", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore9", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore8", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore7", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter11", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter10", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter9", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter8", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter7", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAfsBefore", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAfsBefore", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAfsBefore", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xAfsBefore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAfsAfter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAfsAfter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAfsAfter", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xAfsAfter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xVolatilePercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xVolatilePercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xVolatilePercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xVolatilePercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xBurningPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xBurningPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xBurningPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xBurningPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xGlayPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xGlayPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xGlayPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xGlayPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xActiveBentnitePercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xActiveBentnitePercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xActiveBentnitePercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xActiveBentnitePercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xPermeability", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xPermeability", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xPermeability", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xPermeability", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xApprove_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xApprove_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xApprove_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xApprove_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xSupplier_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xSupplier_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xSupplier_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xSupplier_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xComment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xComment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xComment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xGenGroup_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xGenGroup_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [mSandWeeklyTest] ([xDate], [xDiameterBefore11], [xDiameterBefore10]," +
                " [xDiameterBefore9], [xDiameterBefore8], [xDiameterBefore7], [xDiameterBefore6]," +
                " [xDiameterBefore5], [xDiameterBefore4], [xDiameterBefore3], [xDiameterBefore2]," +
                " [xDiameterBefore1], [xDiameterAfter11], [xDiameterAfter10], [xDiameterAfter9], " +
                "[xDiameterAfter8], [xDiameterAfter7], [xDiameterAfter6], [xDiameterAfter5], [xDi" +
                "ameterAfter4], [xDiameterAfter3], [xDiameterAfter2], [xDiameterAfter1], [xAfsBef" +
                "ore], [xAfsAfter], [xVolatilePercent], [xBurningPercent], [xGlayPercent], [xActi" +
                "veBentnitePercent], [xPermeability], [xApprove_], [xSupplier_], [xComment], [xGe" +
                "nGroup_]) VALUES (@xDate, @xDiameterBefore11, @xDiameterBefore10, @xDiameterBefo" +
                "re9, @xDiameterBefore8, @xDiameterBefore7, @xDiameterBefore6, @xDiameterBefore5," +
                " @xDiameterBefore4, @xDiameterBefore3, @xDiameterBefore2, @xDiameterBefore1, @xD" +
                "iameterAfter11, @xDiameterAfter10, @xDiameterAfter9, @xDiameterAfter8, @xDiamete" +
                "rAfter7, @xDiameterAfter6, @xDiameterAfter5, @xDiameterAfter4, @xDiameterAfter3," +
                " @xDiameterAfter2, @xDiameterAfter1, @xAfsBefore, @xAfsAfter, @xVolatilePercent," +
                " @xBurningPercent, @xGlayPercent, @xActiveBentnitePercent, @xPermeability, @xApp" +
                "rove_, @xSupplier_, @xComment, @xGenGroup_);\r\nSELECT x_, xDate, xDiameterBefore1" +
                "1, xDiameterBefore10, xDiameterBefore9, xDiameterBefore8, xDiameterBefore7, xDia" +
                "meterBefore6, xDiameterBefore5, xDiameterBefore4, xDiameterBefore3, xDiameterBef" +
                "ore2, xDiameterBefore1, xDiameterAfter11, xDiameterAfter10, xDiameterAfter9, xDi" +
                "ameterAfter8, xDiameterAfter7, xDiameterAfter6, xDiameterAfter5, xDiameterAfter4" +
                ", xDiameterAfter3, xDiameterAfter2, xDiameterAfter1, xAfsBefore, xAfsAfter, xVol" +
                "atilePercent, xBurningPercent, xGlayPercent, xActiveBentnitePercent, xPermeabili" +
                "ty, xApprove_, xSupplier_, xComment, xGenGroup_ FROM mSandWeeklyTest WHERE (x_ =" +
                " SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDate", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore11", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore10", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore9", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore8", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore7", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter11", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter10", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter9", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter8", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter7", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAfsBefore", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xAfsBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAfsAfter", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xAfsAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xVolatilePercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xVolatilePercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xBurningPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xBurningPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xGlayPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xGlayPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xActiveBentnitePercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xActiveBentnitePercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xPermeability", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xPermeability", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xApprove_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xApprove_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xSupplier_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xSupplier_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xGenGroup_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xGenGroup_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [mSandWeeklyTest] SET [xDate] = @xDate, [xDiameterBefore11] = @xDiameterBe" +
                "fore11, [xDiameterBefore10] = @xDiameterBefore10, [xDiameterBefore9] = @xDiamete" +
                "rBefore9, [xDiameterBefore8] = @xDiameterBefore8, [xDiameterBefore7] = @xDiamete" +
                "rBefore7, [xDiameterBefore6] = @xDiameterBefore6, [xDiameterBefore5] = @xDiamete" +
                "rBefore5, [xDiameterBefore4] = @xDiameterBefore4, [xDiameterBefore3] = @xDiamete" +
                "rBefore3, [xDiameterBefore2] = @xDiameterBefore2, [xDiameterBefore1] = @xDiamete" +
                "rBefore1, [xDiameterAfter11] = @xDiameterAfter11, [xDiameterAfter10] = @xDiamete" +
                "rAfter10, [xDiameterAfter9] = @xDiameterAfter9, [xDiameterAfter8] = @xDiameterAf" +
                "ter8, [xDiameterAfter7] = @xDiameterAfter7, [xDiameterAfter6] = @xDiameterAfter6" +
                ", [xDiameterAfter5] = @xDiameterAfter5, [xDiameterAfter4] = @xDiameterAfter4, [x" +
                "DiameterAfter3] = @xDiameterAfter3, [xDiameterAfter2] = @xDiameterAfter2, [xDiam" +
                "eterAfter1] = @xDiameterAfter1, [xAfsBefore] = @xAfsBefore, [xAfsAfter] = @xAfsA" +
                "fter, [xVolatilePercent] = @xVolatilePercent, [xBurningPercent] = @xBurningPerce" +
                "nt, [xGlayPercent] = @xGlayPercent, [xActiveBentnitePercent] = @xActiveBentniteP" +
                "ercent, [xPermeability] = @xPermeability, [xApprove_] = @xApprove_, [xSupplier_]" +
                " = @xSupplier_, [xComment] = @xComment, [xGenGroup_] = @xGenGroup_ WHERE (([x_] " +
                "= @Original_x_) AND ((@IsNull_xDate = 1 AND [xDate] IS NULL) OR ([xDate] = @Orig" +
                "inal_xDate)) AND ((@IsNull_xDiameterBefore11 = 1 AND [xDiameterBefore11] IS NULL" +
                ") OR ([xDiameterBefore11] = @Original_xDiameterBefore11)) AND ((@IsNull_xDiamete" +
                "rBefore10 = 1 AND [xDiameterBefore10] IS NULL) OR ([xDiameterBefore10] = @Origin" +
                "al_xDiameterBefore10)) AND ((@IsNull_xDiameterBefore9 = 1 AND [xDiameterBefore9]" +
                " IS NULL) OR ([xDiameterBefore9] = @Original_xDiameterBefore9)) AND ((@IsNull_xD" +
                "iameterBefore8 = 1 AND [xDiameterBefore8] IS NULL) OR ([xDiameterBefore8] = @Ori" +
                "ginal_xDiameterBefore8)) AND ((@IsNull_xDiameterBefore7 = 1 AND [xDiameterBefore" +
                "7] IS NULL) OR ([xDiameterBefore7] = @Original_xDiameterBefore7)) AND ((@IsNull_" +
                "xDiameterBefore6 = 1 AND [xDiameterBefore6] IS NULL) OR ([xDiameterBefore6] = @O" +
                "riginal_xDiameterBefore6)) AND ((@IsNull_xDiameterBefore5 = 1 AND [xDiameterBefo" +
                "re5] IS NULL) OR ([xDiameterBefore5] = @Original_xDiameterBefore5)) AND ((@IsNul" +
                "l_xDiameterBefore4 = 1 AND [xDiameterBefore4] IS NULL) OR ([xDiameterBefore4] = " +
                "@Original_xDiameterBefore4)) AND ((@IsNull_xDiameterBefore3 = 1 AND [xDiameterBe" +
                "fore3] IS NULL) OR ([xDiameterBefore3] = @Original_xDiameterBefore3)) AND ((@IsN" +
                "ull_xDiameterBefore2 = 1 AND [xDiameterBefore2] IS NULL) OR ([xDiameterBefore2] " +
                "= @Original_xDiameterBefore2)) AND ((@IsNull_xDiameterBefore1 = 1 AND [xDiameter" +
                "Before1] IS NULL) OR ([xDiameterBefore1] = @Original_xDiameterBefore1)) AND ((@I" +
                "sNull_xDiameterAfter11 = 1 AND [xDiameterAfter11] IS NULL) OR ([xDiameterAfter11" +
                "] = @Original_xDiameterAfter11)) AND ((@IsNull_xDiameterAfter10 = 1 AND [xDiamet" +
                "erAfter10] IS NULL) OR ([xDiameterAfter10] = @Original_xDiameterAfter10)) AND ((" +
                "@IsNull_xDiameterAfter9 = 1 AND [xDiameterAfter9] IS NULL) OR ([xDiameterAfter9]" +
                " = @Original_xDiameterAfter9)) AND ((@IsNull_xDiameterAfter8 = 1 AND [xDiameterA" +
                "fter8] IS NULL) OR ([xDiameterAfter8] = @Original_xDiameterAfter8)) AND ((@IsNul" +
                "l_xDiameterAfter7 = 1 AND [xDiameterAfter7] IS NULL) OR ([xDiameterAfter7] = @Or" +
                "iginal_xDiameterAfter7)) AND ((@IsNull_xDiameterAfter6 = 1 AND [xDiameterAfter6]" +
                " IS NULL) OR ([xDiameterAfter6] = @Original_xDiameterAfter6)) AND ((@IsNull_xDia" +
                "meterAfter5 = 1 AND [xDiameterAfter5] IS NULL) OR ([xDiameterAfter5] = @Original" +
                "_xDiameterAfter5)) AND ((@IsNull_xDiameterAfter4 = 1 AND [xDiameterAfter4] IS NU" +
                "LL) OR ([xDiameterAfter4] = @Original_xDiameterAfter4)) AND ((@IsNull_xDiameterA" +
                "fter3 = 1 AND [xDiameterAfter3] IS NULL) OR ([xDiameterAfter3] = @Original_xDiam" +
                "eterAfter3)) AND ((@IsNull_xDiameterAfter2 = 1 AND [xDiameterAfter2] IS NULL) OR" +
                " ([xDiameterAfter2] = @Original_xDiameterAfter2)) AND ((@IsNull_xDiameterAfter1 " +
                "= 1 AND [xDiameterAfter1] IS NULL) OR ([xDiameterAfter1] = @Original_xDiameterAf" +
                "ter1)) AND ((@IsNull_xAfsBefore = 1 AND [xAfsBefore] IS NULL) OR ([xAfsBefore] =" +
                " @Original_xAfsBefore)) AND ((@IsNull_xAfsAfter = 1 AND [xAfsAfter] IS NULL) OR " +
                "([xAfsAfter] = @Original_xAfsAfter)) AND ((@IsNull_xVolatilePercent = 1 AND [xVo" +
                "latilePercent] IS NULL) OR ([xVolatilePercent] = @Original_xVolatilePercent)) AN" +
                "D ((@IsNull_xBurningPercent = 1 AND [xBurningPercent] IS NULL) OR ([xBurningPerc" +
                "ent] = @Original_xBurningPercent)) AND ((@IsNull_xGlayPercent = 1 AND [xGlayPerc" +
                "ent] IS NULL) OR ([xGlayPercent] = @Original_xGlayPercent)) AND ((@IsNull_xActiv" +
                "eBentnitePercent = 1 AND [xActiveBentnitePercent] IS NULL) OR ([xActiveBentniteP" +
                "ercent] = @Original_xActiveBentnitePercent)) AND ((@IsNull_xPermeability = 1 AND" +
                " [xPermeability] IS NULL) OR ([xPermeability] = @Original_xPermeability)) AND ((" +
                "@IsNull_xApprove_ = 1 AND [xApprove_] IS NULL) OR ([xApprove_] = @Original_xAppr" +
                "ove_)) AND ((@IsNull_xSupplier_ = 1 AND [xSupplier_] IS NULL) OR ([xSupplier_] =" +
                " @Original_xSupplier_)) AND ((@IsNull_xComment = 1 AND [xComment] IS NULL) OR ([" +
                "xComment] = @Original_xComment)) AND ([xGenGroup_] = @Original_xGenGroup_));\r\nSE" +
                "LECT x_, xDate, xDiameterBefore11, xDiameterBefore10, xDiameterBefore9, xDiamete" +
                "rBefore8, xDiameterBefore7, xDiameterBefore6, xDiameterBefore5, xDiameterBefore4" +
                ", xDiameterBefore3, xDiameterBefore2, xDiameterBefore1, xDiameterAfter11, xDiame" +
                "terAfter10, xDiameterAfter9, xDiameterAfter8, xDiameterAfter7, xDiameterAfter6, " +
                "xDiameterAfter5, xDiameterAfter4, xDiameterAfter3, xDiameterAfter2, xDiameterAft" +
                "er1, xAfsBefore, xAfsAfter, xVolatilePercent, xBurningPercent, xGlayPercent, xAc" +
                "tiveBentnitePercent, xPermeability, xApprove_, xSupplier_, xComment, xGenGroup_ " +
                "FROM mSandWeeklyTest WHERE (x_ = @x_)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDate", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore11", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore10", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore9", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore8", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore7", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterBefore1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter11", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter10", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter9", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter8", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter7", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xDiameterAfter1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAfsBefore", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xAfsBefore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xAfsAfter", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xAfsAfter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xVolatilePercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xVolatilePercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xBurningPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xBurningPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xGlayPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xGlayPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xActiveBentnitePercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xActiveBentnitePercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xPermeability", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xPermeability", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xApprove_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xApprove_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xSupplier_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xSupplier_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xGenGroup_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xGenGroup_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_x_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "x_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDate", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore11", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore10", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore9", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore8", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore7", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterBefore1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterBefore1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterBefore1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterBefore1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter11", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter11", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter10", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter9", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter8", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter7", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xDiameterAfter1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xDiameterAfter1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xDiameterAfter1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xDiameterAfter1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAfsBefore", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAfsBefore", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAfsBefore", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xAfsBefore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xAfsAfter", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xAfsAfter", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xAfsAfter", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xAfsAfter", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xVolatilePercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xVolatilePercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xVolatilePercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xVolatilePercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xBurningPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xBurningPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xBurningPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xBurningPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xGlayPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xGlayPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xGlayPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xGlayPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xActiveBentnitePercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xActiveBentnitePercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xActiveBentnitePercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xActiveBentnitePercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xPermeability", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xPermeability", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xPermeability", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "xPermeability", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xApprove_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xApprove_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xApprove_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xApprove_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xSupplier_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xSupplier_", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xSupplier_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xSupplier_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_xComment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xComment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xComment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_xGenGroup_", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "xGenGroup_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@x_", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "x_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DAL.Properties.Settings.Default.PayazobConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        x_, xDate, xDiameterBefore11, xDiameterBefore10, xDiameterBefore9, xDiameterBefore8, xDiameterBefore7, xDiameterBefore6, xDiameterBefore5, 
                         xDiameterBefore4, xDiameterBefore3, xDiameterBefore2, xDiameterBefore1, xDiameterAfter11, xDiameterAfter10, xDiameterAfter9, xDiameterAfter8, 
                         xDiameterAfter7, xDiameterAfter6, xDiameterAfter5, xDiameterAfter4, xDiameterAfter3, xDiameterAfter2, xDiameterAfter1, xAfsBefore, xAfsAfter, xVolatilePercent, 
                         xBurningPercent, xGlayPercent, xActiveBentnitePercent, xPermeability, xApprove_, xSupplier_, xComment, xGenGroup_
FROM            mSandWeeklyTest";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Sand.mSandWeeklyTestDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Sand.mSandWeeklyTestDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Sand.mSandWeeklyTestDataTable dataTable = new DataSet_Sand.mSandWeeklyTestDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_Sand.mSandWeeklyTestDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet_Sand dataSet) {
            return this.Adapter.Update(dataSet, "mSandWeeklyTest");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_x_, 
                    string Original_xDate, 
                    global::System.Nullable<decimal> Original_xDiameterBefore11, 
                    global::System.Nullable<decimal> Original_xDiameterBefore10, 
                    global::System.Nullable<decimal> Original_xDiameterBefore9, 
                    global::System.Nullable<decimal> Original_xDiameterBefore8, 
                    global::System.Nullable<decimal> Original_xDiameterBefore7, 
                    global::System.Nullable<decimal> Original_xDiameterBefore6, 
                    global::System.Nullable<decimal> Original_xDiameterBefore5, 
                    global::System.Nullable<decimal> Original_xDiameterBefore4, 
                    global::System.Nullable<decimal> Original_xDiameterBefore3, 
                    global::System.Nullable<decimal> Original_xDiameterBefore2, 
                    global::System.Nullable<decimal> Original_xDiameterBefore1, 
                    global::System.Nullable<decimal> Original_xDiameterAfter11, 
                    global::System.Nullable<decimal> Original_xDiameterAfter10, 
                    global::System.Nullable<decimal> Original_xDiameterAfter9, 
                    global::System.Nullable<decimal> Original_xDiameterAfter8, 
                    global::System.Nullable<decimal> Original_xDiameterAfter7, 
                    global::System.Nullable<decimal> Original_xDiameterAfter6, 
                    global::System.Nullable<decimal> Original_xDiameterAfter5, 
                    global::System.Nullable<decimal> Original_xDiameterAfter4, 
                    global::System.Nullable<decimal> Original_xDiameterAfter3, 
                    global::System.Nullable<decimal> Original_xDiameterAfter2, 
                    global::System.Nullable<decimal> Original_xDiameterAfter1, 
                    global::System.Nullable<decimal> Original_xAfsBefore, 
                    global::System.Nullable<decimal> Original_xAfsAfter, 
                    global::System.Nullable<decimal> Original_xVolatilePercent, 
                    global::System.Nullable<decimal> Original_xBurningPercent, 
                    global::System.Nullable<decimal> Original_xGlayPercent, 
                    global::System.Nullable<decimal> Original_xActiveBentnitePercent, 
                    global::System.Nullable<decimal> Original_xPermeability, 
                    global::System.Nullable<int> Original_xApprove_, 
                    global::System.Nullable<int> Original_xSupplier_, 
                    string Original_xComment, 
                    int Original_xGenGroup_) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_x_));
            if ((Original_xDate == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_xDate));
            }
            if ((Original_xDiameterBefore11.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_xDiameterBefore11.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore10.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_xDiameterBefore10.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore9.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_xDiameterBefore9.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_xDiameterBefore8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore7.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_xDiameterBefore7.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore6.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_xDiameterBefore6.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_xDiameterBefore5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_xDiameterBefore4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_xDiameterBefore3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_xDiameterBefore2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_xDiameterBefore1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter11.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_xDiameterAfter11.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter10.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_xDiameterAfter10.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter9.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((decimal)(Original_xDiameterAfter9.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_xDiameterAfter8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter7.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((decimal)(Original_xDiameterAfter7.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter6.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((decimal)(Original_xDiameterAfter6.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((decimal)(Original_xDiameterAfter5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_xDiameterAfter4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((decimal)(Original_xDiameterAfter3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((decimal)(Original_xDiameterAfter2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((decimal)(Original_xDiameterAfter1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_xAfsBefore.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((decimal)(Original_xAfsBefore.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_xAfsAfter.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((decimal)(Original_xAfsAfter.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_xVolatilePercent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((decimal)(Original_xVolatilePercent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_xBurningPercent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((decimal)(Original_xBurningPercent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_xGlayPercent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((decimal)(Original_xGlayPercent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_xActiveBentnitePercent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((decimal)(Original_xActiveBentnitePercent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_xPermeability.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((decimal)(Original_xPermeability.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_xApprove_.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((int)(Original_xApprove_.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_xSupplier_.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((int)(Original_xSupplier_.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_xComment == null)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_xComment));
            }
            this.Adapter.DeleteCommand.Parameters[67].Value = ((int)(Original_xGenGroup_));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string xDate, 
                    global::System.Nullable<decimal> xDiameterBefore11, 
                    global::System.Nullable<decimal> xDiameterBefore10, 
                    global::System.Nullable<decimal> xDiameterBefore9, 
                    global::System.Nullable<decimal> xDiameterBefore8, 
                    global::System.Nullable<decimal> xDiameterBefore7, 
                    global::System.Nullable<decimal> xDiameterBefore6, 
                    global::System.Nullable<decimal> xDiameterBefore5, 
                    global::System.Nullable<decimal> xDiameterBefore4, 
                    global::System.Nullable<decimal> xDiameterBefore3, 
                    global::System.Nullable<decimal> xDiameterBefore2, 
                    global::System.Nullable<decimal> xDiameterBefore1, 
                    global::System.Nullable<decimal> xDiameterAfter11, 
                    global::System.Nullable<decimal> xDiameterAfter10, 
                    global::System.Nullable<decimal> xDiameterAfter9, 
                    global::System.Nullable<decimal> xDiameterAfter8, 
                    global::System.Nullable<decimal> xDiameterAfter7, 
                    global::System.Nullable<decimal> xDiameterAfter6, 
                    global::System.Nullable<decimal> xDiameterAfter5, 
                    global::System.Nullable<decimal> xDiameterAfter4, 
                    global::System.Nullable<decimal> xDiameterAfter3, 
                    global::System.Nullable<decimal> xDiameterAfter2, 
                    global::System.Nullable<decimal> xDiameterAfter1, 
                    global::System.Nullable<decimal> xAfsBefore, 
                    global::System.Nullable<decimal> xAfsAfter, 
                    global::System.Nullable<decimal> xVolatilePercent, 
                    global::System.Nullable<decimal> xBurningPercent, 
                    global::System.Nullable<decimal> xGlayPercent, 
                    global::System.Nullable<decimal> xActiveBentnitePercent, 
                    global::System.Nullable<decimal> xPermeability, 
                    global::System.Nullable<int> xApprove_, 
                    global::System.Nullable<int> xSupplier_, 
                    string xComment, 
                    int xGenGroup_) {
            if ((xDate == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(xDate));
            }
            if ((xDiameterBefore11.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(xDiameterBefore11.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(xDiameterBefore10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(xDiameterBefore9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(xDiameterBefore8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(xDiameterBefore7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(xDiameterBefore6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(xDiameterBefore5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(xDiameterBefore4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(xDiameterBefore3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(xDiameterBefore2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(xDiameterBefore1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter11.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(xDiameterAfter11.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(xDiameterAfter10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(xDiameterAfter9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(xDiameterAfter8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(xDiameterAfter7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(xDiameterAfter6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(xDiameterAfter5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(xDiameterAfter4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(xDiameterAfter3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(xDiameterAfter2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(xDiameterAfter1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((xAfsBefore.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(xAfsBefore.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((xAfsAfter.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(xAfsAfter.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((xVolatilePercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(xVolatilePercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((xBurningPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(xBurningPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((xGlayPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(xGlayPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((xActiveBentnitePercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(xActiveBentnitePercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((xPermeability.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(xPermeability.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((xApprove_.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((int)(xApprove_.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((xSupplier_.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(xSupplier_.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((xComment == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(xComment));
            }
            this.Adapter.InsertCommand.Parameters[33].Value = ((int)(xGenGroup_));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string xDate, 
                    global::System.Nullable<decimal> xDiameterBefore11, 
                    global::System.Nullable<decimal> xDiameterBefore10, 
                    global::System.Nullable<decimal> xDiameterBefore9, 
                    global::System.Nullable<decimal> xDiameterBefore8, 
                    global::System.Nullable<decimal> xDiameterBefore7, 
                    global::System.Nullable<decimal> xDiameterBefore6, 
                    global::System.Nullable<decimal> xDiameterBefore5, 
                    global::System.Nullable<decimal> xDiameterBefore4, 
                    global::System.Nullable<decimal> xDiameterBefore3, 
                    global::System.Nullable<decimal> xDiameterBefore2, 
                    global::System.Nullable<decimal> xDiameterBefore1, 
                    global::System.Nullable<decimal> xDiameterAfter11, 
                    global::System.Nullable<decimal> xDiameterAfter10, 
                    global::System.Nullable<decimal> xDiameterAfter9, 
                    global::System.Nullable<decimal> xDiameterAfter8, 
                    global::System.Nullable<decimal> xDiameterAfter7, 
                    global::System.Nullable<decimal> xDiameterAfter6, 
                    global::System.Nullable<decimal> xDiameterAfter5, 
                    global::System.Nullable<decimal> xDiameterAfter4, 
                    global::System.Nullable<decimal> xDiameterAfter3, 
                    global::System.Nullable<decimal> xDiameterAfter2, 
                    global::System.Nullable<decimal> xDiameterAfter1, 
                    global::System.Nullable<decimal> xAfsBefore, 
                    global::System.Nullable<decimal> xAfsAfter, 
                    global::System.Nullable<decimal> xVolatilePercent, 
                    global::System.Nullable<decimal> xBurningPercent, 
                    global::System.Nullable<decimal> xGlayPercent, 
                    global::System.Nullable<decimal> xActiveBentnitePercent, 
                    global::System.Nullable<decimal> xPermeability, 
                    global::System.Nullable<int> xApprove_, 
                    global::System.Nullable<int> xSupplier_, 
                    string xComment, 
                    int xGenGroup_, 
                    int Original_x_, 
                    string Original_xDate, 
                    global::System.Nullable<decimal> Original_xDiameterBefore11, 
                    global::System.Nullable<decimal> Original_xDiameterBefore10, 
                    global::System.Nullable<decimal> Original_xDiameterBefore9, 
                    global::System.Nullable<decimal> Original_xDiameterBefore8, 
                    global::System.Nullable<decimal> Original_xDiameterBefore7, 
                    global::System.Nullable<decimal> Original_xDiameterBefore6, 
                    global::System.Nullable<decimal> Original_xDiameterBefore5, 
                    global::System.Nullable<decimal> Original_xDiameterBefore4, 
                    global::System.Nullable<decimal> Original_xDiameterBefore3, 
                    global::System.Nullable<decimal> Original_xDiameterBefore2, 
                    global::System.Nullable<decimal> Original_xDiameterBefore1, 
                    global::System.Nullable<decimal> Original_xDiameterAfter11, 
                    global::System.Nullable<decimal> Original_xDiameterAfter10, 
                    global::System.Nullable<decimal> Original_xDiameterAfter9, 
                    global::System.Nullable<decimal> Original_xDiameterAfter8, 
                    global::System.Nullable<decimal> Original_xDiameterAfter7, 
                    global::System.Nullable<decimal> Original_xDiameterAfter6, 
                    global::System.Nullable<decimal> Original_xDiameterAfter5, 
                    global::System.Nullable<decimal> Original_xDiameterAfter4, 
                    global::System.Nullable<decimal> Original_xDiameterAfter3, 
                    global::System.Nullable<decimal> Original_xDiameterAfter2, 
                    global::System.Nullable<decimal> Original_xDiameterAfter1, 
                    global::System.Nullable<decimal> Original_xAfsBefore, 
                    global::System.Nullable<decimal> Original_xAfsAfter, 
                    global::System.Nullable<decimal> Original_xVolatilePercent, 
                    global::System.Nullable<decimal> Original_xBurningPercent, 
                    global::System.Nullable<decimal> Original_xGlayPercent, 
                    global::System.Nullable<decimal> Original_xActiveBentnitePercent, 
                    global::System.Nullable<decimal> Original_xPermeability, 
                    global::System.Nullable<int> Original_xApprove_, 
                    global::System.Nullable<int> Original_xSupplier_, 
                    string Original_xComment, 
                    int Original_xGenGroup_, 
                    int x_) {
            if ((xDate == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(xDate));
            }
            if ((xDiameterBefore11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(xDiameterBefore11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(xDiameterBefore10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(xDiameterBefore9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(xDiameterBefore8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(xDiameterBefore7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(xDiameterBefore6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(xDiameterBefore5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(xDiameterBefore4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(xDiameterBefore3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(xDiameterBefore2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((xDiameterBefore1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(xDiameterBefore1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(xDiameterAfter11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(xDiameterAfter10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(xDiameterAfter9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(xDiameterAfter8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(xDiameterAfter7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(xDiameterAfter6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(xDiameterAfter5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(xDiameterAfter4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(xDiameterAfter3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(xDiameterAfter2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((xDiameterAfter1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(xDiameterAfter1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((xAfsBefore.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(xAfsBefore.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((xAfsAfter.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(xAfsAfter.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((xVolatilePercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(xVolatilePercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((xBurningPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(xBurningPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((xGlayPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(xGlayPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((xActiveBentnitePercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(xActiveBentnitePercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((xPermeability.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(xPermeability.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((xApprove_.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(xApprove_.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((xSupplier_.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(xSupplier_.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((xComment == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(xComment));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(xGenGroup_));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_x_));
            if ((Original_xDate == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_xDate));
            }
            if ((Original_xDiameterBefore11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(Original_xDiameterBefore11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Original_xDiameterBefore10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(Original_xDiameterBefore9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(Original_xDiameterBefore8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(Original_xDiameterBefore7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(Original_xDiameterBefore6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(Original_xDiameterBefore5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(Original_xDiameterBefore4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(Original_xDiameterBefore3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((decimal)(Original_xDiameterBefore2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterBefore1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(Original_xDiameterBefore1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((decimal)(Original_xDiameterAfter11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((decimal)(Original_xDiameterAfter10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((decimal)(Original_xDiameterAfter9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((decimal)(Original_xDiameterAfter8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((decimal)(Original_xDiameterAfter7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((decimal)(Original_xDiameterAfter6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((decimal)(Original_xDiameterAfter5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(Original_xDiameterAfter4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((decimal)(Original_xDiameterAfter3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((decimal)(Original_xDiameterAfter2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_xDiameterAfter1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((decimal)(Original_xDiameterAfter1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_xAfsBefore.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((decimal)(Original_xAfsBefore.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_xAfsAfter.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((decimal)(Original_xAfsAfter.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_xVolatilePercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((decimal)(Original_xVolatilePercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_xBurningPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((decimal)(Original_xBurningPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_xGlayPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((decimal)(Original_xGlayPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_xActiveBentnitePercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((decimal)(Original_xActiveBentnitePercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_xPermeability.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((decimal)(Original_xPermeability.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_xApprove_.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((int)(Original_xApprove_.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_xSupplier_.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((int)(Original_xSupplier_.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_xComment == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_xComment));
            }
            this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(Original_xGenGroup_));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((int)(x_));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string xDate, 
                    global::System.Nullable<decimal> xDiameterBefore11, 
                    global::System.Nullable<decimal> xDiameterBefore10, 
                    global::System.Nullable<decimal> xDiameterBefore9, 
                    global::System.Nullable<decimal> xDiameterBefore8, 
                    global::System.Nullable<decimal> xDiameterBefore7, 
                    global::System.Nullable<decimal> xDiameterBefore6, 
                    global::System.Nullable<decimal> xDiameterBefore5, 
                    global::System.Nullable<decimal> xDiameterBefore4, 
                    global::System.Nullable<decimal> xDiameterBefore3, 
                    global::System.Nullable<decimal> xDiameterBefore2, 
                    global::System.Nullable<decimal> xDiameterBefore1, 
                    global::System.Nullable<decimal> xDiameterAfter11, 
                    global::System.Nullable<decimal> xDiameterAfter10, 
                    global::System.Nullable<decimal> xDiameterAfter9, 
                    global::System.Nullable<decimal> xDiameterAfter8, 
                    global::System.Nullable<decimal> xDiameterAfter7, 
                    global::System.Nullable<decimal> xDiameterAfter6, 
                    global::System.Nullable<decimal> xDiameterAfter5, 
                    global::System.Nullable<decimal> xDiameterAfter4, 
                    global::System.Nullable<decimal> xDiameterAfter3, 
                    global::System.Nullable<decimal> xDiameterAfter2, 
                    global::System.Nullable<decimal> xDiameterAfter1, 
                    global::System.Nullable<decimal> xAfsBefore, 
                    global::System.Nullable<decimal> xAfsAfter, 
                    global::System.Nullable<decimal> xVolatilePercent, 
                    global::System.Nullable<decimal> xBurningPercent, 
                    global::System.Nullable<decimal> xGlayPercent, 
                    global::System.Nullable<decimal> xActiveBentnitePercent, 
                    global::System.Nullable<decimal> xPermeability, 
                    global::System.Nullable<int> xApprove_, 
                    global::System.Nullable<int> xSupplier_, 
                    string xComment, 
                    int xGenGroup_, 
                    int Original_x_, 
                    string Original_xDate, 
                    global::System.Nullable<decimal> Original_xDiameterBefore11, 
                    global::System.Nullable<decimal> Original_xDiameterBefore10, 
                    global::System.Nullable<decimal> Original_xDiameterBefore9, 
                    global::System.Nullable<decimal> Original_xDiameterBefore8, 
                    global::System.Nullable<decimal> Original_xDiameterBefore7, 
                    global::System.Nullable<decimal> Original_xDiameterBefore6, 
                    global::System.Nullable<decimal> Original_xDiameterBefore5, 
                    global::System.Nullable<decimal> Original_xDiameterBefore4, 
                    global::System.Nullable<decimal> Original_xDiameterBefore3, 
                    global::System.Nullable<decimal> Original_xDiameterBefore2, 
                    global::System.Nullable<decimal> Original_xDiameterBefore1, 
                    global::System.Nullable<decimal> Original_xDiameterAfter11, 
                    global::System.Nullable<decimal> Original_xDiameterAfter10, 
                    global::System.Nullable<decimal> Original_xDiameterAfter9, 
                    global::System.Nullable<decimal> Original_xDiameterAfter8, 
                    global::System.Nullable<decimal> Original_xDiameterAfter7, 
                    global::System.Nullable<decimal> Original_xDiameterAfter6, 
                    global::System.Nullable<decimal> Original_xDiameterAfter5, 
                    global::System.Nullable<decimal> Original_xDiameterAfter4, 
                    global::System.Nullable<decimal> Original_xDiameterAfter3, 
                    global::System.Nullable<decimal> Original_xDiameterAfter2, 
                    global::System.Nullable<decimal> Original_xDiameterAfter1, 
                    global::System.Nullable<decimal> Original_xAfsBefore, 
                    global::System.Nullable<decimal> Original_xAfsAfter, 
                    global::System.Nullable<decimal> Original_xVolatilePercent, 
                    global::System.Nullable<decimal> Original_xBurningPercent, 
                    global::System.Nullable<decimal> Original_xGlayPercent, 
                    global::System.Nullable<decimal> Original_xActiveBentnitePercent, 
                    global::System.Nullable<decimal> Original_xPermeability, 
                    global::System.Nullable<int> Original_xApprove_, 
                    global::System.Nullable<int> Original_xSupplier_, 
                    string Original_xComment, 
                    int Original_xGenGroup_) {
            return this.Update(xDate, xDiameterBefore11, xDiameterBefore10, xDiameterBefore9, xDiameterBefore8, xDiameterBefore7, xDiameterBefore6, xDiameterBefore5, xDiameterBefore4, xDiameterBefore3, xDiameterBefore2, xDiameterBefore1, xDiameterAfter11, xDiameterAfter10, xDiameterAfter9, xDiameterAfter8, xDiameterAfter7, xDiameterAfter6, xDiameterAfter5, xDiameterAfter4, xDiameterAfter3, xDiameterAfter2, xDiameterAfter1, xAfsBefore, xAfsAfter, xVolatilePercent, xBurningPercent, xGlayPercent, xActiveBentnitePercent, xPermeability, xApprove_, xSupplier_, xComment, xGenGroup_, Original_x_, Original_xDate, Original_xDiameterBefore11, Original_xDiameterBefore10, Original_xDiameterBefore9, Original_xDiameterBefore8, Original_xDiameterBefore7, Original_xDiameterBefore6, Original_xDiameterBefore5, Original_xDiameterBefore4, Original_xDiameterBefore3, Original_xDiameterBefore2, Original_xDiameterBefore1, Original_xDiameterAfter11, Original_xDiameterAfter10, Original_xDiameterAfter9, Original_xDiameterAfter8, Original_xDiameterAfter7, Original_xDiameterAfter6, Original_xDiameterAfter5, Original_xDiameterAfter4, Original_xDiameterAfter3, Original_xDiameterAfter2, Original_xDiameterAfter1, Original_xAfsBefore, Original_xAfsAfter, Original_xVolatilePercent, Original_xBurningPercent, Original_xGlayPercent, Original_xActiveBentnitePercent, Original_xPermeability, Original_xApprove_, Original_xSupplier_, Original_xComment, Original_xGenGroup_, Original_x_);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SelectSandDailyReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SelectSandDailyReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SelectSandDailyReport";
            tableMapping.ColumnMappings.Add("xDate", "xDate");
            tableMapping.ColumnMappings.Add("ShiftName", "ShiftName");
            tableMapping.ColumnMappings.Add("xPiecesLine1", "xPiecesLine1");
            tableMapping.ColumnMappings.Add("xPiecesLine2", "xPiecesLine2");
            tableMapping.ColumnMappings.Add("Supplier", "Supplier");
            tableMapping.ColumnMappings.Add("xSamplingTime", "xSamplingTime");
            tableMapping.ColumnMappings.Add("xMoisturePercent", "xMoisturePercent");
            tableMapping.ColumnMappings.Add("xPermeability", "xPermeability");
            tableMapping.ColumnMappings.Add("xCompresiveStrength", "xCompresiveStrength");
            tableMapping.ColumnMappings.Add("xCompactibility", "xCompactibility");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DAL.Properties.Settings.Default.PayazobConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SelectSandDailyReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateFrom", global::System.Data.SqlDbType.Char, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateTo", global::System.Data.SqlDbType.Char, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Sand.SelectSandDailyReportDataTable dataTable, string DateFrom, string DateTo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DateFrom == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(DateFrom));
            }
            if ((DateTo == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DateTo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Sand.SelectSandDailyReportDataTable GetData(string DateFrom, string DateTo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DateFrom == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(DateFrom));
            }
            if ((DateTo == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DateTo));
            }
            DataSet_Sand.SelectSandDailyReportDataTable dataTable = new DataSet_Sand.SelectSandDailyReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SelectSandMaterialUsageSumAVGByDateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SelectSandMaterialUsageSumAVGByDateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SelectSandMaterialUsageSumAVGByDate";
            tableMapping.ColumnMappings.Add("Bantonit", "Bantonit");
            tableMapping.ColumnMappings.Add("SandNew", "SandNew");
            tableMapping.ColumnMappings.Add("CoalDust", "CoalDust");
            tableMapping.ColumnMappings.Add("Water", "Water");
            tableMapping.ColumnMappings.Add("SandReturn", "SandReturn");
            tableMapping.ColumnMappings.Add("BatchCount", "BatchCount");
            tableMapping.ColumnMappings.Add("AVGBantonit", "AVGBantonit");
            tableMapping.ColumnMappings.Add("AVGSandNew", "AVGSandNew");
            tableMapping.ColumnMappings.Add("AVGCoalDust", "AVGCoalDust");
            tableMapping.ColumnMappings.Add("AVGWater", "AVGWater");
            tableMapping.ColumnMappings.Add("AVGSandReturn", "AVGSandReturn");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DAL.Properties.Settings.Default.PayazobConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SelectSandMaterialUsageSumAVGByDate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateFrom", global::System.Data.SqlDbType.Char, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateTo", global::System.Data.SqlDbType.Char, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Sand.SelectSandMaterialUsageSumAVGByDateDataTable dataTable, string DateFrom, string DateTo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DateFrom == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(DateFrom));
            }
            if ((DateTo == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DateTo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Sand.SelectSandMaterialUsageSumAVGByDateDataTable GetData(string DateFrom, string DateTo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DateFrom == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(DateFrom));
            }
            if ((DateTo == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DateTo));
            }
            DataSet_Sand.SelectSandMaterialUsageSumAVGByDateDataTable dataTable = new DataSet_Sand.SelectSandMaterialUsageSumAVGByDateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SelectSandMaterialAndDailyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SelectSandMaterialAndDailyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SelectSandMaterialAndDaily";
            tableMapping.ColumnMappings.Add("x_", "x_");
            tableMapping.ColumnMappings.Add("xDate", "xDate");
            tableMapping.ColumnMappings.Add("shift", "shift");
            tableMapping.ColumnMappings.Add("BatchCount", "BatchCount");
            tableMapping.ColumnMappings.Add("Bantonit", "Bantonit");
            tableMapping.ColumnMappings.Add("SandNew", "SandNew");
            tableMapping.ColumnMappings.Add("CoalDust", "CoalDust");
            tableMapping.ColumnMappings.Add("Water", "Water");
            tableMapping.ColumnMappings.Add("SandReturn", "SandReturn");
            tableMapping.ColumnMappings.Add("AVGBantonit", "AVGBantonit");
            tableMapping.ColumnMappings.Add("AVGSandNew", "AVGSandNew");
            tableMapping.ColumnMappings.Add("AVGCoalDust", "AVGCoalDust");
            tableMapping.ColumnMappings.Add("AVGWater", "AVGWater");
            tableMapping.ColumnMappings.Add("AVGSandReturn", "AVGSandReturn");
            tableMapping.ColumnMappings.Add("AVGPermeability", "AVGPermeability");
            tableMapping.ColumnMappings.Add("AVGCompactibility", "AVGCompactibility");
            tableMapping.ColumnMappings.Add("AVGCompresiveStrength", "AVGCompresiveStrength");
            tableMapping.ColumnMappings.Add("AVGMoisturePercent", "AVGMoisturePercent");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DAL.Properties.Settings.Default.PayazobConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SelectSandMaterialAndDaily";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@xPieces_", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateFrom", global::System.Data.SqlDbType.Char, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateTo", global::System.Data.SqlDbType.Char, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Sand.SelectSandMaterialAndDailyDataTable dataTable, global::System.Nullable<int> xPieces_, string DateFrom, string DateTo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((xPieces_.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(xPieces_.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateFrom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DateFrom));
            }
            if ((DateTo == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(DateTo));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Sand.SelectSandMaterialAndDailyDataTable GetData(global::System.Nullable<int> xPieces_, string DateFrom, string DateTo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((xPieces_.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(xPieces_.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateFrom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DateFrom));
            }
            if ((DateTo == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(DateTo));
            }
            DataSet_Sand.SelectSandMaterialAndDailyDataTable dataTable = new DataSet_Sand.SelectSandMaterialAndDailyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private mSandControlChartTableAdapter _mSandControlChartTableAdapter;
        
        private mSandSieveValueTableAdapter _mSandSieveValueTableAdapter;
        
        private mSandWeeklyTestTableAdapter _mSandWeeklyTestTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public mSandControlChartTableAdapter mSandControlChartTableAdapter {
            get {
                return this._mSandControlChartTableAdapter;
            }
            set {
                this._mSandControlChartTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public mSandSieveValueTableAdapter mSandSieveValueTableAdapter {
            get {
                return this._mSandSieveValueTableAdapter;
            }
            set {
                this._mSandSieveValueTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public mSandWeeklyTestTableAdapter mSandWeeklyTestTableAdapter {
            get {
                return this._mSandWeeklyTestTableAdapter;
            }
            set {
                this._mSandWeeklyTestTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._mSandControlChartTableAdapter != null) 
                            && (this._mSandControlChartTableAdapter.Connection != null))) {
                    return this._mSandControlChartTableAdapter.Connection;
                }
                if (((this._mSandSieveValueTableAdapter != null) 
                            && (this._mSandSieveValueTableAdapter.Connection != null))) {
                    return this._mSandSieveValueTableAdapter.Connection;
                }
                if (((this._mSandWeeklyTestTableAdapter != null) 
                            && (this._mSandWeeklyTestTableAdapter.Connection != null))) {
                    return this._mSandWeeklyTestTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._mSandControlChartTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mSandSieveValueTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mSandWeeklyTestTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet_Sand dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mSandWeeklyTestTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.mSandWeeklyTest.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mSandWeeklyTestTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mSandControlChartTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.mSandControlChart.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mSandControlChartTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mSandSieveValueTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.mSandSieveValue.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mSandSieveValueTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet_Sand dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mSandWeeklyTestTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.mSandWeeklyTest.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mSandWeeklyTestTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mSandControlChartTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.mSandControlChart.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mSandControlChartTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mSandSieveValueTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.mSandSieveValue.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mSandSieveValueTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet_Sand dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._mSandSieveValueTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.mSandSieveValue.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mSandSieveValueTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mSandControlChartTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.mSandControlChart.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mSandControlChartTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mSandWeeklyTestTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.mSandWeeklyTest.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mSandWeeklyTestTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet_Sand dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._mSandControlChartTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mSandControlChartTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mSandSieveValueTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mSandSieveValueTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mSandWeeklyTestTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mSandWeeklyTestTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._mSandControlChartTableAdapter != null)) {
                    revertConnections.Add(this._mSandControlChartTableAdapter, this._mSandControlChartTableAdapter.Connection);
                    this._mSandControlChartTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mSandControlChartTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mSandControlChartTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mSandControlChartTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mSandControlChartTableAdapter.Adapter);
                    }
                }
                if ((this._mSandSieveValueTableAdapter != null)) {
                    revertConnections.Add(this._mSandSieveValueTableAdapter, this._mSandSieveValueTableAdapter.Connection);
                    this._mSandSieveValueTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mSandSieveValueTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mSandSieveValueTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mSandSieveValueTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mSandSieveValueTableAdapter.Adapter);
                    }
                }
                if ((this._mSandWeeklyTestTableAdapter != null)) {
                    revertConnections.Add(this._mSandWeeklyTestTableAdapter, this._mSandWeeklyTestTableAdapter.Connection);
                    this._mSandWeeklyTestTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mSandWeeklyTestTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mSandWeeklyTestTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mSandWeeklyTestTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mSandWeeklyTestTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._mSandControlChartTableAdapter != null)) {
                    this._mSandControlChartTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mSandControlChartTableAdapter]));
                    this._mSandControlChartTableAdapter.Transaction = null;
                }
                if ((this._mSandSieveValueTableAdapter != null)) {
                    this._mSandSieveValueTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mSandSieveValueTableAdapter]));
                    this._mSandSieveValueTableAdapter.Transaction = null;
                }
                if ((this._mSandWeeklyTestTableAdapter != null)) {
                    this._mSandWeeklyTestTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mSandWeeklyTestTableAdapter]));
                    this._mSandWeeklyTestTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591